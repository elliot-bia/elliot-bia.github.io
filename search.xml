<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[巨硬Win10与Office激活]]></title>
    <url>%2F2019%2F08%2F17%2FMS_activate%2F</url>
    <content type="text"><![CDATA[00 前言闲来无事，刚好遇到了激活类的问题，以及群里有人问到了，就写一下微软激活类的文章吧。 由于激活类存在时效性，因此不会对此文章进行更新，能用一天是一天，实在不行用报毒的KMS搞他一波 01 激活WindowsWindows版本有几类，具体哪几类自己百度，我只推荐专业版和企业长期支持版LTSB Windows专业版激活步骤 1234567slmgr.vbs /upkslmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GXslmgr /skms zh.us.toslmgr /ato 用管理员权限打开的CMD或者PowerShell都可以 家庭版可用密钥 ： PPBK3-M92CH-MRR9X-34Y9P-7CH2F 02 激活officeoffice同样有很多版本，我只安装需要的Word,Excel,PowerPoint这三件套，在安装的时候选择自定义选项把其他的插件取消勾选就好，具体有机会再演示 激活步骤如下： 1234cd C:\Program Files\Microsoft Office\Office16cscript ospp.vbs /inpkey:XQNVK-8JYDB-WJ9W3-YJ8YR-WFG99cscript ospp.vbs /sethst:kms.03k.orgcscript ospp.vbs /act 操作步骤同Windows激活，第一条命令是打开office安装目录，详细可参考参考链接1 : ospp.vbs在哪里？ 附上可能用得到的密钥 ： 1234567Office Professional Plus 2016：XQNVK-8JYDB-WJ9W3-YJ8YR-WFG99Office Standard 2016：JNRGM-WHDWX-FJJG3-K47QV-DRTFMProject Professional 2016：YG9NW-3K39V-2T3HJ-93F3Q-G83KTProject Standard 2016：GNFHQ-F6YQM-KQDGJ-327XX-KQBVC document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>other</category>
      </categories>
      <tags>
        <tag>Microsoft</tag>
        <tag>Activate</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[虚拟机上网相关]]></title>
    <url>%2F2019%2F08%2F17%2Fnetwork_in_VM%2F</url>
    <content type="text"><![CDATA[00 前言今天我要讲一下关于虚拟机上网的问题，NAT，桥接，让宿主机通过虚拟机上网。来吧，一起探究 01. 预备知识 首先参考这两个链接，很有用 NAT转换 桥接模式 之后就是设置IP的操作 Windows下的ipconfig/release SPECIFY_NETWORK_ADAPTER(etho0;WLAN) 释放指定网卡，然后重设IP Linux下设置IP地址1234__ip地址配置__ifconfig //查看与配置网络状态命令ifconfig eth0 192.168.0.200 netmask 255.255.255.0 //临时设置eth0网卡的ip地址与子网掩码service network restart //重启网络服务 02. 宿主机通过虚拟机上网(桥接)通过参考链接的网络拓扑图我们可以清楚VMWare软件的网卡配置原理 首先，让虚拟机获得IP，测试能否上网 第二，释放掉宿主机IP，设置新IP，并设置虚拟机IP为网关地址 进行测试 03. 宿主机通过虚拟机上网(NAT)这个就是 难点 了.23333,其实如果能看懂网络拓扑图，问题也不难 最重要的点就是：如何通过VMnet8上网而不是宿主机的物理网卡，于此同时又不停用宿主机物理网卡(因为虚拟机出口网关要用) 这样就显得有点 没事找事干 了。 这里没有其他特别好的办法，也就VPN了 04. 总结没事瞎折腾找资料写着玩 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Network</category>
      </categories>
      <tags>
        <tag>VM</tag>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[私有云搭建, 打造家庭网络中心]]></title>
    <url>%2F2019%2F08%2F17%2Fprivate_cloud_and_more%2F</url>
    <content type="text"><![CDATA[00 前言最近博客更新的内容少了，主要是最近太累了，又接近考试了，所以不能权衡两方面的工作 最近有了搭建私有云的想法，实现目的有其下几个： 离线下载（主要是百度云离线、下载） 家庭数据备份（如相片） 数据同步（私有云） （个人服务器） 0.1 HTPC + 离线下载主要是为了能够高清看美剧（1080P），国内没有1080P在线看网站（基本都是720P），国外高清源没有中英字幕 解决办法 ： 下载无字幕版，加字幕 (隐藏坑点 ： 投影到电视盒子的时候是否可以添加字幕？) 新增问题 : 如何搭建一个网站可以在移动端进行观看？新解决办法 ： kodi + emby 0.2 家庭数据备份我们会遇到这样的一个场景 ： 外出游玩时弄了很多相片，导致手机存储空间越来越小 主要是相片，应用场景为 ： 可以通过一个APP将相片上传到NAS，网络环境可以为内外网 01 基本设置基本定了，上X86处理器，win10系统 esxi底层 + Windows自带资源池 ZFS存储服务器 + 软路由 + HTPC + NAS 参考资料：总方向 ~ 配置ZFS存储服务器 ~ zfs过于麻烦，选用Windows自带资源池freenas与omnios+napp-it的速度对比 1.1 HTPC 设置使用kodi，很好用的播放器，暂定为Win10机上的HTPC播放器 参考资料1参考资料2 另外对于本地媒体库可参考链接 使用emby 官方链接 这东西真的是太棒了！！！ 1.2 HTPC 总结HTPC基本告一段落，win10机器同时启用kodi作为HTPC，使用emby作为网络流媒体播放器！ 字幕kodi可以自选，emby可以通过同样的命名可进行识别。 02 软路由软路由要求 ： 5G WiFi （取决于AP）和 无缝漫游 （DHCP的IP地址不变） 2.1 AP选择AC和AP是什么 需要终端和AP同时支持无缝漫游才行，这里推荐Ubnt 捷联讯通的AP方案，支持5G WiFi和无缝漫游 参考链接 2.2 软路由设置软路由lede入门阅读 首先，使用hyper-V虚拟机，下载LEDE的虚拟机vmdk镜像 这里原本是gz，通过一个工具转为vmdk，这个网站已经给了转好后的文件，参考即可（注意坑点） 然后安装它 安装链接2 软路由就告一段落了~ 坑点1 ： 注意下载的镜像是否与虚拟机设置一致为uefi或legacy 坑点2 ： 好像需要在外部虚拟交换机上更改IP才行，问题不大 最好的编译参考链接 完美设置链接完美设置链接2 分割线 参考资料1参考了解2 编译参考链接 [] 03 硬盘测试使用Windows自带资源池，现在测试性能。 已在虚拟机上做完实验，镜像类资源池（raid1可以完美支持单盘损坏替换） raid0出了点问题，不过问题不大，所以不再测试。 推荐阅读: 参考链接 04 黑裙辉老旧版本参考 黑裙辉的应该有挺多教程的，先暂置吧，看啥时候有空就直接上手了 先弄到这里吧，以后上真机了再慢慢操作 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Network</category>
        <category>Home</category>
      </categories>
      <tags>
        <tag>Private Cloud</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[tpot安装与介绍]]></title>
    <url>%2F2019%2F08%2F17%2Ftpot_installation%2F</url>
    <content type="text"><![CDATA[00 前言某日接到一个任务, 搞定一个蜜罐: tpot让我一个菜鸡来干这个, 心虚的很 今日份的任务有两个:第一个是如何搭建第二个是简单使用办法 所有的问题解决最好办法就是参考官方文档. 01 搭建前言官方搭建文档-英官当搭建文档-视频-旧-16.0这里提一句, 版本号是按照年份进行命令的, [官方博客]在这(http://dtag-dev-sec.github.io/) 安装方式有三种: ISO镜像安装 从Linux系统中直接安装 自己创建ISO镜像 问题不大, 网络上基本都在推荐第二种方法, 因为说可以手动进行调整…个人认为太麻烦. 我认为第一种方法最合适, 因为不用系统啥balabala的弄, 省心. 闲话少说, 开干 02 搭建实操安装条件: 稳定的DHCP网络这里稳定就不说了, 下载的东西还挺大的, 具体就不知道了, 从33M的iso文件到8G多大的虚拟硬盘, 从防火墙看下载了2G左右的文件DHCP, 我这里跳过了静态IP的配置, 可能这里会是一个坑点, 晚点再解决, 这里先占个位(官方文档要求DHCP) 下载官方ISO文件, 19.03链接在这(github下载) 安装, 对硬件要求略高, 这里贴出配置要求: 6-8 GB RAM (less RAM is possible but might introduce swapping) 128 GB SSD (smaller is possible but limits the capacity of storing events) Network via DHCP A working, non-proxied, internet connection 贴一下我的配置 接下来就是毫无难度的安装了, 然后设置密码, 设置web端账号和密码, 两个安装参考链接, 里面还包含了一些介绍, 推荐阅读 我这边2M/s的小水管大概2个小时完成安装 安装好以后有两个界面: 1, web管理界面: 64297 和 2, 主机管理界面: 64294, 均用https访问 安装好后界面如下:VM界面web管理界面, 端口64297(填web账号密码)主机管理界面, 端口64294(填主机账号密码) 03 介绍安装到此就告一段落, 接下来看一下这玩意怎么用 Dashboard这里有很多现成可用的大版, 各种高大上, 分别对应各个蜜罐的视图 adbhoney, ciscoasa, conpot, cowrie, dionaea, elasticpot, glastopf, glutton, heralding, honeypy, honeytrap, mailoney, medpot, rdpy, snare, tanner 上面各个蜜罐的介绍就看官方文档吧 实用工具在界面上方会有5个工具 分别对应:Furthermore we use the following tools Cockpit for a lightweight, webui for docker, os, real-time performance monitoring and web terminal. Cyberchef a web app for encryption, encoding, compression and data analysis. ELK stack to beautifully visualize all the events captured by T-Pot. Elasticsearch Head a web front end for browsing and interacting with an Elastic Search cluster. Spiderfoot a open source intelligence automation tool. Suricata a Network Security Monitoring engine. Discover界面这个界面是用来过滤包, 所有的数据包都在这里, 然后可以经过左边的筛选出http包头, user-agent等数据, 时间戳等, 右上角就有很方便的设置 Visualize界面那么这个界面用来干啥的呢. 是用来展示可视化界面的, 这里还可以新建一个自定义可视化视图, 例如饼状图, 柱状图等 Dev Tools界面难度太高, 个人认为是大佬们用的, 这里就跳过了吧… Monitoring界面顾名思义, 就知道这个是用来monitor的, 和DashBoard不一样的是, 这里可以监视5个实用工具的状态和硬件信息 Management界面这里就是关于一些设置的东东, 包括了远程主机, 过滤器设置等东西, 用得上的时候再说吧 04 后记emmm, 略显简陋的blog, 大概了解就好, 简单了解以后还是很好上手的. Done 05 后后记安装完以后, 可以用 sudo su 命令切换成root, 默认是Debian, 操作命令就不献丑贴出来的, 更改IP啥的操作都是可以进行的 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>other</category>
      </categories>
      <tags>
        <tag>tpot</tag>
        <tag>Honey Pot</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[代理类集合(持续更新)]]></title>
    <url>%2F2019%2F08%2F17%2Fproxy_in_all%2F</url>
    <content type="text"><![CDATA[00 前言代理的事情是真的烦, 国内的网络环境真是辣鸡, 现在把所有的代理都集合一起, 免得到处找 01 终端代理类参考链接: 让终端走代理的几种方法 如何让终端命令比如apt、这些走代理？ 比较好的方法是proxychains，或者export也可以 export的范围会小一点，但是会更方便 比如wget、curl，proxychains就很万能了，但是每次都要在前面加语句，略为麻烦，主要针对一些不适用 02 fish在 ~/.config/fish/config.fish 中设置，兼容bashrc指令 03 git命令为 git config --global/local http.proxy 'http/socks5://127.0.0.1:1080' git config --global/local https.proxy 'https/socks5://127.0.0.1:1080' 04 shell/bashrc命令为 123alias setproxysocks5='export ALL_PROXY=socks5h://127.0.0.1:10808'alias unsetproxy='unset ALL_PROXY'alias setproxyhttp='export ALL_PROXY=http://127.0.0.1:10888' ##v2ray和curl会有socks5的冲突,从网上找到的参考链接里可以发现，我们加上socks5h就可以了 对于 socks5 和 socks5h 的区别： socks5h: the hostname is resolved by the SOCKS server (also known as CURLPROXY_SOCKS5_HOSTNAME type);socks5: the hostname is resolved locally; 也就是说socks5适合本地能够解析目标主机域名(比如github.com)但是访问速度慢,来提高下载速度socks5h用与本地不能解析目标主机域名(比如google),由代理服务器解析目标主机域名 05 npm12npm config set proxy http://server:portnpm config set https-proxy http://server:port 待补充 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>Network</category>
        <category>Continuously Update</category>
      </categories>
      <tags>
        <tag>Proxy</tag>
        <tag>Continuously Update</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo安装后续2]]></title>
    <url>%2F2019%2F08%2F17%2Fhexo_installation_2%2F</url>
    <content type="text"><![CDATA[00 前言继无限折腾后, 终于把博客弄成了自己喜欢的模样, 赞一个! 01 折腾事项折腾了许多东东, 不过最着急的是版本太新, 自己找不到地方可以调整的, 只能换成旧版5.x的虽然7.x版本的新特性很多, 也很方便, 但教程始终不多, 还特别多误导, 网上的教程除了抄还是抄拥有阅读官方文档的能力很重要也就是我英语得抓紧学了 02 优化项目bgm, bg picture, copyright, code copy, icp等等, 都加上去了 03 博客迁移计划啊, 心态巨崩, 看我怎么把我的旧博客迁移回来, 包括了图片,最重要的还是要重新整理, 心态巨崩 新版博客计划: 取消掉过多的参考链接, 参考链接均详细描述 进行详细tag标志, 以及categories分类 对于未完成的blog进行持续更新tag和categories, 完成后进行删除 后续新增英文blog计划 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客安装进行时]]></title>
    <url>%2F2019%2F08%2F16%2Fhexo_installation%2F</url>
    <content type="text"><![CDATA[00 前言换博客, 辣鸡wordpress 01 安装本机安装git, Node.js设置npm代理: 12npm config set proxy http://server:portnpm config set https-proxy http://server:port 然后打开cmd 运行npm install -g hexo 安装hexo新建一个文件夹，如MyBlog进入该文件夹内，右击运行git，输入：hexo init（生成hexo模板, 从GitHub上download下来） 生成完模板，运行npm install最后运行：hexo server （运行程序，访问本地localhost:4000可以看到博客已经搭建成功） 02 图片测试用, 放在source/upload_image使用的时候就/upload_image 03 音乐参考网易云的mp3链接:http://music.163.com/song/media/outer/url?id=ID数字.mp3通过分享的审查元素可以找到图片最后的\themes\next\source\dist\music.js格式为: 123456{ name: "", artist: '', url: 'http://music.163.com/song/media/outer/url?id=.mp3', cover: '',} 04 美化这里美化直接百度吧, 注意版本为NexT6.x以上 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
